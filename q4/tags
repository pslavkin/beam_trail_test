!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!C++	name	/aliased names/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!C	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C	m,member	/struct, and union members/
!_TAG_KIND_DESCRIPTION!C	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!C++	c,class	/classes/
!_TAG_KIND_DESCRIPTION!C++	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C++	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C++	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C++	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C++	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C++	m,member	/class, struct, and union members/
!_TAG_KIND_DESCRIPTION!C++	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!C++	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C++	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C++	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C++	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!Make	I,makefile	/makefiles/
!_TAG_KIND_DESCRIPTION!Make	m,macro	/macros/
!_TAG_KIND_DESCRIPTION!Make	t,target	/targets/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!C	1.1	/current.age/
!_TAG_PARSER_VERSION!C++	1.1	/current.age/
!_TAG_PARSER_VERSION!Make	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/pslavkin/test/beam_trail/q4/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.1.0	/v6.1.0/
!_TAG_ROLE_DESCRIPTION!C!function	foreigndecl	/declared in foreign languages/
!_TAG_ROLE_DESCRIPTION!C!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!C!struct	foreigndecl	/declared in foreign languages/
!_TAG_ROLE_DESCRIPTION!C++!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C++!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C++!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!Make!makefile	included	/included/
!_TAG_ROLE_DESCRIPTION!Make!makefile	optional	/optionally included/
BIN	Makefile	/^BIN = q4.out	$/;"	m
CC	Makefile	/^CC		= gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS	= -Wall -g$/;"	m
DRIVER_I2C_H	driver_i2c.h	/^#define DRIVER_I2C_H$/;"	d
I2C_write	driver_i2c.c	/^void I2C_write(uint8_t address, uint8_t* data, size_t data_lenght, void (*callback)(bool))$/;"	f	typeref:typename:void
LDFLAGS	Makefile	/^LDFLAGS = -lm$/;"	m
OBJ	Makefile	/^OBJ = $(SRC:.c=.o)$/;"	m
QUEUE_LIB_H	queue_lib.h	/^#define QUEUE_LIB_H$/;"	d
QUEUE_SIZE	queue_lib.h	/^#define QUEUE_SIZE /;"	d
QUEUE_SIZE	queues_lib.c	/^#define QUEUE_SIZE /;"	d	file:
Queue	queues_lib.c	/^} Queue;$/;"	t	typeref:struct:__anon6c52a7240108	file:
SRC	Makefile	/^SRC = main.c \\$/;"	m
TASK_A_H	task_a.h	/^#define TASK_A_H$/;"	d
TASK_B_H	task_b.h	/^#define TASK_B_H$/;"	d
TASK_C_H	task_c.h	/^#define TASK_C_H$/;"	d
TASK_I2C_H	task_i2c.h	/^#define TASK_I2C_H$/;"	d
__anon6c52a7240108	queues_lib.c	/^typedef struct {$/;"	s	file:
address	queue_lib.h	/^   uint8_t  address;$/;"	m	struct:msg_t	typeref:typename:uint8_t
all	Makefile	/^all:$/;"	t
buffer	queue_lib.h	/^    struct          msg_t buffer[ QUEUE_SIZE ];$/;"	m	struct:queue_t	typeref:struct:msg_t[]
buffer	queues_lib.c	/^    int buffer[QUEUE_SIZE];$/;"	m	struct:__anon6c52a7240108	typeref:typename:int[]	file:
callback	queue_lib.h	/^   void     (*callback)(bool);$/;"	m	struct:msg_t	typeref:typename:void (*)(bool)
clean	Makefile	/^clean:$/;"	t
consumer	queues_lib.c	/^void *consumer(void *arg) {$/;"	f	typeref:typename:void *
count	queue_lib.h	/^    int             count;$/;"	m	struct:queue_t	typeref:typename:int
count	queues_lib.c	/^    int count;$/;"	m	struct:__anon6c52a7240108	typeref:typename:int	file:
data	queue_lib.h	/^   uint8_t* data;$/;"	m	struct:msg_t	typeref:typename:uint8_t *
data_lenght	queue_lib.h	/^   size_t   data_lenght;$/;"	m	struct:msg_t	typeref:typename:size_t
dequeue	queues_lib.c	/^int dequeue(Queue *q) {$/;"	f	typeref:typename:int
destroy_queue	queues_lib.c	/^void destroy_queue(Queue *q) {$/;"	f	typeref:typename:void
enqueue	queues_lib.c	/^void enqueue(Queue *q, int value) {$/;"	f	typeref:typename:void
front	queue_lib.h	/^    int             front;$/;"	m	struct:queue_t	typeref:typename:int
front	queues_lib.c	/^    int front;$/;"	m	struct:__anon6c52a7240108	typeref:typename:int	file:
i2cEndCallback	task_a.c	/^static void i2cEndCallback(bool status) $/;"	f	typeref:typename:void	file:
i2cEndCallback	task_b.c	/^static void i2cEndCallback(bool status) $/;"	f	typeref:typename:void	file:
i2cEndCallback	task_c.c	/^static void i2cEndCallback(bool status) $/;"	f	typeref:typename:void	file:
i2cEndCallback	task_i2c.c	/^static void i2cEndCallback(bool status) $/;"	f	typeref:typename:void	file:
i2cEndStatus	task_i2c.c	/^static bool   i2cEndStatus;$/;"	v	typeref:typename:bool	file:
init_queue	queues_lib.c	/^void init_queue(Queue *q) {$/;"	f	typeref:typename:void
lock	queue_lib.h	/^    pthread_mutex_t lock;$/;"	m	struct:queue_t	typeref:typename:pthread_mutex_t
lock	queues_lib.c	/^    pthread_mutex_t lock;$/;"	m	struct:__anon6c52a7240108	typeref:typename:pthread_mutex_t	file:
main	main.c	/^int main(void) $/;"	f	typeref:typename:int
main	queues_lib.c	/^int main() {$/;"	f	typeref:typename:int
msg	driver_i2c.c	/^static struct msg_t msg;$/;"	v	typeref:struct:msg_t	file:
msg_t	queue_lib.h	/^struct msg_t {$/;"	s
not_empty	queue_lib.h	/^    pthread_cond_t  not_empty;$/;"	m	struct:queue_t	typeref:typename:pthread_cond_t
not_empty	queues_lib.c	/^    pthread_cond_t not_empty;$/;"	m	struct:__anon6c52a7240108	typeref:typename:pthread_cond_t	file:
not_full	queue_lib.h	/^    pthread_cond_t  not_full;$/;"	m	struct:queue_t	typeref:typename:pthread_cond_t
not_full	queues_lib.c	/^    pthread_cond_t not_full;$/;"	m	struct:__anon6c52a7240108	typeref:typename:pthread_cond_t	file:
producer	queues_lib.c	/^void *producer(void *arg) {$/;"	f	typeref:typename:void *
q	task_a.c	/^static struct queue_t q;$/;"	v	typeref:struct:queue_t	file:
q	task_b.c	/^static struct queue_t q;$/;"	v	typeref:struct:queue_t	file:
q	task_c.c	/^static struct queue_t q;$/;"	v	typeref:struct:queue_t	file:
q	task_i2c.c	/^static struct queue_t q;$/;"	v	typeref:struct:queue_t	file:
queue_dequeue	queue_lib.c	/^struct msg_t queue_dequeue(struct queue_t *q) $/;"	f	typeref:struct:msg_t
queue_destroy	queue_lib.c	/^void queue_destroy(struct queue_t *q) $/;"	f	typeref:typename:void
queue_enqueue	queue_lib.c	/^void queue_enqueue(struct queue_t *q, struct msg_t value) $/;"	f	typeref:typename:void
queue_init	queue_lib.c	/^void queue_init(struct queue_t *q) $/;"	f	typeref:typename:void
queue_t	queue_lib.h	/^struct queue_t {$/;"	s
rear	queue_lib.h	/^    int             rear;$/;"	m	struct:queue_t	typeref:typename:int
rear	queues_lib.c	/^    int rear;$/;"	m	struct:__anon6c52a7240108	typeref:typename:int	file:
task	driver_i2c.c	/^void* task(void* arg) $/;"	f	typeref:typename:void *
taskA	task_a.c	/^void* taskA(void* arg) $/;"	f	typeref:typename:void *
taskA_enqueue	task_a.c	/^bool taskA_enqueue(struct msg_t msg) $/;"	f	typeref:typename:bool
taskB	task_b.c	/^void* taskB(void* arg) $/;"	f	typeref:typename:void *
taskB_enqueue	task_b.c	/^bool taskB_enqueue(struct msg_t msg) $/;"	f	typeref:typename:bool
taskC	task_c.c	/^void* taskC(void* arg) $/;"	f	typeref:typename:void *
taskC_enqueue	task_c.c	/^bool taskC_enqueue(struct msg_t msg) $/;"	f	typeref:typename:bool
taskI2C	task_i2c.c	/^void* taskI2C(void* arg) $/;"	f	typeref:typename:void *
taskI2C_enqueue	task_i2c.c	/^bool taskI2C_enqueue(struct msg_t msg) $/;"	f	typeref:typename:bool
thread	driver_i2c.c	/^static pthread_t    thread;$/;"	v	typeref:typename:pthread_t	file:
