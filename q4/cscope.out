cscope 15 $HOME/test/beam_trail/q4               0000295208
	@config.h

1 #i‚de‡
CONFIG_H


2 
	#CONFIG_H


	)

5 
	#TASK_A_ENABLE
 
åue


	)

6 
	#TASK_A_PERIOD_MS
 500

7 
	#TASK_A_DATA_LENGTH
 1000

8 
	#TASK_A_LOG_ENABLE
 
åue


	)

11 
	#TASK_B_ENABLE
 
Ál£


	)

12 
	#TASK_B_PERIOD_MS
 50

13 
	#TASK_B_DATA_LENGTH
 10

14 
	#TASK_B_LOG_ENABLE
 
åue


	)

17 
	#TASK_C_ENABLE
 
Ál£


	)

18 
	#TASK_C_PERIOD_MS
 100

	)

19 
	#TASK_C_DATA_LENGTH
 10

20 
	#TASK_C_LOG_ENABLE
 
åue


	)

22 
	#LOG_QUEUE_ENABLE
 
åue


	)

23 
	#TASK_I2C_LOG_ENABLE
 
Ál£


	)

24 
	#I2C_DRIVER_LOG_ENABLE
 
åue


	)

25 
	#TIMING_LOG_ENABLE
 
Ál£


	)

27 
	#MAX_QUEUE_TOUT_MS
 1000000

28 
	#QUEUE_SIZE
 10

	)

29 
	#QUEUE_MARGIN
 2

	)

31 
	#I2C_DRIVER_ERRATA_RATE
 0

	)

32 
	#TASK_I2C_ACK_EXCEED_TIME_MS
 2000

	)

	@driver_i2c.c

1 
	~<°dio.h
>

2 
	~<°döt.h
>

3 
	~<°dboﬁ.h
>

4 
	~<uni°d.h
>

5 
	~<°dlib.h
>

6 
	~<±hªad.h
>

7 
	~"c⁄fig.h
"

8 
	~"log.h
"

9 
	~"timög.h
"

10 
	~"queue_lib.h
"

11 
	~"drivî_i2c.h
"

13 
	#MODULE
 "DRIVER_I2C"

	)

14 
	#LOG_COLOR
 6

	)

15 
	#LOG_ENABLE
 
I2C_DRIVER_LOG_ENABLE


	)

17 
±hªad_t
 
	gthªad
;

18 
queue_t
 
	gq
;

21 * 
	$èsk
(* 
¨g
)

23 
msg_t
 
msg
;

25 
	`LOG
("running.\r\n");

26 
	`queue_öô
 ( &
q
 );

27 
åue
) {

29 
	`queue_dequeue
(&
q
, &
msg
, 
MAX_QUEUE_TOUT_MS
);

31 
	`LOG
("tx begö: %u - %†- %zu[ms]\r\n",
msg
.
addªss
, msg.
d©a
, msg.
d©a_Àngth
);

33 
	`dñayMs
(
msg
.
d©a_Àngth
);

34 
	`LOG
("txÉnd : %u - %†- %zu[ms]\r\n",
msg
.
addªss
, msg.
d©a
, msg.
d©a_Àngth
);

38 if–
I2C_DRIVER_ERRATA_RATE
==0 || 
	`ønd
() % I2C_DRIVER_ERRATA_RATE != 0 ) {

39 
msg
.
	`ˇŒback
(
åue
);

42 
	`LOG
("I2C driverÉrrataÉrror => don't send cback\r\n");

45  
NULL
;

46 
	}
}

49 
I2C_wrôe
(
uöt8_t
 
addªss
, uöt8_t* 
d©a
, 
size_t
 
d©a_Àngth
, (*
ˇŒback
)(
boﬁ
))

51 
msg_t
 
msg
 = {

52 .
addªss
 =áddress,

53 .
d©a
 = data,

54 .
d©a_Àngth
 = data_length,

55 .
ˇŒback
 = callback,

57 
	`queue_íqueue
(&
q
, 
msg
, 
MAX_QUEUE_TOUT_MS
);

58 
	}
}

60 
	$I2C_öô
()

62 
	`±hªad_¸óã
(&
thªad
 ,
NULL
 ,
èsk
 ,NULL);

63 
	}
}

	@driver_i2c.h

1 #i‚de‡
DRIVER_I2C_H


2 
	#DRIVER_I2C_H


	)

4 
I2C_öô
 ( ) ;

5 
I2C_wrôe
 ( 
uöt8_t
 
addªss
, uöt8_t* 
d©a
, 
size_t
 
d©a_Ànght
, (*
ˇŒback
 )(
boﬁ
));

	@log.h

1 #i‚de‡
LOG_H


2 
	#LOG_H


	)

4 
	#LOG
(
fmt
, ...) \

5 if(
LOG_ENABLE
==
åue
) { \

6 
time•ec
 
ts
; \

7 
	`˛ock_gëtime
(
CLOCK_REALTIME
, &
ts
);\

8 
uöt32_t
 
now
 = ()(
ts
.
tv_£c
 * 1000Ë+ (ts.
tv_n£c
 / 1000000); \

9 
	`Ârötf
(
°dout
,"\033[38;5;%um" "| %08u | %10†| %25†| " 
fmt
, 
LOG_COLOR
,
now
, 
MODULE
,
__func__
, ##
__VA_ARGS__
); \

10 
	`fÊush
(
°dout
); \

11 }

	)

	@main.c

1 
	~<°dio.h
>

2 
	~<°döt.h
>

3 
	~<°dboﬁ.h
>

4 
	~<uni°d.h
>

5 
	~<°dlib.h
>

6 
	~<±hªad.h
>

7 
	~"c⁄fig.h
"

8 
	~"timög.h
"

9 
	~"queue_lib.h
"

10 
	~"èsk_a.h
"

11 
	~"èsk_b.h
"

12 
	~"èsk_c.h
"

13 
	~"èsk_i2c.h
"

14 
	~"log.h
"

16 
	$maö
()

19 
	`öôTaskI2C
 ( );

20 
	`öôTaskA
 ( );

21 
	`öôTaskB
 ( );

22 
	`öôTaskC
 ( );

24 
åue
) {

25 
	`¶ìp
(1);

29 
	}
}

	@queue_lib.c

1 
	~<°dio.h
>

2 
	~<°döt.h
>

3 
	~<°dboﬁ.h
>

4 
	~<uni°d.h
>

5 
	~<°dlib.h
>

6 
	~<±hªad.h
>

7 
	~<î∫o.h
>

8 
	~"c⁄fig.h
"

9 
	~"log.h
"

10 
	~"timög.h
"

11 
	~"queue_lib.h
"

13 
	#MODULE
 "QUEUE"

	)

14 
	#LOG_COLOR
 10

	)

15 
	#LOG_ENABLE
 
LOG_QUEUE_ENABLE


	)

18 
	$queue_öô
(
queue_t
 *
q
)

20 
q
->
‰⁄t
 = 0;

21 
q
->
ª¨
 = 0;

22 
q
->
cou¡
 = 0;

23 
	`±hªad_muãx_öô
 ( &
q
->
lock
 ,
NULL
 );

24 
	`±hªad_c⁄d_öô
 ( &
q
->
nŸ_em±y
 ,
NULL
 );

25 
	`±hªad_c⁄d_öô
 ( &
q
->
nŸ_fuŒ
 ,
NULL
 );

26 
	}
}

28 
	$queue_em±y
(
queue_t
 *
q
)

30 
msg_t
 
msg
;

31 
	`queue_dequeue
(
q
, &
msg
, 0)) {

32 
	`LOG
("em±y %u - %s\r\n",
msg
.
addªss
, msg.
d©a
);

35 
	}
}

37 
boﬁ
 
	$queue_íqueue
(
queue_t
 *
q
, 
msg_t
 
msg
,
uöt32_t
 
toutMs
)

39 
ªt
;

40 
time•ec
 
timeout
;

41 
boﬁ
 
™s
 = 
Ál£
;

43 
	`±hªad_muãx_lock
(&
q
->
lock
);

44 
timeout
 = 
	`ˇlcFutuª
(
toutMs
);

45 
ªt
 = 0;

46 
q
->
cou¡
 =(
QUEUE_SIZE
 - 
QUEUE_MARGIN
Ë&& 
ªt
 == 0) {

47 
ªt
 = 
	`±hªad_c⁄d_timedwaô
(&
q
->
nŸ_fuŒ
, &q->
lock
, &
timeout
);

49 i‡(
ªt
 != 0) {

50 
	`LOG
("-->Åimeout, dr› %u - %s\r\n",
msg
.
addªss
, msg.
d©a
);

52 
q
->
buf„r
[q->
ª¨
] = 
msg
;

53 
q
->
ª¨
 = (q->ª¨ + 1Ë% 
QUEUE_SIZE
;

54 
q
->
cou¡
++;

55 
	`±hªad_c⁄d_sig«l
(&
q
->
nŸ_em±y
);

56 
™s
 = 
åue
;

58 
	`±hªad_muãx_u∆ock
(&
q
->
lock
);

59  
™s
;

60 
	}
}

62 
boﬁ
 
	$queue_íqueueFr⁄t
(
queue_t
 *
q
, 
msg_t
 
msg
,
uöt32_t
 
toutMs
)

64 
ªt
;

65 
time•ec
 
timeout
;

66 
boﬁ
 
™s
 = 
Ál£
;

68 
	`±hªad_muãx_lock
(&
q
->
lock
);

69 
timeout
 = 
	`ˇlcFutuª
(
toutMs
);

70 
ªt
 = 0;

71 
q
->
cou¡
 =
QUEUE_SIZE
 && 
ªt
 == 0) {

72 
ªt
 = 
	`±hªad_c⁄d_timedwaô
(&
q
->
nŸ_fuŒ
, &q->
lock
, &
timeout
);

74 i‡(
ªt
 != 0) {

75 
	`LOG
("-->Åimeout, dr› %u - %s\r\n",
msg
.
addªss
, msg.
d©a
);

77 
q
->
‰⁄t
 = (q->‰⁄à- 1Ë% 
QUEUE_SIZE
;

78 
q
->
buf„r
[q->
‰⁄t
] = 
msg
;

79 
q
->
cou¡
++;

80 
	`±hªad_c⁄d_sig«l
(&
q
->
nŸ_em±y
);

81 
™s
 = 
åue
;

83 
	`±hªad_muãx_u∆ock
(&
q
->
lock
);

84  
™s
;

85 
	}
}

88 
boﬁ
 
	$queue_dequeue
(
queue_t
 *
q
, 
msg_t
* 
msg
, 
uöt32_t
 
toutMs
)

90 
ªt
;

91 
time•ec
 
timeout
;

92 
boﬁ
 
™s
 = 
Ál£
;

94 
	`±hªad_muãx_lock
(&
q
->
lock
);

95 
timeout
 = 
	`ˇlcFutuª
(
toutMs
);

96 
ªt
 = 0;

97 
q
->
cou¡
 =0 && 
ªt
 == 0) {

98 
ªt
 = 
	`±hªad_c⁄d_timedwaô
(&
q
->
nŸ_em±y
, &q->
lock
, &
timeout
);

100 i‡(
ªt
 !=0 ) {

101 
	`LOG
("-->Åimeout\r\n");

103 *
msg
 = 
q
->
buf„r
[q->
‰⁄t
];

104 
q
->
‰⁄t
 = (q->‰⁄à+ 1Ë% 
QUEUE_SIZE
;

105 
q
->
cou¡
--;

106 
™s
 = 
åue
;

107 
	`±hªad_c⁄d_sig«l
(&
q
->
nŸ_fuŒ
);

109 
	`±hªad_muãx_u∆ock
(&
q
->
lock
);

110  
™s
;

111 
	}
}

114 
	$queue_de°roy
(
queue_t
 *
q
)

116 
	`±hªad_muãx_de°roy
(&
q
->
lock
);

117 
	`±hªad_c⁄d_de°roy
(&
q
->
nŸ_em±y
);

118 
	`±hªad_c⁄d_de°roy
(&
q
->
nŸ_fuŒ
);

119 
	}
}

	@queue_lib.h

1 #i‚de‡
QUEUE_LIB_H


2 
	#QUEUE_LIB_H


	)

6 
	smsg_t
 {

8 
uöt8_t
 
	maddªss
;

9 
boﬁ
 
	m°©us
;

11 
uöt8_t
* 
	md©a
;

12 
size_t
 
	md©a_Àngth
;

13 (*
	mˇŒback
)(
	mboﬁ
);

16 
	squeue_t
 {

17 
msg_t
 
	mbuf„r
[ 
QUEUE_SIZE
 ];

18 
	m‰⁄t
;

19 
	mª¨
;

20 
	mcou¡
;

21 
±hªad_muãx_t
 
	mlock
;

22 
±hªad_c⁄d_t
 
	mnŸ_em±y
;

23 
±hªad_c⁄d_t
 
	mnŸ_fuŒ
;

26 
queue_öô
 ( 
queue_t
 *
q
 );

27 
queue_de°roy
 ( 
queue_t
 *
q
 );

28 
boﬁ
 
queue_íqueue
 ( 
queue_t
 *
q
 ,
msg_t
 
msg
 ,
uöt32_t
 
toutMs
 );

29 
boﬁ
 
queue_íqueueFr⁄t
 ( 
queue_t
 *
q
 ,
msg_t
 
msg
 ,
uöt32_t
 
toutMs
 );

30 
boﬁ
 
queue_dequeue
 ( 
queue_t
 *
q
 ,
msg_t
* 
msg
 ,
uöt32_t
 
toutMs
 );

31 
queue_em±y
 ( 
queue_t
 *
q
 );

	@queues_lib.c

2 
	~<uni°d.h
>

3 
	~<°dio.h
>

4 
	~<°dlib.h
>

5 
	~<±hªad.h
>

6 
	~<uni°d.h
>

10 
	mbuf„r
[
QUEUE_SIZE
];

11 
	m‰⁄t
;

12 
	mª¨
;

13 
	mcou¡
;

14 
±hªad_muãx_t
 
	mlock
;

15 
±hªad_c⁄d_t
 
	mnŸ_em±y
;

16 
±hªad_c⁄d_t
 
	mnŸ_fuŒ
;

17 } 
	tQueue
;

20 
	$öô_queue
(
Queue
 *
q
) {

21 
q
->
‰⁄t
 = 0;

22 
q
->
ª¨
 = 0;

23 
q
->
cou¡
 = 0;

24 
	`±hªad_muãx_öô
(&
q
->
lock
, 
NULL
);

25 
	`±hªad_c⁄d_öô
(&
q
->
nŸ_em±y
, 
NULL
);

26 
	`±hªad_c⁄d_öô
(&
q
->
nŸ_fuŒ
, 
NULL
);

27 
	}
}

30 
	$íqueue
(
Queue
 *
q
, 
vÆue
) {

31 
	`±hªad_muãx_lock
(&
q
->
lock
);

34 
q
->
cou¡
 =
QUEUE_SIZE
) {

35 
	`±hªad_c⁄d_waô
(&
q
->
nŸ_fuŒ
, &q->
lock
);

38 
q
->
buf„r
[q->
ª¨
] = 
vÆue
;

39 
q
->
ª¨
 = (q->ª¨ + 1Ë% 
QUEUE_SIZE
;

40 
q
->
cou¡
++;

42 
	`±hªad_c⁄d_sig«l
(&
q
->
nŸ_em±y
);

43 
	`±hªad_muãx_u∆ock
(&
q
->
lock
);

44 
	}
}

47 
	$dequeue
(
Queue
 *
q
) {

48 
	`±hªad_muãx_lock
(&
q
->
lock
);

51 
q
->
cou¡
 == 0) {

52 
	`±hªad_c⁄d_waô
(&
q
->
nŸ_em±y
, &q->
lock
);

55 
vÆue
 = 
q
->
buf„r
[q->
‰⁄t
];

56 
q
->
‰⁄t
 = (q->‰⁄à+ 1Ë% 
QUEUE_SIZE
;

57 
q
->
cou¡
--;

59 
	`±hªad_c⁄d_sig«l
(&
q
->
nŸ_fuŒ
);

60 
	`±hªad_muãx_u∆ock
(&
q
->
lock
);

62  
vÆue
;

63 
	}
}

66 
	$de°roy_queue
(
Queue
 *
q
) {

67 
	`±hªad_muãx_de°roy
(&
q
->
lock
);

68 
	`±hªad_c⁄d_de°roy
(&
q
->
nŸ_em±y
);

69 
	`±hªad_c⁄d_de°roy
(&
q
->
nŸ_fuŒ
);

70 
	}
}

73 *
	$¥odu˚r
(*
¨g
) {

74 
Queue
 *
q
 = (Queuê*)
¨g
;

75 
i
 = 0; i < 20; i++) {

76 
	`¥ötf
("Produ˚r: Enqueuög %d\n", 
i
);

77 
	`íqueue
(
q
, 
i
);

78 
	`¶ìp
(1);

80  
NULL
;

81 
	}
}

84 *
	$c⁄sumî
(*
¨g
) {

85 
Queue
 *
q
 = (Queuê*)
¨g
;

86 
i
 = 0; i < 20; i++) {

87 
vÆue
 = 
	`dequeue
(
q
);

88 
	`¥ötf
("C⁄sumî: Dequeued %d\n", 
vÆue
);

89 
	`¶ìp
(2);

91  
NULL
;

92 
	}
}

94 
	$maö
() {

95 
Queue
 
q
;

96 
	`öô_queue
(&
q
);

98 
±hªad_t
 
¥odu˚r_thªad
, 
c⁄sumî_thªad
;

101 
	`±hªad_¸óã
(&
¥odu˚r_thªad
, 
NULL
, 
¥odu˚r
, (*)&
q
);

102 
	`±hªad_¸óã
(&
c⁄sumî_thªad
, 
NULL
, 
c⁄sumî
, (*)&
q
);

105 
	`±hªad_joö
(
¥odu˚r_thªad
, 
NULL
);

106 
	`±hªad_joö
(
c⁄sumî_thªad
, 
NULL
);

108 
	`de°roy_queue
(&
q
);

110 
	}
}

	@task_a.c

1 
	~<°dio.h
>

2 
	~<°döt.h
>

3 
	~<°dboﬁ.h
>

4 
	~<uni°d.h
>

5 
	~<°dlib.h
>

6 
	~<±hªad.h
>

7 
	~"c⁄fig.h
"

8 
	~"log.h
"

9 
	~"timög.h
"

10 
	~"queue_lib.h
"

11 
	~"èsk_a.h
"

12 
	~"èsk_i2c.h
"

14 
	#MODULE
 "TASK_A"

	)

15 
	#LOG_COLOR
 2

	)

16 
	#TASK_PERIOD_MS
 
TASK_A_PERIOD_MS


	)

17 
	#TASK_ENABLE
 
TASK_A_ENABLE


	)

18 
	#TASK_DATA_LENGTH
 
TASK_A_DATA_LENGTH


	)

19 
	#LOG_ENABLE
 
TASK_A_LOG_ENABLE


	)

21 
±hªad_t
 
	gthªad
;

22 
queue_t
 
	gq
;

24 
	$i2cEndCÆlbackA
(
boﬁ
 
°©us
)

26 
msg_t
 
msg
 = {

27 .
°©us
 = status,

29 
	`queue_íqueue
(&
q
, 
msg
, 
MAX_QUEUE_TOUT_MS
);

30 
	}
}

32 * 
	$èsk
(* 
¨g
)

34 
msg_t
 
msg
;

35 
msg_t
 
msgAck
;

36 
i
 = 0;

38 
	`queue_öô
(&
q
);

39 
åue
) {

40 
	`dñayMs
(
TASK_PERIOD_MS
);

41 
	`LOG
("lo› %u\r\n",
i
);

43 
msg
.
addªss
 = 
i
;

44 
msg
.
ˇŒback
 = 
i2cEndCÆlbackA
;

45 
msg
.
d©a_Àngth
 = 
TASK_DATA_LENGTH
;

46 
msg
.
d©a
 = (
uöt8_t
*)
MODULE
;

47 
åue
) {

50 
	`èskI2C_íqueue
 ( 
msg
 );

52 
	`queue_dequeue
 ( &
q
, &
msgAck
, 
MAX_QUEUE_TOUT_MS
 )==
Ál£
)

55 
	`LOG
("I2Cáck: %u\r\n",
msgAck
.
°©us
);

56 if(
msgAck
.
°©us
==
Ál£
) {

57 
	`LOG
("--- Retry ---\r\n");

62 
i
++;

64  
NULL
;

65 
	}
}

68 
	$öôTaskA
()

70 if(
TASK_ENABLE
) {

71 
	`±hªad_¸óã
(&
thªad
 ,
NULL
 ,
èsk
 ,NULL);

73 
	}
}

	@task_a.h

1 #i‚de‡
TASK_A_H


2 
	#TASK_A_H


	)

4 
öôTaskA
();

	@task_b.c

1 
	~<°dio.h
>

2 
	~<°döt.h
>

3 
	~<°dboﬁ.h
>

4 
	~<uni°d.h
>

5 
	~<°dlib.h
>

6 
	~<±hªad.h
>

7 
	~"c⁄fig.h
"

8 
	~"log.h
"

9 
	~"timög.h
"

10 
	~"queue_lib.h
"

11 
	~"èsk_b.h
"

12 
	~"èsk_i2c.h
"

14 
	#MODULE
 "TASK_B"

	)

15 
	#LOG_COLOR
 13

	)

16 
	#TASK_PERIOD_MS
 
TASK_B_PERIOD_MS


	)

17 
	#TASK_ENABLE
 
TASK_B_ENABLE


	)

18 
	#TASK_DATA_LENGTH
 
TASK_B_DATA_LENGTH


	)

19 
	#LOG_ENABLE
 
TASK_B_LOG_ENABLE


	)

21 
±hªad_t
 
	gthªad
;

22 
queue_t
 
	gq
;

24 
	$i2cEndCÆlback
(
boﬁ
 
°©us
)

26 
msg_t
 
msg
 = {

27 .
°©us
 = status,

29 
	`queue_íqueue
(&
q
, 
msg
, 
MAX_QUEUE_TOUT_MS
);

30 
	}
}

32 * 
	$èsk
(* 
¨g
)

34 
msg_t
 
msg
;

35 
msg_t
 
msgAck
;

36 
i
 = 0;

38 
	`queue_öô
(&
q
);

39 
åue
) {

40 
	`dñayMs
(
TASK_PERIOD_MS
);

41 
	`LOG
("lo› %u\r\n",
i
);

43 
msg
.
addªss
 = 
i
;

44 
msg
.
ˇŒback
 = 
i2cEndCÆlback
;

45 
msg
.
d©a_Àngth
 = 
TASK_B_DATA_LENGTH
;

46 
msg
.
d©a
 = (
uöt8_t
*)
MODULE
;

47 
åue
) {

50 
	`èskI2C_íqueue
 ( 
msg
 );

52 
	`queue_dequeue
 ( &
q
, &
msgAck
, 
MAX_QUEUE_TOUT_MS
 )==
Ál£
)

55 
	`LOG
("I2Cáck: %u\r\n",
msgAck
.
°©us
);

56 if(
msgAck
.
°©us
==
Ál£
) {

57 
	`LOG
("--- Retry ---\r\n");

62 
i
++;

64  
NULL
;

65 
	}
}

68 
	$öôTaskB
()

70 if(
TASK_ENABLE
) {

71 
	`±hªad_¸óã
(&
thªad
 ,
NULL
 ,
èsk
 ,NULL);

73 
	}
}

	@task_b.h

1 #i‚de‡
TASK_B_H


2 
	#TASK_B_H


	)

4 
öôTaskB
();

	@task_c.c

1 
	~<°dio.h
>

2 
	~<°döt.h
>

3 
	~<°dboﬁ.h
>

4 
	~<uni°d.h
>

5 
	~<°dlib.h
>

6 
	~<±hªad.h
>

7 
	~"c⁄fig.h
"

8 
	~"log.h
"

9 
	~"timög.h
"

10 
	~"queue_lib.h
"

11 
	~"èsk_c.h
"

12 
	~"èsk_i2c.h
"

14 
	#MODULE
 "TASK_C"

	)

15 
	#LOG_COLOR
 4

	)

16 
	#TASK_PERIOD_MS
 
TASK_C_PERIOD_MS


	)

17 
	#TASK_ENABLE
 
TASK_C_ENABLE


	)

18 
	#TASK_DATA_LENGTH
 
TASK_C_DATA_LENGTH


	)

19 
	#LOG_ENABLE
 
TASK_C_LOG_ENABLE


	)

21 
	eèskSèã_t
 {

22 
	mTASK_STATE_TX
,

23 
	mTASK_STATE_RX
,

26 
±hªad_t
 
	gthªad
;

27 
queue_t
 
	gq
;

29 
	$i2cEndCÆlback
(
boﬁ
 
°©us
)

31 
msg_t
 
msg
 = {

32 .
°©us
 = status,

34 
	`queue_íqueue
(&
q
, 
msg
, 
MAX_QUEUE_TOUT_MS
);

35 
	}
}

37 * 
	$èsk
(* 
¨g
)

39 
msg_t
 
msg
;

40 
msg_t
 
msgAck
;

41 
èskSèã_t
 
°©e
 = 
TASK_STATE_TX
;

42 
i
 = 0;

44 
	`queue_öô
(&
q
);

45 
åue
) {

46 
	`dñayMs
(
TASK_PERIOD_MS
);

47 
	`LOG
("lo› %u\r\n",
i
);

48 
°©e
) {

49 
TASK_STATE_TX
:

51 
msg
.
addªss
 = 
i
;

52 
msg
.
ˇŒback
 = 
i2cEndCÆlback
;

53 
msg
.
d©a_Àngth
 = 
TASK_C_DATA_LENGTH
;

54 
msg
.
d©a
 = (
uöt8_t
*)
MODULE
;

56 if–
	`èskI2C_íqueueN⁄eBlock
 ( 
msg
 ) ) {

57 
°©e
 = 
TASK_STATE_RX
;

60 
	`LOG
("I2C queue is full, dropÅhe msg\r\n");

63 
TASK_STATE_RX
:

65 if–
	`queue_dequeue
 ( &
q
 ,&
msgAck
, 10)) {

67 
	`LOG
("I2Cáck: %u\r\n",
msgAck
.
°©us
);

68 
°©e
 = 
TASK_STATE_TX
;

71 
	`LOG
("I2CÅimeouàªadög, kì∞åyög %u\r\n",
msgAck
.
°©us
);

77 
i
++;

79  
NULL
;

80 
	}
}

83 
	$öôTaskC
()

85 if(
TASK_ENABLE
) {

86 
	`±hªad_¸óã
(&
thªad
 ,
NULL
 ,
èsk
 ,NULL);

88 
	}
}

	@task_c.h

1 #i‚de‡
TASK_C_H


2 
	#TASK_C_H


	)

4 
öôTaskC
();

	@task_i2c.c

1 
	~<°dio.h
>

2 
	~<°döt.h
>

3 
	~<°dboﬁ.h
>

4 
	~<uni°d.h
>

5 
	~<°dlib.h
>

6 
	~<±hªad.h
>

7 
	~"c⁄fig.h
"

8 
	~"log.h
"

9 
	~"timög.h
"

10 
	~"queue_lib.h
"

11 
	~"èsk_i2c.h
"

12 
	~"drivî_i2c.h
"

14 
	#MODULE
 "I2C"

	)

15 
	#LOG_COLOR
 7

	)

16 
	#LOG_ENABLE
 
TASK_I2C_LOG_ENABLE


	)

18 
±hªad_t
 
	gthªad
;

19 
queue_t
 
	gq
;

20 
queue_t
 
	gqAck
;

22 
	$i2cEndCÆlback
(
boﬁ
 
°©us
)

24 
msg_t
 
msg
 = {

25 .
°©us
 = status,

28 
	`LOG
("°©us: %u\n", 
°©us
);

29 
	`queue_íqueue
(&
qAck
, 
msg
, 
MAX_QUEUE_TOUT_MS
);

30 
	}
}

32 * 
	$èsk
(* 
¨g
)

34 
msg_t
 
msg
;

35 
msg_t
 
msgAck
;

37 
	`LOG
("running.\r\n");

38 
	`I2C_öô
();

39 
	`queue_öô
 ( &
q
 );

40 
	`queue_öô
 ( &
qAck
 );

41 
åue
) {

43 
	`queue_dequeue
(&
q
, &
msg
, 
MAX_QUEUE_TOUT_MS
);

45 
	`I2C_wrôe
(
msg
.
addªss
, msg.
d©a
, msg.
d©a_Àngth
, 
i2cEndCÆlback
);

50 
msgAck
.
°©us
 = 
Ál£
;

51 
	`queue_dequeue
(&
qAck
, &
msgAck
, 
msg
.
d©a_Àngth
 + 
TASK_I2C_ACK_EXCEED_TIME_MS
);

53 
msg
.
	`ˇŒback
(
msgAck
.
°©us
);

55  
NULL
;

56 
	}
}

59 
	$öôTaskI2C
()

61 
	`±hªad_¸óã
(&
thªad
 ,
NULL
 ,
èsk
 ,NULL);

62 
	}
}

64 
boﬁ
 
	$èskI2C_íqueueN⁄eBlock
(
msg_t
 
msg
)

67 
	`LOG
("%u - %†- %u\r\n", 
msg
.
addªss
, msg.
d©a
, 1);

68  
	`queue_íqueue
(&
q
, 
msg
,1);

70  
	`queue_íqueueFr⁄t
(&
q
, 
msg
,1);

71 
	}
}

74 
boﬁ
 
	$èskI2C_íqueue
(
msg_t
 
msg
)

76 
	`LOG
("%u - %†- %zu\r\n", 
msg
.
addªss
, msg.
d©a
, msg.
d©a_Àngth
);

77  
	`queue_íqueue
(&
q
, 
msg
, 
MAX_QUEUE_TOUT_MS
);

78 
	}
}

	@task_i2c.h

1 #i‚de‡
TASK_I2C_H


2 
	#TASK_I2C_H


	)

4 
öôTaskI2C
 ( );

5 
boﬁ
 
èskI2C_íqueueN⁄eBlock
 ( 
msg_t
 
msg
 );

6 
boﬁ
 
èskI2C_íqueue
 ( 
msg_t
 
msg
 );

	@timing.c

1 
	~<°dio.h
>

2 
	~<°döt.h
>

3 
	~<°dboﬁ.h
>

4 
	~<uni°d.h
>

5 
	~<°dlib.h
>

6 
	~<±hªad.h
>

7 
	~<sys/time.h
>

8 
	~"c⁄fig.h
"

9 
	~"log.h
"

11 
	#MODULE
 "TIMING"

	)

12 
	#LOG_COLOR
 13

	)

13 
	#LOG_ENABLE
 
TIMING_LOG_ENABLE


	)

15 
	$dñayMs
(
uöt32_t
 
dñayMs
)

17 
time•ec
 
ts
;

19 
ts
.
tv_£c
 = 
dñayMs
 / 1000;

20 
ts
.
tv_n£c
 = (
dñayMs
 % 1000) * 1000000;

21 
	`«no¶ìp
(&
ts
, 
NULL
);

22 
	}
}

24 
time•ec
 
	$ˇlcFutuª
(
uöt32_t
 
dñayMs
)

26 
timevÆ
 
now
;

27 
time•ec
 
timeout
;

29 
	`gëtimeofday
(&
now
, 
NULL
);

30 
timeout
.
tv_£c
 = 
now
.tv_£¯+ 
dñayMs
/1000;

31 
timeout
.
tv_n£c
 = 
now
.
tv_u£c
 * 1000 + (
dñayMs
%1000)*1000000;

33 if(
timeout
.
tv_n£c
 >= 1000000000) {

34 
timeout
.
tv_£c
++;

35 
timeout
.
tv_n£c
 -= 1000000000;

37 
	`LOG
("timeout: %lu %lu\r\n",
timeout
.
tv_£c
,timeout.
tv_n£c
);

38  
timeout
;

39 
	}
}

	@timing.h

1 #i‚de‡
TIMING_H


2 
	#TIMING_H


	)

4 
dñayMs
 ( 
uöt32_t
 delayMs );

5 
time•ec
 
ˇlcFutuª
 ( 
uöt32_t
 
dñayMs
 );

	@/usr/include/errno.h

22 #i‚def 
_ERRNO_H


23 
	#_ERRNO_H
 1

	)

25 
	~<„©uªs.h
>

28 
	~<bôs/î∫o.h
>

32 #i‚de‡
__ASSEMBLER__


34 
__BEGIN_DECLS


37 *
	$__î∫o_loˇti⁄
 (Ë
__THROW
 
__©åibuã_c⁄°__
;

38 
	#î∫o
 (*
	`__î∫o_loˇti⁄
 ())

	)

40 #ifde‡
__USE_GNU


45 *
¥ogøm_övoˇti⁄_«me
;

46 *
¥ogøm_övoˇti⁄_sh‹t_«me
;

48 
	~<bôs/ty≥s/îr‹_t.h
>

52 
__END_DECLS


	@/usr/include/pthread.h

18 #i‚de‡
_PTHREAD_H


19 
	#_PTHREAD_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<sched.h
>

23 
	~<time.h
>

25 
	~<bôs/ídün.h
>

26 
	~<bôs/±hªadty≥s.h
>

27 
	~<bôs/£tjmp.h
>

28 
	~<bôs/w‹dsize.h
>

29 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

30 
	~<bôs/ty≥s/__sig£t_t.h
>

31 
	~<bôs/ty≥s/°ru˘___jmp_buf_èg.h
>

32 #ifde‡
__USE_MISC


33 
	~<bôs/±hªad_°ack_mö-dy«mic.h
>

39 
	mPTHREAD_CREATE_JOINABLE
,

40 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

41 
	mPTHREAD_CREATE_DETACHED


42 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

49 
	mPTHREAD_MUTEX_TIMED_NP
,

50 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

51 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

52 
	mPTHREAD_MUTEX_ADAPTIVE_NP


53 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


55 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

56 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

57 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

58 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


60 #ifde‡
__USE_GNU


62 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


67 #ifde‡
__USE_XOPEN2K


71 
	mPTHREAD_MUTEX_STALLED
,

72 
	mPTHREAD_MUTEX_STALLED_NP
 = 
PTHREAD_MUTEX_STALLED
,

73 
	mPTHREAD_MUTEX_ROBUST
,

74 
	mPTHREAD_MUTEX_ROBUST_NP
 = 
PTHREAD_MUTEX_ROBUST


79 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


83 
	mPTHREAD_PRIO_NONE
,

84 
	mPTHREAD_PRIO_INHERIT
,

85 
	mPTHREAD_PRIO_PROTECT


90 
	#PTHREAD_MUTEX_INITIALIZER
 \

91 { { 
	`__PTHREAD_MUTEX_INITIALIZER
 (
PTHREAD_MUTEX_TIMED_NP
Ë} }

	)

92 #ifde‡
__USE_GNU


93 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

94 { { 
	`__PTHREAD_MUTEX_INITIALIZER
 (
PTHREAD_MUTEX_RECURSIVE_NP
Ë} }

	)

95 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

96 { { 
	`__PTHREAD_MUTEX_INITIALIZER
 (
PTHREAD_MUTEX_ERRORCHECK_NP
Ë} }

	)

97 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

98 { { 
	`__PTHREAD_MUTEX_INITIALIZER
 (
PTHREAD_MUTEX_ADAPTIVE_NP
Ë} }

	)

103 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


106 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

107 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

108 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

109 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


114 
	#PTHREAD_RWLOCK_INITIALIZER
 \

115 { { 
	`__PTHREAD_RWLOCK_INITIALIZER
 (
PTHREAD_RWLOCK_DEFAULT_NP
Ë} }

	)

116 #ifde‡
__USE_GNU


117 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

118 { { 
	`__PTHREAD_RWLOCK_INITIALIZER
 (
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
Ë} }

	)

126 
	mPTHREAD_INHERIT_SCHED
,

127 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

128 
	mPTHREAD_EXPLICIT_SCHED


129 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

136 
	mPTHREAD_SCOPE_SYSTEM
,

137 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

138 
	mPTHREAD_SCOPE_PROCESS


139 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

146 
	mPTHREAD_PROCESS_PRIVATE
,

147 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

148 
	mPTHREAD_PROCESS_SHARED


149 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

155 
	#PTHREAD_COND_INITIALIZER
 { { {0}, {0}, {0, 0}, {0, 0}, 0, 0, {0, 0} } }

	)

159 
	s_±hªad_˛ónup_buf„r


161 (*
	m__routöe
) (*);

162 *
	m__¨g
;

163 
	m__ˇn˚…y≥
;

164 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

170 
	mPTHREAD_CANCEL_ENABLE
,

171 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

172 
	mPTHREAD_CANCEL_DISABLE


173 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

177 
	mPTHREAD_CANCEL_DEFERRED
,

178 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

179 
	mPTHREAD_CANCEL_ASYNCHRONOUS


180 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

182 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

186 
	#PTHREAD_ONCE_INIT
 0

	)

189 #ifde‡
__USE_XOPEN2K


193 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

197 
__BEGIN_DECLS


202 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

203 c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

204 *(*
__°¨t_routöe
) (*),

205 *
__ª°ri˘
 
__¨g
Ë
__THROWNL
 
__n⁄nuŒ
 ((1, 3));

211 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

219 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

221 #ifde‡
__USE_GNU


224 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

226 #i‚de‡
__USE_TIME64_REDIRECTS


233 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

234 c⁄° 
time•ec
 *
__ab°ime
);

243 
	`±hªad_˛ockjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

244 
˛ockid_t
 
__˛ockid
,

245 c⁄° 
time•ec
 *
__ab°ime
);

247 #ifde‡
__REDIRECT


248 
	`__REDIRECT
 (
±hªad_timedjoö_≈
,

249 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

250 c⁄° 
time•ec
 *
__ab°ime
),

251 
__±hªad_timedjoö_≈64
);

253 
	`__REDIRECT
 (
±hªad_˛ockjoö_≈
,

254 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

255 
˛ockid_t
 
__˛ockid
,

256 c⁄° 
time•ec
 *
__ab°ime
),

257 
__±hªad_˛ockjoö_≈64
);

259 
	#±hªad_timedjoö_≈
 
__±hªad_timedjoö_≈64


	)

260 
	#±hªad_˛ockjoö_≈
 
__±hªad_˛ockjoö_≈64


	)

269 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

273 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

276 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
)

277 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

285 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

288 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

289 
__THROW
 
	`__n⁄nuŒ
 ((1));

292 
	$±hªad_©å_gëdëach°©e
 (c⁄° 
±hªad_©å_t
 *
__©å
,

293 *
__dëach°©e
)

294 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

297 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

298 
__dëach°©e
)

299 
__THROW
 
	`__n⁄nuŒ
 ((1));

303 
	$±hªad_©å_gëgu¨dsize
 (c⁄° 
±hªad_©å_t
 *
__©å
,

304 
size_t
 *
__gu¨dsize
)

305 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

308 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

309 
size_t
 
__gu¨dsize
)

310 
__THROW
 
	`__n⁄nuŒ
 ((1));

314 
	$±hªad_©å_gësched∑øm
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

315 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

316 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

319 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

320 c⁄° 
sched_∑øm
 *
__ª°ri˘


321 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

324 
	$±hªad_©å_gëschedpﬁicy
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


325 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

326 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

329 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

330 
__THROW
 
	`__n⁄nuŒ
 ((1));

333 
	$±hªad_©å_gëöhîôsched
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


334 
__©å
, *
__ª°ri˘
 
__öhîô
)

335 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

338 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

339 
__öhîô
)

340 
__THROW
 
	`__n⁄nuŒ
 ((1));

344 
	$±hªad_©å_gësc›e
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

345 *
__ª°ri˘
 
__sc›e
)

346 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

349 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

350 
__THROW
 
	`__n⁄nuŒ
 ((1));

353 
	$±hªad_©å_gë°ackaddr
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


354 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

355 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

361 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

362 *
__°ackaddr
)

363 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

366 
	$±hªad_©å_gë°acksize
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


367 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

368 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

373 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

374 
size_t
 
__°acksize
)

375 
__THROW
 
	`__n⁄nuŒ
 ((1));

377 #ifde‡
__USE_XOPEN2K


379 
	$±hªad_©å_gë°ack
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

380 **
__ª°ri˘
 
__°ackaddr
,

381 
size_t
 *
__ª°ri˘
 
__°acksize
)

382 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

387 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

388 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

391 #ifde‡
__USE_GNU


394 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

395 
size_t
 
__˝u£tsize
,

396 c⁄° 
˝u_£t_t
 *
__˝u£t
)

397 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

401 
	$±hªad_©å_gëafföôy_≈
 (c⁄° 
±hªad_©å_t
 *
__©å
,

402 
size_t
 
__˝u£tsize
,

403 
˝u_£t_t
 *
__˝u£t
)

404 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

407 
	$±hªad_gë©å_deÁu…_≈
 (
±hªad_©å_t
 *
__©å
)

408 
__THROW
 
	`__n⁄nuŒ
 ((1));

411 
	`±hªad_©å_£tsigmask_≈
 (
±hªad_©å_t
 *
__©å
,

412 c⁄° 
__sig£t_t
 *
sigmask
);

417 
	`±hªad_©å_gësigmask_≈
 (c⁄° 
±hªad_©å_t
 *
__©å
,

418 
__sig£t_t
 *
sigmask
);

422 
	#PTHREAD_ATTR_NO_SIGMASK_NP
 (-1)

	)

426 
	$±hªad_£èâr_deÁu…_≈
 (c⁄° 
±hªad_©å_t
 *
__©å
)

427 
__THROW
 
	`__n⁄nuŒ
 ((1));

432 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

433 
__THROW
 
	`__n⁄nuŒ
 ((2));

441 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

442 c⁄° 
sched_∑øm
 *
__∑øm
)

443 
__THROW
 
	`__n⁄nuŒ
 ((3));

446 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

447 *
__ª°ri˘
 
__pﬁicy
,

448 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

449 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

452 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

453 
__THROW
;

456 #ifde‡
__USE_GNU


458 
	$±hªad_gë«me_≈
 (
±hªad_t
 
__èrgë_thªad
, *
__buf
,

459 
size_t
 
__buÊí
)

460 
__THROW
 
	`__n⁄nuŒ
 ((2));

463 
	$±hªad_£äame_≈
 (
±hªad_t
 
__èrgë_thªad
, c⁄° *
__«me
)

464 
__THROW
 
	`__n⁄nuŒ
 ((2));

468 #ifde‡
__USE_UNIX98


470 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

473 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

476 #ifde‡
__USE_GNU


477 
	$±hªad_yõld
 (Ë
__THROW
;

478 #ifde‡
__REDIRECT_NTH


479 
	`__REDIRECT_NTH
 (
±hªad_yõld
, (), 
sched_yõld
)

480 
	`__©åibuã_dïªˇãd_msg__
 ("\
_yield is deprecated, use sched_yield instead");

483 
	#±hªad_yõld
 
sched_yõld


	)

489 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

490 c⁄° 
˝u_£t_t
 *
__˝u£t
)

491 
__THROW
 
	`__n⁄nuŒ
 ((3));

494 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

495 
˝u_£t_t
 *
__˝u£t
)

496 
__THROW
 
	`__n⁄nuŒ
 ((3));

509 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

510 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

521 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

525 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

528 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

533 
	`±hªad_ã°ˇn˚l
 ();

538 
	s__ˇn˚l_jmp_buf_èg


540 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

541 
__mask_was_ßved
;

546 
__ˇn˚l_jmp_buf_èg
 
__ˇn˚l_jmp_buf
[1];

547 *
__∑d
[4];

548 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

551 #i‚de‡
__˛ónup_f˘_©åibuã


552 
	#__˛ónup_f˘_©åibuã


	)

557 
	s__±hªad_˛ónup_‰ame


559 (*
__ˇn˚l_routöe
) (*);

560 *
__ˇn˚l_¨g
;

561 
__do_ô
;

562 
__ˇn˚l_ty≥
;

565 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


566 #ifde‡
__˝lu•lus


568 ˛as†
	c__±hªad_˛ónup_˛ass


570 (*
__ˇn˚l_routöe
) (*);

571 *
__ˇn˚l_¨g
;

572 
__do_ô
;

573 
__ˇn˚l_ty≥
;

575 
public
:

576 
	`__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

577 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

578 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

579 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

580 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

581 &
__ˇn˚l_ty≥
); 
	}
}

582 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

592 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

594 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

598 
	#±hªad_˛ónup_p›
(
execuã
) \

599 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

600 } 0)

	)

602 #ifde‡
__USE_GNU


606 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

608 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

609 
__˛‰ame
.
	`__de„r
 ()

	)

614 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

615 
__˛‰ame
.
	`__ª°‹e
 (); \

616 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

617 } 0)

	)

624 
__exã∫_ölöe
 

625 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

627 i‡(
__‰ame
->
__do_ô
)

628 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

629 
	}
}

638 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

640 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

641 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

642 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

643 .
__do_ô
 = 1 };

	)

647 
	#±hªad_˛ónup_p›
(
execuã
) \

648 
__˛‰ame
.
__do_ô
 = (
execuã
); \

649 } 0)

	)

651 #ifde‡
__USE_GNU


655 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

657 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

658 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

659 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

660 .
__do_ô
 = 1 }; \

661 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

662 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

667 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

668 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

669 
__˛‰ame
.
__do_ô
 = (
execuã
); \

670 } 0)

	)

681 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

683 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

684 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

685 *
__ˇn˚l_¨g
 = (
¨g
); \

686 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp_ˇn˚l
 (
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, \

688 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

690 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

691 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

695 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

696 dÿ{

	)

697 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

698 
__˛ónup_f˘_©åibuã
;

702 
	#±hªad_˛ónup_p›
(
execuã
) \

705 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

706 i‡(
execuã
) \

707 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

708 } 0)

	)

709 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

710 
__˛ónup_f˘_©åibuã
;

712 #ifde‡
__USE_GNU


716 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

718 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

719 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

720 *
__ˇn˚l_¨g
 = (
¨g
); \

721 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp_ˇn˚l
 (
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, \

723 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

725 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

726 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

730 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

731 dÿ{

	)

732 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

733 
__˛ónup_f˘_©åibuã
;

738 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

741 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

742 i‡(
execuã
) \

743 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

744 
	}
} 0)

	)

745 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

746 
__˛ónup_f˘_©åibuã
;

750 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

751 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

752 #i‚de‡
SHARED


753 
	`__©åibuã__
 ((
__wók__
))

765 #i‡
	`__GNUC_PREREQ
 (11, 0)

766 
	`__REDIRECT_NTHNL
 (
__sig£tjmp_ˇn˚l
,

767 (
__ˇn˚l_jmp_buf_èg
 
__ív
[1],

768 
__ßvemask
),

769 
__sig£tjmp
Ë
__©åibuã_ªtu∫s_twi˚__
;

771 
	#__sig£tjmp_ˇn˚l
(
ív
, 
ßvemask
) \

772 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *Ë(*Ë(
ív
), (
ßvemask
))

	)

773 
	$__sig£tjmp
 (
__jmp_buf_èg
 
__ív
[1],

774 
__ßvemask
Ë
__THROWNL
;

781 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

782 c⁄° 
±hªad_muãx©å_t
 *
__muãx©å
)

783 
__THROW
 
	`__n⁄nuŒ
 ((1));

786 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

787 
__THROW
 
	`__n⁄nuŒ
 ((1));

790 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

791 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

794 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

795 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

797 #ifde‡
__USE_XOPEN2K


799 #i‚de‡
__USE_TIME64_REDIRECTS


800 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

801 c⁄° 
time•ec
 *
__ª°ri˘


802 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

804 #ifde‡
__REDIRECT_NTHNL


805 
	`__REDIRECT_NTHNL
 (
±hªad_muãx_timedlock
,

806 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

807 c⁄° 
time•ec
 *
__ª°ri˘
 
__ab°ime
),

808 
__±hªad_muãx_timedlock64
Ë
	`__n⁄nuŒ
 ((1, 2));

810 
	#±hªad_muãx_timedlock
 
__±hªad_muãx_timedlock64


	)

815 #ifde‡
__USE_GNU


816 #i‚de‡
__USE_TIME64_REDIRECTS


817 
	$±hªad_muãx_˛ocklock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

818 
˛ockid_t
 
__˛ockid
,

819 c⁄° 
time•ec
 *
__ª°ri˘


820 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 3));

822 #ifde‡
__REDIRECT_NTHNL


823 
	`__REDIRECT_NTHNL
 (
±hªad_muãx_˛ocklock
,

824 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

825 
˛ockid_t
 
__˛ockid
,

826 c⁄° 
time•ec
 *
__ª°ri˘
 
__ab°ime
),

827 
__±hªad_muãx_˛ocklock64
Ë
	`__n⁄nuŒ
 ((1, 3));

829 
	#±hªad_muãx_˛ocklock
 
__±hªad_muãx_˛ocklock64


	)

835 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

836 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

840 
	$±hªad_muãx_gë¥io˚ûög
 (c⁄° 
±hªad_muãx_t
 *

841 
__ª°ri˘
 
__muãx
,

842 *
__ª°ri˘
 
__¥io˚ûög
)

843 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

847 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

848 
__¥io˚ûög
,

849 *
__ª°ri˘
 
__ﬁd_˚ûög
)

850 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

853 #ifde‡
__USE_XOPEN2K8


855 
	$±hªad_muãx_c⁄si°ít
 (
±hªad_muãx_t
 *
__muãx
)

856 
__THROW
 
	`__n⁄nuŒ
 ((1));

857 #ifde‡
__USE_GNU


858 #ifde‡
__REDIRECT_NTH


859 
	`__REDIRECT_NTH
 (
±hªad_muãx_c⁄si°ít_≈
, (
±hªad_muãx_t
 *),

860 
±hªad_muãx_c⁄si°ít
Ë
	`__n⁄nuŒ
 ((1))

861 
	`__©åibuã_dïªˇãd_msg__
 ("\
_mutex_consistent_np is deprecated, useÖthread_mutex_consistent");

864 
	#±hªad_muãx_c⁄si°ít_≈
 
±hªad_muãx_c⁄si°ít


	)

874 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

875 
__THROW
 
	`__n⁄nuŒ
 ((1));

878 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

879 
__THROW
 
	`__n⁄nuŒ
 ((1));

882 
	$±hªad_muãx©å_gëpsh¨ed
 (c⁄° 
±hªad_muãx©å_t
 *

883 
__ª°ri˘
 
__©å
,

884 *
__ª°ri˘
 
__psh¨ed
)

885 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

888 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

889 
__psh¨ed
)

890 
__THROW
 
	`__n⁄nuŒ
 ((1));

892 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


894 
	$±hªad_muãx©å_gëty≥
 (c⁄° 
±hªad_muãx©å_t
 *
__ª°ri˘


895 
__©å
, *
__ª°ri˘
 
__köd
)

896 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

901 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

902 
__THROW
 
	`__n⁄nuŒ
 ((1));

906 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (c⁄° 
±hªad_muãx©å_t
 *

907 
__ª°ri˘
 
__©å
,

908 *
__ª°ri˘
 
__¥Ÿocﬁ
)

909 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

913 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

914 
__¥Ÿocﬁ
)

915 
__THROW
 
	`__n⁄nuŒ
 ((1));

918 
	$±hªad_muãx©å_gë¥io˚ûög
 (c⁄° 
±hªad_muãx©å_t
 *

919 
__ª°ri˘
 
__©å
,

920 *
__ª°ri˘
 
__¥io˚ûög
)

921 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

924 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

925 
__¥io˚ûög
)

926 
__THROW
 
	`__n⁄nuŒ
 ((1));

928 #ifde‡
__USE_XOPEN2K


930 
	$±hªad_muãx©å_gërobu°
 (c⁄° 
±hªad_muãx©å_t
 *
__©å
,

931 *
__robu°√ss
)

932 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

933 #ifde‡
__USE_GNU


934 #ifde‡
__REDIRECT_NTH


935 
	`__REDIRECT_NTH
 (
±hªad_muãx©å_gërobu°_≈
,

936 (
±hªad_muãx©å_t
 *, *),

937 
±hªad_muãx©å_gërobu°
Ë
	`__n⁄nuŒ
 ((1))

938 
	`__©åibuã_dïªˇãd_msg__
 ("\
_mutexattr_getrobust_np is deprecated, useÖthread_mutexattr_getrobust");

941 
	#±hªad_muãx©å_gërobu°_≈
 
±hªad_muãx©å_gërobu°


	)

946 
	$±hªad_muãx©å_£åobu°
 (
±hªad_muãx©å_t
 *
__©å
,

947 
__robu°√ss
)

948 
__THROW
 
	`__n⁄nuŒ
 ((1));

949 #ifde‡
__USE_GNU


950 #ifde‡
__REDIRECT_NTH


951 
	`__REDIRECT_NTH
 (
±hªad_muãx©å_£åobu°_≈
,

952 (
±hªad_muãx©å_t
 *, ),

953 
±hªad_muãx©å_£åobu°
Ë
	`__n⁄nuŒ
 ((1))

954 
	`__©åibuã_dïªˇãd_msg__
 ("\
_mutexattr_setrobust_np is deprecated, useÖthread_mutexattr_setrobust");

957 
	#±hªad_muãx©å_£åobu°_≈
 
±hªad_muãx©å_£åobu°


	)

962 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


967 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

968 c⁄° 
±hªad_rwlock©å_t
 *
__ª°ri˘


969 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

972 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

973 
__THROW
 
	`__n⁄nuŒ
 ((1));

976 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

977 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

980 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

981 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

983 #ifde‡
__USE_XOPEN2K


985 #i‚de‡
__USE_TIME64_REDIRECTS


986 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

987 c⁄° 
time•ec
 *
__ª°ri˘


988 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

990 #ifde‡
__REDIRECT_NTHNL


991 
	`__REDIRECT_NTHNL
 (
±hªad_rwlock_timedrdlock
,

992 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

993 c⁄° 
time•ec
 *
__ª°ri˘
 
__ab°ime
),

994 
__±hªad_rwlock_timedrdlock64
)

995 
	`__n⁄nuŒ
 ((1, 2));

997 
	#±hªad_rwlock_timedrdlock
 
__±hªad_rwlock_timedrdlock64


	)

1002 #ifde‡
__USE_GNU


1003 #i‚de‡
__USE_TIME64_REDIRECTS


1004 
	$±hªad_rwlock_˛ockrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

1005 
˛ockid_t
 
__˛ockid
,

1006 c⁄° 
time•ec
 *
__ª°ri˘


1007 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 3));

1009 #ifde‡
__REDIRECT_NTHNL


1010 
	`__REDIRECT_NTHNL
 (
±hªad_rwlock_˛ockrdlock
,

1011 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

1012 
˛ockid_t
 
__˛ockid
,

1013 c⁄° 
time•ec
 *
__ª°ri˘
 
__ab°ime
),

1014 
__±hªad_rwlock_˛ockrdlock64
)

1015 
	`__n⁄nuŒ
 ((1, 3));

1017 
	#±hªad_rwlock_˛ockrdlock
 
__±hªad_rwlock_˛ockrdlock64


	)

1023 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

1024 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1027 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

1028 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1030 #ifde‡
__USE_XOPEN2K


1032 #i‚de‡
__USE_TIME64_REDIRECTS


1033 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

1034 c⁄° 
time•ec
 *
__ª°ri˘


1035 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

1037 #ifde‡
__REDIRECT_NTHNL


1038 
	`__REDIRECT_NTHNL
 (
±hªad_rwlock_timedwæock
,

1039 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

1040 c⁄° 
time•ec
 *
__ª°ri˘
 
__ab°ime
),

1041 
__±hªad_rwlock_timedwæock64
)

1042 
	`__n⁄nuŒ
 ((1, 2));

1044 
	#±hªad_rwlock_timedwæock
 
__±hªad_rwlock_timedwæock64


	)

1049 #ifde‡
__USE_GNU


1050 #i‚de‡
__USE_TIME64_REDIRECTS


1051 
	$±hªad_rwlock_˛ockwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

1052 
˛ockid_t
 
__˛ockid
,

1053 c⁄° 
time•ec
 *
__ª°ri˘


1054 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 3));

1057 #ifde‡
__REDIRECT_NTHNL


1058 
	`__REDIRECT_NTHNL
 (
±hªad_rwlock_˛ockwæock
,

1059 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

1060 
˛ockid_t
 
__˛ockid
,

1061 c⁄° 
time•ec
 *
__ª°ri˘
 
__ab°ime
),

1062 
__±hªad_rwlock_˛ockwæock64
)

1063 
	`__n⁄nuŒ
 ((1, 3));

1065 
	#±hªad_rwlock_˛ockwæock
 
__±hªad_rwlock_˛ockwæock64


	)

1071 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

1072 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1078 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

1079 
__THROW
 
	`__n⁄nuŒ
 ((1));

1082 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

1083 
__THROW
 
	`__n⁄nuŒ
 ((1));

1086 
	$±hªad_rwlock©å_gëpsh¨ed
 (c⁄° 
±hªad_rwlock©å_t
 *

1087 
__ª°ri˘
 
__©å
,

1088 *
__ª°ri˘
 
__psh¨ed
)

1089 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1092 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

1093 
__psh¨ed
)

1094 
__THROW
 
	`__n⁄nuŒ
 ((1));

1097 
	$±hªad_rwlock©å_gëköd_≈
 (c⁄° 
±hªad_rwlock©å_t
 *

1098 
__ª°ri˘
 
__©å
,

1099 *
__ª°ri˘
 
__¥ef
)

1100 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1103 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

1104 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1112 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

1113 c⁄° 
±hªad_c⁄d©å_t
 *
__ª°ri˘
 
__c⁄d_©å
)

1114 
__THROW
 
	`__n⁄nuŒ
 ((1));

1117 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

1118 
__THROW
 
	`__n⁄nuŒ
 ((1));

1121 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

1122 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1125 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

1126 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1133 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

1134 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

1135 
	`__n⁄nuŒ
 ((1, 2));

1144 #i‚de‡
__USE_TIME64_REDIRECTS


1145 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

1146 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

1147 c⁄° 
time•ec
 *
__ª°ri˘
 
__ab°ime
)

1148 
	`__n⁄nuŒ
 ((1, 2, 3));

1150 #ifde‡
__REDIRECT


1151 
	`__REDIRECT
 (
±hªad_c⁄d_timedwaô
,

1152 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

1153 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

1154 c⁄° 
time•ec
 *
__ª°ri˘
 
__ab°ime
),

1155 
__±hªad_c⁄d_timedwaô64
)

1156 
	`__n⁄nuŒ
 ((1, 2, 3));

1158 
	#±hªad_c⁄d_timedwaô
 
__±hªad_c⁄d_timedwaô64


	)

1162 #ifde‡
__USE_GNU


1170 #i‚de‡
__USE_TIME64_REDIRECTS


1171 
	$±hªad_c⁄d_˛ockwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

1172 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

1173 
__˛ockid_t
 
__˛ock_id
,

1174 c⁄° 
time•ec
 *
__ª°ri˘
 
__ab°ime
)

1175 
	`__n⁄nuŒ
 ((1, 2, 4));

1177 #ifde‡
__REDIRECT


1178 
	`__REDIRECT
 (
±hªad_c⁄d_˛ockwaô
,

1179 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

1180 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

1181 
__˛ockid_t
 
__˛ock_id
,

1182 c⁄° 
time•ec
 *
__ª°ri˘
 
__ab°ime
),

1183 
__±hªad_c⁄d_˛ockwaô64
)

1184 
	`__n⁄nuŒ
 ((1, 2, 4));

1186 
	#±hªad_c⁄d_˛ockwaô
 
__±hªad_c⁄d_˛ockwaô64


	)

1194 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

1195 
__THROW
 
	`__n⁄nuŒ
 ((1));

1198 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

1199 
__THROW
 
	`__n⁄nuŒ
 ((1));

1202 
	$±hªad_c⁄d©å_gëpsh¨ed
 (c⁄° 
±hªad_c⁄d©å_t
 *

1203 
__ª°ri˘
 
__©å
,

1204 *
__ª°ri˘
 
__psh¨ed
)

1205 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1208 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

1209 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1211 #ifde‡
__USE_XOPEN2K


1213 
	$±hªad_c⁄d©å_gë˛ock
 (c⁄° 
±hªad_c⁄d©å_t
 *

1214 
__ª°ri˘
 
__©å
,

1215 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

1216 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1219 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

1220 
__˛ockid_t
 
__˛ock_id
)

1221 
__THROW
 
	`__n⁄nuŒ
 ((1));

1225 #ifde‡
__USE_XOPEN2K


1230 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1231 
__THROW
 
	`__n⁄nuŒ
 ((1));

1234 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1235 
__THROW
 
	`__n⁄nuŒ
 ((1));

1238 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1239 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1242 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1243 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1246 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1247 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1254 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1255 c⁄° 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1256 
__©å
, 
__cou¡
)

1257 
__THROW
 
	`__n⁄nuŒ
 ((1));

1260 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1261 
__THROW
 
	`__n⁄nuŒ
 ((1));

1264 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1265 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1269 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1270 
__THROW
 
	`__n⁄nuŒ
 ((1));

1273 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1274 
__THROW
 
	`__n⁄nuŒ
 ((1));

1277 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (c⁄° 
±hªad_b¨rõøâr_t
 *

1278 
__ª°ri˘
 
__©å
,

1279 *
__ª°ri˘
 
__psh¨ed
)

1280 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1283 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1284 
__psh¨ed
)

1285 
__THROW
 
	`__n⁄nuŒ
 ((1));

1297 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1298 (*
__de°r_fun˘i⁄
) (*))

1299 
__THROW
 
	`__n⁄nuŒ
 ((1));

1302 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1305 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1308 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1309 c⁄° *
__poöãr
)

1310 
__THROW
 
	`__©å_ac˚ss_n⁄e
 (2);

1313 #ifde‡
__USE_XOPEN2K


1315 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1316 
__˛ockid_t
 *
__˛ock_id
)

1317 
__THROW
 
	`__n⁄nuŒ
 ((2));

1332 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1333 (*
__∑ª¡
) (),

1334 (*
__chûd
Ë()Ë
__THROW
;

1337 #ifde‡
__USE_EXTERN_INLINES


1339 
__exã∫_ölöe
 

1340 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1342  
__thªad1
 =
__thªad2
;

1343 
	}
}

1346 
	g__END_DECLS


	@/usr/include/stdint.h

22 #i‚de‡
_STDINT_H


23 
	#_STDINT_H
 1

	)

25 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

26 
	~<bôs/libc-hódî-°¨t.h
>

27 
	~<bôs/ty≥s.h
>

28 
	~<bôs/wch¨.h
>

29 
	~<bôs/w‹dsize.h
>

34 
	~<bôs/°döt-öä.h
>

37 
	~<bôs/°döt-uöä.h
>

41 
	~<bôs/°döt-Àa°.h
>

47 sig√d 
	töt_Á°8_t
;

48 #i‡
__WORDSIZE
 == 64

49 
	töt_Á°16_t
;

50 
	töt_Á°32_t
;

51 
	töt_Á°64_t
;

53 
	töt_Á°16_t
;

54 
	töt_Á°32_t
;

55 
__exãnsi⁄__


56 
	töt_Á°64_t
;

60 
	tuöt_Á°8_t
;

61 #i‡
__WORDSIZE
 == 64

62 
	tuöt_Á°16_t
;

63 
	tuöt_Á°32_t
;

64 
	tuöt_Á°64_t
;

66 
	tuöt_Á°16_t
;

67 
	tuöt_Á°32_t
;

68 
__exãnsi⁄__


69 
	tuöt_Á°64_t
;

74 #i‡
__WORDSIZE
 == 64

75 #i‚de‡
__öçå_t_deföed


76 
	töçå_t
;

77 
	#__öçå_t_deföed


	)

79 
	tuöçå_t
;

81 #i‚de‡
__öçå_t_deföed


82 
	töçå_t
;

83 
	#__öçå_t_deföed


	)

85 
	tuöçå_t
;

90 
__ötmax_t
 
	tötmax_t
;

91 
__uötmax_t
 
	tuötmax_t
;

94 #i‡
__WORDSIZE
 == 64

95 
	#__INT64_C
(
c
Ë¯## 
L


	)

96 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

98 
	#__INT64_C
(
c
Ë¯## 
LL


	)

99 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

105 
	#INT8_MIN
 (-128)

	)

106 
	#INT16_MIN
 (-32767-1)

	)

107 
	#INT32_MIN
 (-2147483647-1)

	)

108 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

110 
	#INT8_MAX
 (127)

	)

111 
	#INT16_MAX
 (32767)

	)

112 
	#INT32_MAX
 (2147483647)

	)

113 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

116 
	#UINT8_MAX
 (255)

	)

117 
	#UINT16_MAX
 (65535)

	)

118 
	#UINT32_MAX
 (4294967295U)

	)

119 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

123 
	#INT_LEAST8_MIN
 (-128)

	)

124 
	#INT_LEAST16_MIN
 (-32767-1)

	)

125 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

126 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

128 
	#INT_LEAST8_MAX
 (127)

	)

129 
	#INT_LEAST16_MAX
 (32767)

	)

130 
	#INT_LEAST32_MAX
 (2147483647)

	)

131 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

134 
	#UINT_LEAST8_MAX
 (255)

	)

135 
	#UINT_LEAST16_MAX
 (65535)

	)

136 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

137 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

141 
	#INT_FAST8_MIN
 (-128)

	)

142 #i‡
__WORDSIZE
 == 64

143 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

144 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

146 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

147 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

149 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

151 
	#INT_FAST8_MAX
 (127)

	)

152 #i‡
__WORDSIZE
 == 64

153 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

154 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

156 
	#INT_FAST16_MAX
 (2147483647)

	)

157 
	#INT_FAST32_MAX
 (2147483647)

	)

159 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

162 
	#UINT_FAST8_MAX
 (255)

	)

163 #i‡
__WORDSIZE
 == 64

164 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

165 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

167 
	#UINT_FAST16_MAX
 (4294967295U)

	)

168 
	#UINT_FAST32_MAX
 (4294967295U)

	)

170 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

174 #i‡
__WORDSIZE
 == 64

175 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

176 
	#INTPTR_MAX
 (9223372036854775807L)

	)

177 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

179 
	#INTPTR_MIN
 (-2147483647-1)

	)

180 
	#INTPTR_MAX
 (2147483647)

	)

181 
	#UINTPTR_MAX
 (4294967295U)

	)

186 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

188 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

191 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

197 #i‡
__WORDSIZE
 == 64

198 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

199 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

201 #i‡
__WORDSIZE32_PTRDIFF_LONG


202 
	#PTRDIFF_MIN
 (-2147483647L-1)

	)

203 
	#PTRDIFF_MAX
 (2147483647L)

	)

205 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

206 
	#PTRDIFF_MAX
 (2147483647)

	)

211 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

212 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

215 #i‡
__WORDSIZE
 == 64

216 
	#SIZE_MAX
 (18446744073709551615UL)

	)

218 #i‡
__WORDSIZE32_SIZE_ULONG


219 
	#SIZE_MAX
 (4294967295UL)

	)

221 
	#SIZE_MAX
 (4294967295U)

	)

226 #i‚de‡
WCHAR_MIN


228 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

229 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

233 
	#WINT_MIN
 (0u)

	)

234 
	#WINT_MAX
 (4294967295u)

	)

237 
	#INT8_C
(
c
Ë
	)
c

238 
	#INT16_C
(
c
Ë
	)
c

239 
	#INT32_C
(
c
Ë
	)
c

240 #i‡
__WORDSIZE
 == 64

241 
	#INT64_C
(
c
Ë¯## 
L


	)

243 
	#INT64_C
(
c
Ë¯## 
LL


	)

247 
	#UINT8_C
(
c
Ë
	)
c

248 
	#UINT16_C
(
c
Ë
	)
c

249 
	#UINT32_C
(
c
Ë¯## 
U


	)

250 #i‡
__WORDSIZE
 == 64

251 
	#UINT64_C
(
c
Ë¯## 
UL


	)

253 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

257 #i‡
__WORDSIZE
 == 64

258 
	#INTMAX_C
(
c
Ë¯## 
L


	)

259 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

261 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

262 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

265 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT_C23
)

267 
	#INT8_WIDTH
 8

	)

268 
	#UINT8_WIDTH
 8

	)

269 
	#INT16_WIDTH
 16

	)

270 
	#UINT16_WIDTH
 16

	)

271 
	#INT32_WIDTH
 32

	)

272 
	#UINT32_WIDTH
 32

	)

273 
	#INT64_WIDTH
 64

	)

274 
	#UINT64_WIDTH
 64

	)

276 
	#INT_LEAST8_WIDTH
 8

	)

277 
	#UINT_LEAST8_WIDTH
 8

	)

278 
	#INT_LEAST16_WIDTH
 16

	)

279 
	#UINT_LEAST16_WIDTH
 16

	)

280 
	#INT_LEAST32_WIDTH
 32

	)

281 
	#UINT_LEAST32_WIDTH
 32

	)

282 
	#INT_LEAST64_WIDTH
 64

	)

283 
	#UINT_LEAST64_WIDTH
 64

	)

285 
	#INT_FAST8_WIDTH
 8

	)

286 
	#UINT_FAST8_WIDTH
 8

	)

287 
	#INT_FAST16_WIDTH
 
__WORDSIZE


	)

288 
	#UINT_FAST16_WIDTH
 
__WORDSIZE


	)

289 
	#INT_FAST32_WIDTH
 
__WORDSIZE


	)

290 
	#UINT_FAST32_WIDTH
 
__WORDSIZE


	)

291 
	#INT_FAST64_WIDTH
 64

	)

292 
	#UINT_FAST64_WIDTH
 64

	)

294 
	#INTPTR_WIDTH
 
__WORDSIZE


	)

295 
	#UINTPTR_WIDTH
 
__WORDSIZE


	)

297 
	#INTMAX_WIDTH
 64

	)

298 
	#UINTMAX_WIDTH
 64

	)

300 
	#PTRDIFF_WIDTH
 
__WORDSIZE


	)

301 
	#SIG_ATOMIC_WIDTH
 32

	)

302 
	#SIZE_WIDTH
 
__WORDSIZE


	)

303 
	#WCHAR_WIDTH
 32

	)

304 
	#WINT_WIDTH
 32

	)

	@/usr/include/stdio.h

24 #i‚de‡
_STDIO_H


25 
	#_STDIO_H
 1

	)

27 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

28 
	~<bôs/libc-hódî-°¨t.h
>

30 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

36 
	#__√ed___va_li°


	)

37 
	~<°d¨g.h
>

39 
	~<bôs/ty≥s.h
>

40 
	~<bôs/ty≥s/__Âos_t.h
>

41 
	~<bôs/ty≥s/__Âos64_t.h
>

42 
	~<bôs/ty≥s/__FILE.h
>

43 
	~<bôs/ty≥s/FILE.h
>

44 
	~<bôs/ty≥s/°ru˘_FILE.h
>

46 #ifde‡
__USE_MISC


47 
	~<bôs/ty≥s/cookõ_io_fun˘i⁄s_t.h
>

50 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


51 #ifde‡
__GNUC__


52 #i‚de‡
_VA_LIST_DEFINED


53 
__gnuc_va_li°
 
	tva_li°
;

54 
	#_VA_LIST_DEFINED


	)

57 
	~<°d¨g.h
>

61 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


62 #i‚de‡
__off_t_deföed


63 #i‚de‡
__USE_FILE_OFFSET64


64 
__off_t
 
	toff_t
;

66 
__off64_t
 
	toff_t
;

68 
	#__off_t_deföed


	)

70 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


71 
__off64_t
 
	toff64_t
;

72 
	#__off64_t_deföed


	)

76 #ifde‡
__USE_XOPEN2K8


77 #i‚de‡
__ssize_t_deföed


78 
__ssize_t
 
	tssize_t
;

79 
	#__ssize_t_deföed


	)

84 #i‚de‡
__USE_FILE_OFFSET64


85 
__Âos_t
 
	tÂos_t
;

87 
__Âos64_t
 
	tÂos_t
;

89 #ifde‡
__USE_LARGEFILE64


90 
__Âos64_t
 
	tÂos64_t
;

94 
	#_IOFBF
 0

	)

95 
	#_IOLBF
 1

	)

96 
	#_IONBF
 2

	)

100 
	#BUFSIZ
 8192

	)

105 
	#EOF
 (-1)

	)

110 
	#SEEK_SET
 0

	)

111 
	#SEEK_CUR
 1

	)

112 
	#SEEK_END
 2

	)

113 #ifde‡
__USE_GNU


114 
	#SEEK_DATA
 3

	)

115 
	#SEEK_HOLE
 4

	)

119 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


121 
	#P_tmpdú
 "/tmp"

	)

124 
	#L_tm≤am
 20

	)

125 
	#TMP_MAX
 238328

	)

129 
	~<bôs/°dio_lim.h
>

131 #ifde‡
__USE_POSIX


132 
	#L_˘îmid
 9

	)

133 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


134 
	#L_cu£rid
 9

	)

138 #unde‡
FOPEN_MAX


139 
	#FOPEN_MAX
 16

	)

142 #i‡
__GLIBC_USE
 (
ISOC23
)

144 
	#_PRINTF_NAN_LEN_MAX
 4

	)

149 
FILE
 *
°dö
;

150 
FILE
 *
°dout
;

151 
FILE
 *
°dîr
;

153 
	#°dö
 
°dö


	)

154 
	#°dout
 
°dout


	)

155 
	#°dîr
 
°dîr


	)

158 
	$ªmove
 (c⁄° *
__fûíame
Ë
__THROW
;

160 
	$ª«me
 (c⁄° *
__ﬁd
, c⁄° *
__√w
Ë
__THROW
;

162 #ifde‡
__USE_ATFILE


164 
	$ª«mót
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

165 c⁄° *
__√w
Ë
__THROW
;

168 #ifde‡
__USE_GNU


170 
	#RENAME_NOREPLACE
 (1 << 0)

	)

171 
	#RENAME_EXCHANGE
 (1 << 1)

	)

172 
	#RENAME_WHITEOUT
 (1 << 2)

	)

176 
	$ª«mót2
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

177 c⁄° *
__√w
, 
__Êags
Ë
__THROW
;

184 
	$f˛o£
 (
FILE
 *
__°ªam
Ë
	`__n⁄nuŒ
 ((1));

186 #unde‡
__©å_dóŒoc_f˛o£


187 
	#__©å_dóŒoc_f˛o£
 
	`__©å_dóŒoc
 (
f˛o£
, 1)

	)

193 #i‚de‡
__USE_FILE_OFFSET64


194 
FILE
 *
	$tmpfûe
 ()

195 
__©åibuã_mÆloc__
 
__©å_dóŒoc_f˛o£
 
__wur
;

197 #ifde‡
__REDIRECT


198 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
)

199 
__©åibuã_mÆloc__
 
__©å_dóŒoc_f˛o£
 
__wur
;

201 
	#tmpfûe
 
tmpfûe64


	)

205 #ifde‡
__USE_LARGEFILE64


206 
FILE
 *
	$tmpfûe64
 ()

207 
__©åibuã_mÆloc__
 
__©å_dóŒoc_f˛o£
 
__wur
;

211 *
	$tm≤am
 ([
L_tm≤am
]Ë
__THROW
 
__wur
;

213 #ifde‡
__USE_MISC


216 *
	$tm≤am_r
 (
__s
[
L_tm≤am
]Ë
__THROW
 
__wur
;

220 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


228 *
	$ãm≤am
 (c⁄° *
__dú
, c⁄° *
__pfx
)

229 
__THROW
 
__©åibuã_mÆloc__
 
__wur
 
__©å_dóŒoc_‰ì
;

236 
	`fÊush
 (
FILE
 *
__°ªam
);

238 #ifde‡
__USE_MISC


245 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

248 #ifde‡
__USE_GNU


255 
	`f˛o£Æl
 ();

259 #i‚de‡
__USE_FILE_OFFSET64


264 
FILE
 *
	$f›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

265 c⁄° *
__ª°ri˘
 
__modes
)

266 
__©åibuã_mÆloc__
 
__©å_dóŒoc_f˛o£
 
__wur
;

271 
FILE
 *
	$‰e›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

272 c⁄° *
__ª°ri˘
 
__modes
,

273 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
 
	`__n⁄nuŒ
 ((3));

275 #ifde‡
__REDIRECT


276 
FILE
 *
	`__REDIRECT
 (
f›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

277 c⁄° *
__ª°ri˘
 
__modes
), 
f›í64
)

278 
__©åibuã_mÆloc__
 
__©å_dóŒoc_f˛o£
 
__wur
;

279 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

280 c⁄° *
__ª°ri˘
 
__modes
,

281 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

282 
__wur
 
	`__n⁄nuŒ
 ((3));

284 
	#f›í
 
f›í64


	)

285 
	#‰e›í
 
‰e›í64


	)

288 #ifde‡
__USE_LARGEFILE64


289 
FILE
 *
	$f›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

290 c⁄° *
__ª°ri˘
 
__modes
)

291 
__©åibuã_mÆloc__
 
__©å_dóŒoc_f˛o£
 
__wur
;

292 
FILE
 *
	$‰e›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

293 c⁄° *
__ª°ri˘
 
__modes
,

294 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
 
	`__n⁄nuŒ
 ((3));

297 #ifdef 
__USE_POSIX


299 
FILE
 *
	$fd›í
 (
__fd
, c⁄° *
__modes
Ë
__THROW


300 
__©åibuã_mÆloc__
 
__©å_dóŒoc_f˛o£
 
__wur
;

303 #ifdef 
__USE_MISC


306 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

307 c⁄° *
__ª°ri˘
 
__modes
,

308 
cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW


309 
__©åibuã_mÆloc__
 
__©å_dóŒoc_f˛o£
 
__wur
;

312 #i‡
deföed
 
__USE_XOPEN2K8
 || 
	`__GLIBC_USE
 (
LIB_EXT2
)

314 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, c⁄° *
__modes
)

315 
__THROW
 
__©åibuã_mÆloc__
 
__©å_dóŒoc_f˛o£
 
__wur
;

320 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW


321 
__©åibuã_mÆloc__
 
__©å_dóŒoc_f˛o£
 
__wur
;

323 #ifde‡
_WCHAR_H


327 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW


328 
__©åibuã_mÆloc__
 
__©å_dóŒoc_f˛o£
;

334 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW


335 
	`__n⁄nuŒ
 ((1));

339 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

340 
__modes
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

342 #ifdef 
__USE_MISC


345 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

346 
size_t
 
__size
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

349 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

357 
	$Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

358 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
	`__n⁄nuŒ
 ((1));

363 
	`¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

365 
	$•rötf
 (*
__ª°ri˘
 
__s
,

366 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

372 
	$vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

373 
__gnuc_va_li°
 
__¨g
Ë
	`__n⁄nuŒ
 ((1));

378 
	`v¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
);

380 
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

381 
__gnuc_va_li°
 
__¨g
Ë
__THROWNL
;

383 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


385 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

386 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

387 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

389 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

390 c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
)

391 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

394 #i‡
	`deföed
 (
__USE_MISC
Ë|| 
	`__GLIBC_USE
 (
LIB_EXT2
)

397 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__f
,

398 
__gnuc_va_li°
 
__¨g
)

399 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

400 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

401 c⁄° *
__ª°ri˘
 
__fmt
, ...)

402 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

403 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

404 c⁄° *
__ª°ri˘
 
__fmt
, ...)

405 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

408 #ifde‡
__USE_XOPEN2K8


410 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
,

411 
__gnuc_va_li°
 
__¨g
)

412 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

413 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

414 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

422 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

423 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
 
	`__n⁄nuŒ
 ((1));

428 
	$sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

430 
	$ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

431 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

437 
	~<bôs/Êﬂä.h
>

438 #i‡!
	`__GLIBC_USE
 (
DEPRECATED_SCANF
Ë&& !
deföed
 
__LDBL_COMPAT
 \

439 && 
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 0

440 #i‡
	`__GLIBC_USE
 (
C23_STRTOL
)

441 #ifde‡
__REDIRECT


442 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

443 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

444 
__isoc23_fsˇnf
Ë
__wur
 
	`__n⁄nuŒ
 ((1));

445 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

446 
__isoc23_sˇnf
Ë
__wur
;

447 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

448 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

449 
__isoc23_ssˇnf
);

451 
	$__isoc23_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

452 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur


453 
	`__n⁄nuŒ
 ((1));

454 
	$__isoc23_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

455 
	$__isoc23_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

456 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

457 
	#fsˇnf
 
__isoc23_fsˇnf


	)

458 
	#sˇnf
 
__isoc23_sˇnf


	)

459 
	#ssˇnf
 
__isoc23_ssˇnf


	)

462 #ifde‡
__REDIRECT


463 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

464 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

465 
__isoc99_fsˇnf
Ë
__wur
 
	`__n⁄nuŒ
 ((1));

466 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

467 
__isoc99_sˇnf
Ë
__wur
;

468 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

469 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

470 
__isoc99_ssˇnf
);

472 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

473 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur


474 
	`__n⁄nuŒ
 ((1));

475 
	$__isoc99_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

476 
	$__isoc99_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

477 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

478 
	#fsˇnf
 
__isoc99_fsˇnf


	)

479 
	#sˇnf
 
__isoc99_sˇnf


	)

480 
	#ssˇnf
 
__isoc99_ssˇnf


	)

485 #ifdef 
__USE_ISOC99


490 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

491 
__gnuc_va_li°
 
__¨g
)

492 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
 
	`__n⁄nuŒ
 ((1));

498 
	$vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
)

499 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

502 
	$vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

503 c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
)

504 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

507 #i‡!
	`__GLIBC_USE
 (
DEPRECATED_SCANF
)

508 #i‡
	`__GLIBC_USE
 (
C23_STRTOL
)

509 #i‡
deföed
 
__REDIRECT
 && !deföed 
__LDBL_COMPAT
 \

510 && 
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 0

511 
	`__REDIRECT
 (
vfsˇnf
,

512 (
FILE
 *
__ª°ri˘
 
__s
,

513 c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
),

514 
__isoc23_vfsˇnf
)

515 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
 
	`__n⁄nuŒ
 ((1));

516 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

517 
__gnuc_va_li°
 
__¨g
), 
__isoc23_vsˇnf
)

518 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

519 
	`__REDIRECT_NTH
 (
vssˇnf
,

520 (c⁄° *
__ª°ri˘
 
__s
,

521 c⁄° *
__ª°ri˘
 
__f‹m©
,

522 
__gnuc_va_li°
 
__¨g
), 
__isoc23_vssˇnf
)

523 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

524 #ñi‡!
deföed
 
__REDIRECT


525 
	$__isoc23_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

526 c⁄° *
__ª°ri˘
 
__f‹m©
,

527 
__gnuc_va_li°
 
__¨g
Ë
__wur
 
	`__n⁄nuŒ
 ((1));

528 
	$__isoc23_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

529 
__gnuc_va_li°
 
__¨g
Ë
__wur
;

530 
	$__isoc23_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

531 c⁄° *
__ª°ri˘
 
__f‹m©
,

532 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

533 
	#vfsˇnf
 
__isoc23_vfsˇnf


	)

534 
	#vsˇnf
 
__isoc23_vsˇnf


	)

535 
	#vssˇnf
 
__isoc23_vssˇnf


	)

538 #i‡
deföed
 
__REDIRECT
 && !deföed 
__LDBL_COMPAT
 \

539 && 
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 0

540 
	`__REDIRECT
 (
vfsˇnf
,

541 (
FILE
 *
__ª°ri˘
 
__s
,

542 c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
),

543 
__isoc99_vfsˇnf
)

544 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
 
	`__n⁄nuŒ
 ((1));

545 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

546 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

547 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

548 
	`__REDIRECT_NTH
 (
vssˇnf
,

549 (c⁄° *
__ª°ri˘
 
__s
,

550 c⁄° *
__ª°ri˘
 
__f‹m©
,

551 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

552 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

553 #ñi‡!
deföed
 
__REDIRECT


554 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

555 c⁄° *
__ª°ri˘
 
__f‹m©
,

556 
__gnuc_va_li°
 
__¨g
Ë
__wur
 
	`__n⁄nuŒ
 ((1));

557 
	$__isoc99_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

558 
__gnuc_va_li°
 
__¨g
Ë
__wur
;

559 
	$__isoc99_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

560 c⁄° *
__ª°ri˘
 
__f‹m©
,

561 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

562 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

563 
	#vsˇnf
 
__isoc99_vsˇnf


	)

564 
	#vssˇnf
 
__isoc99_vssˇnf


	)

575 
	$fgëc
 (
FILE
 *
__°ªam
Ë
	`__n⁄nuŒ
 ((1));

576 
	$gëc
 (
FILE
 *
__°ªam
Ë
	`__n⁄nuŒ
 ((1));

582 
	`gëch¨
 ();

584 #ifde‡
__USE_POSIX199506


589 
	$gëc_u∆ocked
 (
FILE
 *
__°ªam
Ë
	`__n⁄nuŒ
 ((1));

590 
	`gëch¨_u∆ocked
 ();

593 #ifde‡
__USE_MISC


600 
	$fgëc_u∆ocked
 (
FILE
 *
__°ªam
Ë
	`__n⁄nuŒ
 ((1));

611 
	$Âutc
 (
__c
, 
FILE
 *
__°ªam
Ë
	`__n⁄nuŒ
 ((2));

612 
	$putc
 (
__c
, 
FILE
 *
__°ªam
Ë
	`__n⁄nuŒ
 ((2));

618 
	`putch¨
 (
__c
);

620 #ifde‡
__USE_MISC


627 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
Ë
	`__n⁄nuŒ
 ((2));

630 #ifde‡
__USE_POSIX199506


635 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
Ë
	`__n⁄nuŒ
 ((2));

636 
	`putch¨_u∆ocked
 (
__c
);

640 #i‡
deföed
 
__USE_MISC
 \

641 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

643 
	$gëw
 (
FILE
 *
__°ªam
Ë
	`__n⁄nuŒ
 ((1));

646 
	$putw
 (
__w
, 
FILE
 *
__°ªam
Ë
	`__n⁄nuŒ
 ((2));

654 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

655 
__wur
 
	$__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 1, 2Ë
	`__n⁄nuŒ
 ((3));

657 #i‡
	`__GLIBC_USE
 (
DEPRECATED_GETS
)

667 *
	$gës
 (*
__s
Ë
__wur
 
__©åibuã_dïªˇãd__
;

670 #ifde‡
__USE_GNU


677 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

678 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur


679 
	$__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 1, 2Ë
	`__n⁄nuŒ
 ((3));

683 #i‡
deföed
 
__USE_XOPEN2K8
 || 
	`__GLIBC_USE
 (
LIB_EXT2
)

689 
__ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

690 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

691 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
 
	`__n⁄nuŒ
 ((4));

692 
__ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

693 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

694 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
 
	`__n⁄nuŒ
 ((4));

697 
__ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

698 
size_t
 *
__ª°ri˘
 
__n
,

699 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
 
	`__n⁄nuŒ
 ((3));

707 
	$Âuts
 (c⁄° *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
)

708 
	`__n⁄nuŒ
 ((2));

714 
	`puts
 (c⁄° *
__s
);

721 
	$ungëc
 (
__c
, 
FILE
 *
__°ªam
Ë
	`__n⁄nuŒ
 ((2));

728 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

729 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur


730 
	`__n⁄nuŒ
((4));

735 
size_t
 
	$fwrôe
 (c⁄° *
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

736 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
Ë
	`__n⁄nuŒ
((4));

738 #ifde‡
__USE_GNU


745 
	$Âuts_u∆ocked
 (c⁄° *
__ª°ri˘
 
__s
,

746 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
	`__n⁄nuŒ
 ((2));

749 #ifde‡
__USE_MISC


756 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

757 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur


758 
	`__n⁄nuŒ
 ((4));

759 
size_t
 
	$fwrôe_u∆ocked
 (c⁄° *
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

760 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
)

761 
	`__n⁄nuŒ
 ((4));

769 
	$f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
)

770 
	`__n⁄nuŒ
 ((1));

775 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
 
	`__n⁄nuŒ
 ((1));

780 
	$ªwöd
 (
FILE
 *
__°ªam
Ë
	`__n⁄nuŒ
 ((1));

787 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


788 #i‚de‡
__USE_FILE_OFFSET64


793 
	$f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
)

794 
	`__n⁄nuŒ
 ((1));

799 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
 
	`__n⁄nuŒ
 ((1));

801 #ifde‡
__REDIRECT


802 
	`__REDIRECT
 (
f£eko
,

803 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

804 
f£eko64
Ë
	`__n⁄nuŒ
 ((1));

805 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
)

806 
	`__n⁄nuŒ
 ((1));

808 
	#f£eko
 
f£eko64


	)

809 
	#·ñlo
 
·ñlo64


	)

814 #i‚de‡
__USE_FILE_OFFSET64


819 
	$fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
)

820 
	`__n⁄nuŒ
 ((1));

825 
	$f£ços
 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
Ë
	`__n⁄nuŒ
 ((1));

827 #ifde‡
__REDIRECT


828 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

829 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
)

830 
	`__n⁄nuŒ
 ((1));

831 
	`__REDIRECT
 (
f£ços
,

832 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
), 
f£ços64
)

833 
	`__n⁄nuŒ
 ((1));

835 
	#fgëpos
 
fgëpos64


	)

836 
	#f£ços
 
f£ços64


	)

840 #ifde‡
__USE_LARGEFILE64


841 
	$f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
)

842 
	`__n⁄nuŒ
 ((1));

843 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
 
	`__n⁄nuŒ
 ((1));

844 
	$fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
)

845 
	`__n⁄nuŒ
 ((1));

846 
	$f£ços64
 (
FILE
 *
__°ªam
, c⁄° 
Âos64_t
 *
__pos
Ë
	`__n⁄nuŒ
 ((1));

850 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

852 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
 
	`__n⁄nuŒ
 ((1));

854 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
 
	`__n⁄nuŒ
 ((1));

856 #ifde‡
__USE_MISC


858 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

859 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
 
	`__n⁄nuŒ
 ((1));

860 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
 
	`__n⁄nuŒ
 ((1));

868 
	$≥º‹
 (c⁄° *
__s
Ë
__COLD
;

871 #ifdef 
__USE_POSIX


873 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
 
	`__n⁄nuŒ
 ((1));

876 #ifde‡
__USE_MISC


878 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
 
	`__n⁄nuŒ
 ((1));

882 #ifde‡
__USE_POSIX2


887 
	$p˛o£
 (
FILE
 *
__°ªam
Ë
	`__n⁄nuŒ
 ((1));

893 
FILE
 *
	$p›í
 (c⁄° *
__comm™d
, c⁄° *
__modes
)

894 
__©åibuã_mÆloc__
 
	$__©å_dóŒoc
 (
p˛o£
, 1Ë
__wur
;

899 #ifdef 
__USE_POSIX


901 *
	$˘îmid
 (*
__s
Ë
__THROW


902 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1));

906 #i‡(
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
Ë|| deföed 
__USE_GNU


908 *
	$cu£rid
 (*
__s
)

909 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1));

913 #ifdef 
__USE_GNU


914 
ob°ack
;

917 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

918 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

919 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

920 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

921 c⁄° *
__ª°ri˘
 
__f‹m©
,

922 
__gnuc_va_li°
 
__¨gs
)

923 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

927 #ifde‡
__USE_POSIX199506


931 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

935 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
 
	`__n⁄nuŒ
 ((1));

938 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

941 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


944 
	~<bôs/gë›t_posix.h
>

949 
	`__uÊow
 (
FILE
 *);

950 
	`__ovîÊow
 (
FILE
 *, );

952 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


954 
	~<bôs/°dio2-de˛.h
>

959 #i‡
deföed
 
__LDBL_COMPAT
 || 
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 1

960 
	~<bôs/°dio-ldbl.h
>

965 #ifde‡
__USE_EXTERN_INLINES


966 
	~<bôs/°dio.h
>

968 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


970 
	~<bôs/°dio2.h
>

973 
__END_DECLS


	@/usr/include/stdlib.h

23 #i‚def 
_STDLIB_H


25 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

26 
	~<bôs/libc-hódî-°¨t.h
>

29 
	#__√ed_size_t


	)

30 
	#__√ed_wch¨_t


	)

31 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

34 
	g__BEGIN_DECLS


36 
	#_STDLIB_H
 1

	)

38 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


40 
	~<bôs/waôÊags.h
>

41 
	~<bôs/waô°©us.h
>

44 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (°©us)

	)

45 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (°©us)

	)

46 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (°©us)

	)

47 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (°©us)

	)

48 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (°©us)

	)

49 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (°©us)

	)

50 #ifde‡
__WIFCONTINUED


51 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (°©us)

	)

56 
	~<bôs/Êﬂä.h
>

61 
	mquŸ
;

62 
	mªm
;

63 } 
	tdiv_t
;

66 #i‚de‡
__ldiv_t_deföed


69 
	mquŸ
;

70 
	mªm
;

71 } 
	tldiv_t
;

72 
	#__ldiv_t_deföed
 1

	)

75 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


77 
__exãnsi⁄__
 struct

79 
	mquŸ
;

80 
	mªm
;

81 } 
	tŒdiv_t
;

82 
	#__Œdiv_t_deföed
 1

	)

87 
	#RAND_MAX
 2147483647

	)

92 
	#EXIT_FAILURE
 1

	)

93 
	#EXIT_SUCCESS
 0

	)

97 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

98 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

102 
	$©of
 (c⁄° *
__≈å
)

103 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

105 
	$©oi
 (c⁄° *
__≈å
)

106 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

108 
	$©ﬁ
 (c⁄° *
__≈å
)

109 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

111 #ifde‡
__USE_ISOC99


113 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

114 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

118 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

119 **
__ª°ri˘
 
__íd±r
)

120 
__THROW
 
	`__n⁄nuŒ
 ((1));

122 #ifdef 
__USE_ISOC99


124 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

125 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

127 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

128 **
__ª°ri˘
 
__íd±r
)

129 
__THROW
 
	`__n⁄nuŒ
 ((1));

134 #i‡
__HAVE_FLOAT16
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

135 
_Flﬂt16
 
	$°πof16
 (c⁄° *
__ª°ri˘
 
__≈å
,

136 **
__ª°ri˘
 
__íd±r
)

137 
__THROW
 
	`__n⁄nuŒ
 ((1));

140 #i‡
__HAVE_FLOAT32
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

141 
_Flﬂt32
 
	$°πof32
 (c⁄° *
__ª°ri˘
 
__≈å
,

142 **
__ª°ri˘
 
__íd±r
)

143 
__THROW
 
	`__n⁄nuŒ
 ((1));

146 #i‡
__HAVE_FLOAT64
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

147 
_Flﬂt64
 
	$°πof64
 (c⁄° *
__ª°ri˘
 
__≈å
,

148 **
__ª°ri˘
 
__íd±r
)

149 
__THROW
 
	`__n⁄nuŒ
 ((1));

152 #i‡
__HAVE_FLOAT128
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

153 
_Flﬂt128
 
	$°πof128
 (c⁄° *
__ª°ri˘
 
__≈å
,

154 **
__ª°ri˘
 
__íd±r
)

155 
__THROW
 
	`__n⁄nuŒ
 ((1));

158 #i‡
__HAVE_FLOAT32X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

159 
_Flﬂt32x
 
	$°πof32x
 (c⁄° *
__ª°ri˘
 
__≈å
,

160 **
__ª°ri˘
 
__íd±r
)

161 
__THROW
 
	`__n⁄nuŒ
 ((1));

164 #i‡
__HAVE_FLOAT64X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

165 
_Flﬂt64x
 
	$°πof64x
 (c⁄° *
__ª°ri˘
 
__≈å
,

166 **
__ª°ri˘
 
__íd±r
)

167 
__THROW
 
	`__n⁄nuŒ
 ((1));

170 #i‡
__HAVE_FLOAT128X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

171 
_Flﬂt128x
 
	$°πof128x
 (c⁄° *
__ª°ri˘
 
__≈å
,

172 **
__ª°ri˘
 
__íd±r
)

173 
__THROW
 
	`__n⁄nuŒ
 ((1));

177 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

178 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

179 
__THROW
 
	`__n⁄nuŒ
 ((1));

181 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

182 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

183 
__THROW
 
	`__n⁄nuŒ
 ((1));

185 #ifde‡
__USE_MISC


187 
__exãnsi⁄__


188 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

189 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

190 
__THROW
 
	`__n⁄nuŒ
 ((1));

192 
__exãnsi⁄__


193 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

194 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

195 
__THROW
 
	`__n⁄nuŒ
 ((1));

198 #ifde‡
__USE_ISOC99


200 
__exãnsi⁄__


201 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

202 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

203 
__THROW
 
	`__n⁄nuŒ
 ((1));

205 
__exãnsi⁄__


206 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

207 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

208 
__THROW
 
	`__n⁄nuŒ
 ((1));

213 #i‡
	`__GLIBC_USE
 (
C23_STRTOL
)

214 #ifde‡
__REDIRECT


215 
	`__REDIRECT_NTH
 (
°πﬁ
, (c⁄° *
__ª°ri˘
 
__≈å
,

216 **
__ª°ri˘
 
__íd±r
,

217 
__ba£
), 
__isoc23_°πﬁ
)

218 
	`__n⁄nuŒ
 ((1));

219 
	`__REDIRECT_NTH
 (
°πoul
,

220 (c⁄° *
__ª°ri˘
 
__≈å
,

221 **
__ª°ri˘
 
__íd±r
,

222 
__ba£
), 
__isoc23_°πoul
)

223 
	`__n⁄nuŒ
 ((1));

224 #ifde‡
__USE_MISC


225 
__exãnsi⁄__


226 
	`__REDIRECT_NTH
 (
°πoq
, (c⁄° *
__ª°ri˘
 
__≈å
,

227 **
__ª°ri˘
 
__íd±r
,

228 
__ba£
), 
__isoc23_°πﬁl
)

229 
	`__n⁄nuŒ
 ((1));

230 
__exãnsi⁄__


231 
	`__REDIRECT_NTH
 (
°πouq
,

232 (c⁄° *
__ª°ri˘
 
__≈å
,

233 **
__ª°ri˘
 
__íd±r
,

234 
__ba£
), 
__isoc23_°πouŒ
)

235 
	`__n⁄nuŒ
 ((1));

237 
__exãnsi⁄__


238 
	`__REDIRECT_NTH
 (
°πﬁl
, (c⁄° *
__ª°ri˘
 
__≈å
,

239 **
__ª°ri˘
 
__íd±r
,

240 
__ba£
), 
__isoc23_°πﬁl
)

241 
	`__n⁄nuŒ
 ((1));

242 
__exãnsi⁄__


243 
	`__REDIRECT_NTH
 (
°πouŒ
,

244 (c⁄° *
__ª°ri˘
 
__≈å
,

245 **
__ª°ri˘
 
__íd±r
,

246 
__ba£
), 
__isoc23_°πouŒ
)

247 
	`__n⁄nuŒ
 ((1));

249 
	$__isoc23_°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

250 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

251 
__THROW
 
	`__n⁄nuŒ
 ((1));

252 
	$__isoc23_°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

253 **
__ª°ri˘
 
__íd±r
,

254 
__ba£
)

255 
__THROW
 
	`__n⁄nuŒ
 ((1));

256 
__exãnsi⁄__


257 
	$__isoc23_°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

258 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

259 
__THROW
 
	`__n⁄nuŒ
 ((1));

260 
__exãnsi⁄__


261 
	$__isoc23_°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

262 **
__ª°ri˘
 
__íd±r
,

263 
__ba£
)

264 
__THROW
 
	`__n⁄nuŒ
 ((1));

265 
	#°πﬁ
 
__isoc23_°πﬁ


	)

266 
	#°πoul
 
__isoc23_°πoul


	)

267 #ifde‡
__USE_MISC


268 
	#°πoq
 
__isoc23_°πﬁl


	)

269 
	#°πouq
 
__isoc23_°πouŒ


	)

271 
	#°πﬁl
 
__isoc23_°πﬁl


	)

272 
	#°πouŒ
 
__isoc23_°πouŒ


	)

277 #i‡
	`__GLIBC_USE
 (
IEC_60559_BFP_EXT_C23
)

278 
	$°r‰omd
 (*
__de°
, 
size_t
 
__size
, c⁄° *
__f‹m©
,

279 
__f
)

280 
__THROW
 
	`__n⁄nuŒ
 ((3));

282 
	$°r‰omf
 (*
__de°
, 
size_t
 
__size
, c⁄° *
__f‹m©
,

283 
__f
)

284 
__THROW
 
	`__n⁄nuŒ
 ((3));

286 
	$°r‰oml
 (*
__de°
, 
size_t
 
__size
, c⁄° *
__f‹m©
,

287 
__f
)

288 
__THROW
 
	`__n⁄nuŒ
 ((3));

291 #i‡
__HAVE_FLOAT16
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

292 
	$°r‰omf16
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

293 
_Flﬂt16
 
__f
)

294 
__THROW
 
	`__n⁄nuŒ
 ((3));

297 #i‡
__HAVE_FLOAT32
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

298 
	$°r‰omf32
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

299 
_Flﬂt32
 
__f
)

300 
__THROW
 
	`__n⁄nuŒ
 ((3));

303 #i‡
__HAVE_FLOAT64
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

304 
	$°r‰omf64
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

305 
_Flﬂt64
 
__f
)

306 
__THROW
 
	`__n⁄nuŒ
 ((3));

309 #i‡
__HAVE_FLOAT128
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

310 
	$°r‰omf128
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

311 
_Flﬂt128
 
__f
)

312 
__THROW
 
	`__n⁄nuŒ
 ((3));

315 #i‡
__HAVE_FLOAT32X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

316 
	$°r‰omf32x
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

317 
_Flﬂt32x
 
__f
)

318 
__THROW
 
	`__n⁄nuŒ
 ((3));

321 #i‡
__HAVE_FLOAT64X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

322 
	$°r‰omf64x
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

323 
_Flﬂt64x
 
__f
)

324 
__THROW
 
	`__n⁄nuŒ
 ((3));

327 #i‡
__HAVE_FLOAT128X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

328 
	$°r‰omf128x
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

329 
_Flﬂt128x
 
__f
)

330 
__THROW
 
	`__n⁄nuŒ
 ((3));

334 #ifde‡
__USE_GNU


338 
	~<bôs/ty≥s/loˇÀ_t.h
>

340 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

341 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

342 
loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

344 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

345 **
__ª°ri˘
 
__íd±r
,

346 
__ba£
, 
loˇÀ_t
 
__loc
)

347 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

349 
__exãnsi⁄__


350 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

351 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

352 
loˇÀ_t
 
__loc
)

353 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

355 
__exãnsi⁄__


356 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

357 **
__ª°ri˘
 
__íd±r
,

358 
__ba£
, 
loˇÀ_t
 
__loc
)

359 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

363 #i‡
	`__GLIBC_USE
 (
C23_STRTOL
)

364 #ifde‡
__REDIRECT


365 
	`__REDIRECT_NTH
 (
°πﬁ_l
, (c⁄° *
__ª°ri˘
 
__≈å
,

366 **
__ª°ri˘
 
__íd±r
,

367 
__ba£
, 
loˇÀ_t
 
__loc
),

368 
__isoc23_°πﬁ_l
)

369 
	`__n⁄nuŒ
 ((1, 4));

370 
	`__REDIRECT_NTH
 (
°πoul_l
,

371 (c⁄° *
__ª°ri˘
 
__≈å
,

372 **
__ª°ri˘
 
__íd±r
,

373 
__ba£
, 
loˇÀ_t
 
__loc
),

374 
__isoc23_°πoul_l
)

375 
	`__n⁄nuŒ
 ((1, 4));

376 
__exãnsi⁄__


377 
	`__REDIRECT_NTH
 (
°πﬁl_l
, (c⁄° *
__ª°ri˘
 
__≈å
,

378 **
__ª°ri˘
 
__íd±r
,

379 
__ba£
,

380 
loˇÀ_t
 
__loc
),

381 
__isoc23_°πﬁl_l
)

382 
	`__n⁄nuŒ
 ((1, 4));

383 
__exãnsi⁄__


384 
	`__REDIRECT_NTH
 (
°πouŒ_l
,

385 (c⁄° *
__ª°ri˘
 
__≈å
,

386 **
__ª°ri˘
 
__íd±r
,

387 
__ba£
, 
loˇÀ_t
 
__loc
),

388 
__isoc23_°πouŒ_l
)

389 
	`__n⁄nuŒ
 ((1, 4));

391 
	$__isoc23_°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

392 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

393 
loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

394 
	$__isoc23_°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

395 **
__ª°ri˘
 
__íd±r
,

396 
__ba£
, 
loˇÀ_t
 
__loc
)

397 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

398 
__exãnsi⁄__


399 
	$__isoc23_°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

400 **
__ª°ri˘
 
__íd±r
,

401 
__ba£
, 
loˇÀ_t
 
__loc
)

402 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

403 
__exãnsi⁄__


404 
	$__isoc23_°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

405 **
__ª°ri˘
 
__íd±r
,

406 
__ba£
, 
loˇÀ_t
 
__loc
)

407 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

408 
	#°πﬁ_l
 
__isoc23_°πﬁ_l


	)

409 
	#°πoul_l
 
__isoc23_°πoul_l


	)

410 
	#°πﬁl_l
 
__isoc23_°πﬁl_l


	)

411 
	#°πouŒ_l
 
__isoc23_°πouŒ_l


	)

415 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

416 **
__ª°ri˘
 
__íd±r
, 
loˇÀ_t
 
__loc
)

417 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

419 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

420 **
__ª°ri˘
 
__íd±r
, 
loˇÀ_t
 
__loc
)

421 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

423 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

424 **
__ª°ri˘
 
__íd±r
,

425 
loˇÀ_t
 
__loc
)

426 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

428 #i‡
__HAVE_FLOAT16


429 
_Flﬂt16
 
	$°πof16_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

430 **
__ª°ri˘
 
__íd±r
,

431 
loˇÀ_t
 
__loc
)

432 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

435 #i‡
__HAVE_FLOAT32


436 
_Flﬂt32
 
	$°πof32_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

437 **
__ª°ri˘
 
__íd±r
,

438 
loˇÀ_t
 
__loc
)

439 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

442 #i‡
__HAVE_FLOAT64


443 
_Flﬂt64
 
	$°πof64_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

444 **
__ª°ri˘
 
__íd±r
,

445 
loˇÀ_t
 
__loc
)

446 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

449 #i‡
__HAVE_FLOAT128


450 
_Flﬂt128
 
	$°πof128_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

451 **
__ª°ri˘
 
__íd±r
,

452 
loˇÀ_t
 
__loc
)

453 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

456 #i‡
__HAVE_FLOAT32X


457 
_Flﬂt32x
 
	$°πof32x_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

458 **
__ª°ri˘
 
__íd±r
,

459 
loˇÀ_t
 
__loc
)

460 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

463 #i‡
__HAVE_FLOAT64X


464 
_Flﬂt64x
 
	$°πof64x_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

465 **
__ª°ri˘
 
__íd±r
,

466 
loˇÀ_t
 
__loc
)

467 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

470 #i‡
__HAVE_FLOAT128X


471 
_Flﬂt128x
 
	$°πof128x_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

472 **
__ª°ri˘
 
__íd±r
,

473 
loˇÀ_t
 
__loc
)

474 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

479 #ifde‡
__USE_EXTERN_INLINES


480 
__exã∫_ölöe
 

481 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

483  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

484 
	}
}

485 
__exã∫_ölöe
 

486 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

488  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

489 
	}
}

491 #ifde‡
__USE_ISOC99


492 
__exãnsi⁄__
 
__exã∫_ölöe
 

493 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

495  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

496 
	}
}

501 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


505 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

508 
	$a64l
 (c⁄° *
__s
)

509 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

513 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


514 
	~<sys/ty≥s.h
>

521 
	$øndom
 (Ë
__THROW
;

524 
	$§™dom
 (
__£ed
Ë
__THROW
;

530 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

531 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

535 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

538 #ifde‡
__USE_MISC


543 
	søndom_d©a


545 
öt32_t
 *
Âå
;

546 
öt32_t
 *
Ωå
;

547 
öt32_t
 *
°©e
;

548 
ønd_ty≥
;

549 
ønd_deg
;

550 
ønd_£p
;

551 
öt32_t
 *
íd_±r
;

554 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

555 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

557 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

558 
__THROW
 
	`__n⁄nuŒ
 ((2));

560 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

561 
size_t
 
__°©ñí
,

562 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

563 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

565 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

566 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

567 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

573 
	$ønd
 (Ë
__THROW
;

575 
	$§™d
 (
__£ed
Ë
__THROW
;

577 #ifde‡
__USE_POSIX199506


579 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

583 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


587 
	$dønd48
 (Ë
__THROW
;

588 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 
	$Ã™d48
 (Ë
__THROW
;

592 
	$ƒ™d48
 (
__xsubi
[3])

593 
__THROW
 
	`__n⁄nuŒ
 ((1));

596 
	$mønd48
 (Ë
__THROW
;

597 
	$jønd48
 (
__xsubi
[3])

598 
__THROW
 
	`__n⁄nuŒ
 ((1));

601 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

602 *
	$£ed48
 (
__£ed16v
[3])

603 
__THROW
 
	`__n⁄nuŒ
 ((1));

604 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

606 #ifde‡
__USE_MISC


610 
	sdønd48_d©a


612 
__x
[3];

613 
__ﬁd_x
[3];

614 
__c
;

615 
__öô
;

616 
__exãnsi⁄__
 
__a
;

621 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

622 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

623 
	$î™d48_r
 (
__xsubi
[3],

624 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

625 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

628 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

629 *
__ª°ri˘
 
__ªsu…
)

630 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

631 
	$ƒ™d48_r
 (
__xsubi
[3],

632 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

633 *
__ª°ri˘
 
__ªsu…
)

634 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

637 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

638 *
__ª°ri˘
 
__ªsu…
)

639 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

640 
	$jønd48_r
 (
__xsubi
[3],

641 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

642 *
__ª°ri˘
 
__ªsu…
)

643 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

646 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

647 
__THROW
 
	`__n⁄nuŒ
 ((2));

649 
	$£ed48_r
 (
__£ed16v
[3],

650 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

652 
	$lc⁄g48_r
 (
__∑øm
[7],

653 
dønd48_d©a
 *
__buf„r
)

654 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

657 
__uöt32_t
 
	$¨c4øndom
 ()

658 
__THROW
 
__wur
;

661 
	$¨c4øndom_buf
 (*
__buf
, 
size_t
 
__size
)

662 
__THROW
 
	`__n⁄nuŒ
 ((1));

666 
__uöt32_t
 
	$¨c4øndom_unif‹m
 (
__uöt32_t
 
__uµî_bound
)

667 
__THROW
 
__wur
;

672 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__


673 
	`__©åibuã_Æloc_size__
 ((1)Ë
__wur
;

675 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

676 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((1, 2)Ë
__wur
;

683 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

684 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
 
	`__©åibuã_Æloc_size__
 ((2));

687 
	$‰ì
 (*
__±r
Ë
__THROW
;

689 #ifde‡
__USE_MISC


695 *
	$ªÆloˇºay
 (*
__±r
, 
size_t
 
__nmemb
, size_à
__size
)

696 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__


697 
	`__©åibuã_Æloc_size__
 ((2, 3))

698 
__©å_dóŒoc_‰ì
;

701 *
	$ªÆloˇºay
 (*
__±r
, 
size_t
 
__nmemb
, size_à
__size
)

702 
__THROW
 
	`__©å_dóŒoc
 (
ªÆloˇºay
, 1);

705 #ifde‡
__USE_MISC


706 
	~<Æloˇ.h
>

709 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

710 || 
deföed
 
__USE_MISC


712 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__


713 
	`__©åibuã_Æloc_size__
 ((1)Ë
__wur
;

716 #ifde‡
__USE_XOPEN2K


718 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

719 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

722 #ifde‡
__USE_ISOC11


724 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

725 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_Æign__
 ((1))

726 
	`__©åibuã_Æloc_size__
 ((2)Ë
__wur
;

730 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

734 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

736 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


738 #ifde‡
__˝lu•lus


739 "C++" 
	`©_quick_exô
 ((*
__func
) ())

740 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

742 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

746 #ifdef 
__USE_MISC


749 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

750 
__THROW
 
	`__n⁄nuŒ
 ((1));

756 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

758 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


762 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

765 #ifde‡
__USE_ISOC99


768 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

773 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

775 #ifde‡
__USE_GNU


778 *
	$£cuª_gëív
 (c⁄° *
__«me
)

779 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

782 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


786 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

789 #ifde‡
__USE_XOPEN2K


792 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

793 
__THROW
 
	`__n⁄nuŒ
 ((2));

796 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

799 #ifdef 
__USE_MISC


803 
	$˛óªnv
 (Ë
__THROW
;

807 #i‡
deföed
 
__USE_MISC
 \

808 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

814 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

817 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


826 #i‚de‡
__USE_FILE_OFFSET64


827 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

829 #ifde‡
__REDIRECT


830 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

831 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

833 
	#mk°emp
 
mk°emp64


	)

836 #ifde‡
__USE_LARGEFILE64


837 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

841 #ifde‡
__USE_MISC


848 #i‚de‡
__USE_FILE_OFFSET64


849 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

851 #ifde‡
__REDIRECT


852 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

853 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

855 
	#mk°emps
 
mk°emps64


	)

858 #ifde‡
__USE_LARGEFILE64


859 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

860 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

864 #ifde‡
__USE_XOPEN2K8


870 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

873 #ifde‡
__USE_GNU


880 #i‚de‡
__USE_FILE_OFFSET64


881 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

883 #ifde‡
__REDIRECT


884 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

885 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

887 
	#mko°emp
 
mko°emp64


	)

890 #ifde‡
__USE_LARGEFILE64


891 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

900 #i‚de‡
__USE_FILE_OFFSET64


901 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

902 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

904 #ifde‡
__REDIRECT


905 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

906 
__Êags
), 
mko°emps64
)

907 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

909 
	#mko°emps
 
mko°emps64


	)

912 #ifde‡
__USE_LARGEFILE64


913 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

914 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

923 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

926 #ifdef 
__USE_GNU


929 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

930 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_mÆloc__


931 
__©å_dóŒoc_‰ì
 
__wur
;

934 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


940 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

941 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

946 #i‚de‡
__COMPAR_FN_T


947 
	#__COMPAR_FN_T


	)

948 (*
	t__com∑r_‚_t
) (const *, const *);

950 #ifdef 
__USE_GNU


951 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

954 #ifde‡
__USE_GNU


955 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

960 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

961 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

962 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

964 #ifde‡
__USE_EXTERN_INLINES


965 
	~<bôs/°dlib-b£¨ch.h
>

970 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

971 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

972 #ifde‡
__USE_GNU


973 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

974 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

975 
	`__n⁄nuŒ
 ((1, 4));

980 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

981 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

983 #ifde‡
__USE_ISOC99


984 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

985 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

992 
div_t
 
	$div
 (
__numî
, 
__díom
)

993 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

994 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

995 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

997 #ifde‡
__USE_ISOC99


998 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

999 
__díom
)

1000 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

1004 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

1005 || 
deföed
 
__USE_MISC


1012 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

1013 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

1018 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

1019 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

1024 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

1025 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

1028 #ifde‡
__USE_MISC


1030 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

1031 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

1032 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

1033 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

1034 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

1035 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

1036 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

1037 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

1042 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

1043 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

1044 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

1045 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

1046 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

1047 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

1049 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

1050 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

1051 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

1052 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

1053 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

1054 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

1055 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

1056 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

1062 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
;

1065 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

1066 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

1069 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
;

1073 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

1074 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW


1075 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 2));

1077 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

1078 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

1079 
__THROW


1080 
	$__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 1, 3)

1081 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 2));

1083 #ifde‡
__USE_MISC


1088 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1092 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


1099 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

1100 *c⁄° *
__ª°ri˘
 
__tokís
,

1101 **
__ª°ri˘
 
__vÆuï
)

1102 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

1108 #ifde‡
__USE_XOPEN2KXSI


1110 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

1113 #ifde‡
__USE_XOPEN_EXTENDED


1118 
	$gø¡±
 (
__fd
Ë
__THROW
;

1122 
	$u∆ock±
 (
__fd
Ë
__THROW
;

1127 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

1130 #ifde‡
__USE_GNU


1134 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

1135 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 2, 3);

1138 
	`gë±
 ();

1141 #ifde‡
__USE_MISC


1145 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

1146 
__THROW
 
	`__n⁄nuŒ
 ((1));

1149 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K


1152 
	$ây¶Ÿ
 (Ë
__THROW
;

1155 
	~<bôs/°dlib-Êﬂt.h
>

1158 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1159 
	~<bôs/°dlib.h
>

1162 
	~<bôs/Êﬂä.h
>

1163 #i‡
deföed
 
__LDBL_COMPAT
 || 
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 1

1164 
	~<bôs/°dlib-ldbl.h
>

1167 
__END_DECLS


	@/usr/include/sys/time.h

18 #i‚de‡
_SYS_TIME_H


19 
	#_SYS_TIME_H
 1

	)

21 
	~<„©uªs.h
>

23 
	~<bôs/ty≥s.h
>

24 
	~<bôs/ty≥s/time_t.h
>

25 
	~<bôs/ty≥s/°ru˘_timevÆ.h
>

27 #i‚de‡
__su£c⁄ds_t_deföed


28 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

29 
	#__su£c⁄ds_t_deföed


	)

32 
	~<sys/£À˘.h
>

34 
	g__BEGIN_DECLS


36 #ifde‡
__USE_GNU


38 
	#TIMEVAL_TO_TIMESPEC
(
tv
, 
ts
) { \

39 (
ts
)->
tv_£c
 = (
tv
)->tv_sec; \

40 (
ts
)->
tv_n£c
 = (
tv
)->
tv_u£c
 * 1000; \

41 }

	)

42 
	#TIMESPEC_TO_TIMEVAL
(
tv
, 
ts
) { \

43 (
tv
)->
tv_£c
 = (
ts
)->tv_sec; \

44 (
tv
)->
tv_u£c
 = (
ts
)->
tv_n£c
 / 1000; \

45 }

	)

49 #ifde‡
__USE_MISC


52 
	stimez⁄e


54 
	mtz_möuãswe°
;

55 
	mtz_d°time
;

66 #i‚de‡
__USE_TIME64_REDIRECTS


67 
	$gëtimeofday
 (
timevÆ
 *
__ª°ri˘
 
__tv
,

68 *
__ª°ri˘
 
__tz
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

70 #ifde‡
__REDIRECT_NTH


71 
	`__REDIRECT_NTH
 (
gëtimeofday
, (
timevÆ
 *
__ª°ri˘
 
__tv
,

72 *
__ª°ri˘
 
__tz
),

73 
__gëtimeofday64
Ë
	`__n⁄nuŒ
 ((1));

75 
	#gëtimeofday
 
__gëtimeofday64


	)

79 #ifde‡
__USE_MISC


80 #i‚de‡
__USE_TIME64_REDIRECTS


86 
	$£âimeofday
 (c⁄° 
timevÆ
 *
__tv
,

87 c⁄° 
timez⁄e
 *
__tz
)

88 
__THROW
;

94 
	$adjtime
 (c⁄° 
timevÆ
 *
__dñè
,

95 
timevÆ
 *
__ﬁddñè
Ë
__THROW
;

97 #ifde‡
__REDIRECT_NTH


98 
	`__REDIRECT_NTH
 (
£âimeofday
, (c⁄° 
timevÆ
 *
__tv
,

99 c⁄° 
timez⁄e
 *
__tz
),

100 
__£âimeofday64
);

102 
	`__REDIRECT_NTH
 (
adjtime
, (c⁄° 
timevÆ
 *
__dñè
,

103 
timevÆ
 *
__ﬁddñè
),

104 
__adjtime64
);

106 
	#£âimeofday
 
__£âimeofday64


	)

107 
	#adjtime
 
__adjtime64


	)

114 
	e__ôimî_which


117 
ITIMER_REAL
 = 0,

118 
	#ITIMER_REAL
 
ITIMER_REAL


	)

120 
ITIMER_VIRTUAL
 = 1,

121 
	#ITIMER_VIRTUAL
 
ITIMER_VIRTUAL


	)

124 
ITIMER_PROF
 = 2

125 
	#ITIMER_PROF
 
ITIMER_PROF


	)

130 
	sôimîvÆ


133 
timevÆ
 
ô_öãrvÆ
;

135 
timevÆ
 
ô_vÆue
;

138 #i‡
deföed
 
__USE_GNU
 && !deföed 
__˝lu•lus


141 
__ôimî_which
 
	t__ôimî_which_t
;

143 
	t__ôimî_which_t
;

146 #i‚de‡
__USE_TIME64_REDIRECTS


149 
	$gëôimî
 (
__ôimî_which_t
 
__which
,

150 
ôimîvÆ
 *
__vÆue
Ë
__THROW
;

155 
	$£tôimî
 (
__ôimî_which_t
 
__which
,

156 c⁄° 
ôimîvÆ
 *
__ª°ri˘
 
__√w
,

157 
ôimîvÆ
 *
__ª°ri˘
 
__ﬁd
Ë
__THROW
;

162 
	$utimes
 (c⁄° *
__fûe
, c⁄° 
timevÆ
 
__tvp
[2])

163 
__THROW
 
	`__n⁄nuŒ
 ((1));

166 #ifde‡
__REDIRECT_NTH


167 
	`__REDIRECT_NTH
 (
gëôimî
, (
__ôimî_which_t
 
__which
,

168 
ôimîvÆ
 *
__vÆue
),

169 
__gëôimî64
);

171 
	`__REDIRECT_NTH
 (
£tôimî
, (
__ôimî_which_t
 
__which
,

172 c⁄° 
ôimîvÆ
 *
__ª°ri˘
 
__√w
,

173 
ôimîvÆ
 *
__ª°ri˘
 
__ﬁd
),

174 
__£tôimî64
);

176 
	`__REDIRECT_NTH
 (
utimes
, (c⁄° *
__fûe
,

177 c⁄° 
timevÆ
 
__tvp
[2]),

178 
__utimes64
Ë
	`__n⁄nuŒ
 ((1));

180 
	#gëôimî
 
__gëôimî64


	)

181 
	#£tôimî
 
__£tôimî64


	)

182 
	#utimes
 
__utimes64


	)

186 #ifde‡
__USE_MISC


187 #i‚de‡
__USE_TIME64_REDIRECTS


189 
	$lutimes
 (c⁄° *
__fûe
, c⁄° 
timevÆ
 
__tvp
[2])

190 
__THROW
 
	`__n⁄nuŒ
 ((1));

193 
	$futimes
 (
__fd
, c⁄° 
timevÆ
 
__tvp
[2]Ë
__THROW
;

195 #ifde‡
__REDIRECT_NTH


196 
	`__REDIRECT_NTH
 (
lutimes
, (c⁄° *
__fûe
,

197 c⁄° 
timevÆ
 
__tvp
[2]),

198 
__lutimes64
Ë
	`__n⁄nuŒ
 ((1));

200 
	`__REDIRECT_NTH
 (
futimes
, (
__fd
, c⁄° 
timevÆ
 
__tvp
[2]),

201 
__futimes64
);

203 
	#lutimes
 
__lutimes64


	)

204 
	#futimes
 
__futimes64


	)

209 #ifde‡
__USE_GNU


210 #i‚de‡
__USE_TIME64_REDIRECTS


214 
	$futimeßt
 (
__fd
, c⁄° *
__fûe
,

215 c⁄° 
timevÆ
 
__tvp
[2]Ë
__THROW
;

217 #ifde‡
__REDIRECT_NTH


218 
	`__REDIRECT_NTH
 (
futimeßt
, (
__fd
, c⁄° *
__fûe
,

219 c⁄° 
timevÆ
 
__tvp
[2]),

220 
__futimeßt64
);

222 
	#futimeßt
 
__futimeßt64


	)

228 #ifde‡
__USE_MISC


231 
	#timîis£t
(
tvp
Ë(—vp)->
tv_£c
 || (tvp)->
tv_u£c
)

	)

232 
	#timî˛ór
(
tvp
Ë(—vp)->
tv_£c
 = (tvp)->
tv_u£c
 = 0)

	)

233 
	#timîcmp
(
a
, 
b
, 
CMP
) \

234 (((
a
)->
tv_£c
 =(
b
)->tv_sec) \

235 ? ((
a
)->
tv_u£c
 
	`CMP
 (
b
)->tv_usec) \

236 : ((
a
)->
tv_£c
 
	`CMP
 (
b
)->tv_£c))

	)

237 
	#timîadd
(
a
, 
b
, 
ªsu…
) \

239 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯+ (
b
)->tv_sec; \

240 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯+ (
b
)->tv_usec; \

241 i‡((
ªsu…
)->
tv_u£c
 >= 1000000) \

243 ++(
ªsu…
)->
tv_£c
; \

244 (
ªsu…
)->
tv_u£c
 -= 1000000; \

246 
	}
} 0)

	)

247 
	#timîsub
(
a
, 
b
, 
ªsu…
) \

249 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯- (
b
)->tv_sec; \

250 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯- (
b
)->tv_usec; \

251 i‡((
ªsu…
)->
tv_u£c
 < 0) { \

252 --(
ªsu…
)->
tv_£c
; \

253 (
ªsu…
)->
tv_u£c
 += 1000000; \

255 } 0)

	)

258 
	g__END_DECLS


	@/usr/include/unistd.h

22 #i‚def 
_UNISTD_H


23 
	#_UNISTD_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


32 #ifde‡
__USE_XOPEN2K8


34 
	#_POSIX_VERSION
 200809L

	)

35 #ñi‡
deföed
 
__USE_XOPEN2K


37 
	#_POSIX_VERSION
 200112L

	)

38 #ñi‡
deföed
 
__USE_POSIX199506


40 
	#_POSIX_VERSION
 199506L

	)

41 #ñi‡
deföed
 
__USE_POSIX199309


43 
	#_POSIX_VERSION
 199309L

	)

46 
	#_POSIX_VERSION
 199009L

	)

52 #ifde‡
__USE_XOPEN2K8


53 
	#__POSIX2_THIS_VERSION
 200809L

	)

55 #ñi‡
deföed
 
__USE_XOPEN2K


57 
	#__POSIX2_THIS_VERSION
 200112L

	)

58 #ñi‡
deföed
 
__USE_POSIX199506


60 
	#__POSIX2_THIS_VERSION
 199506L

	)

63 
	#__POSIX2_THIS_VERSION
 199209L

	)

67 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

70 
	#_POSIX2_C_VERSION
 
__POSIX2_THIS_VERSION


	)

74 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

78 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

82 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

86 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

89 #ifde‡
__USE_XOPEN2K8


90 
	#_XOPEN_VERSION
 700

	)

91 #ñi‡
deföed
 
__USE_XOPEN2K


92 
	#_XOPEN_VERSION
 600

	)

93 #ñi‡
deföed
 
__USE_UNIX98


94 
	#_XOPEN_VERSION
 500

	)

96 
	#_XOPEN_VERSION
 4

	)

100 
	#_XOPEN_XCU_VERSION
 4

	)

103 
	#_XOPEN_XPG2
 1

	)

104 
	#_XOPEN_XPG3
 1

	)

105 
	#_XOPEN_XPG4
 1

	)

108 
	#_XOPEN_UNIX
 1

	)

112 
	#_XOPEN_ENH_I18N
 1

	)

115 
	#_XOPEN_LEGACY
 1

	)

202 
	~<bôs/posix_›t.h
>

205 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


206 
	~<bôs/ívú⁄míts.h
>

210 
	#STDIN_FILENO
 0

	)

211 
	#STDOUT_FILENO
 1

	)

212 
	#STDERR_FILENO
 2

	)

217 
	~<bôs/ty≥s.h
>

219 #i‚def 
__ssize_t_deföed


220 
__ssize_t
 
	tssize_t
;

221 
	#__ssize_t_deföed


	)

224 
	#__√ed_size_t


	)

225 
	#__√ed_NULL


	)

226 
	~<°ddef.h
>

228 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


231 #i‚de‡
__gid_t_deföed


232 
__gid_t
 
	tgid_t
;

233 
	#__gid_t_deföed


	)

236 #i‚de‡
__uid_t_deföed


237 
__uid_t
 
	tuid_t
;

238 
	#__uid_t_deföed


	)

241 #i‚de‡
__off_t_deföed


242 #i‚de‡
__USE_FILE_OFFSET64


243 
__off_t
 
	toff_t
;

245 
__off64_t
 
	toff_t
;

247 
	#__off_t_deföed


	)

249 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


250 
__off64_t
 
	toff64_t
;

251 
	#__off64_t_deföed


	)

254 #i‚de‡
__u£c⁄ds_t_deföed


255 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

256 
	#__u£c⁄ds_t_deföed


	)

259 #i‚de‡
__pid_t_deföed


260 
__pid_t
 
	tpid_t
;

261 
	#__pid_t_deföed


	)

265 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


266 #i‚de‡
__öçå_t_deföed


267 
__öçå_t
 
	töçå_t
;

268 
	#__öçå_t_deföed


	)

272 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


273 #i‚de‡
__sockÀn_t_deföed


274 
__sockÀn_t
 
	tsockÀn_t
;

275 
	#__sockÀn_t_deföed


	)

281 
	#R_OK
 4

	)

282 
	#W_OK
 2

	)

283 
	#X_OK
 1

	)

284 
	#F_OK
 0

	)

287 
	$ac˚ss
 (c⁄° *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

289 #ifde‡
__USE_GNU


292 
	$euidac˚ss
 (c⁄° *
__«me
, 
__ty≥
)

293 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 
	$óc˚ss
 (c⁄° *
__«me
, 
__ty≥
)

297 
__THROW
 
	`__n⁄nuŒ
 ((1));

300 
	$execvót
 (
__fd
, c⁄° *
__∑th
, *c⁄° 
__¨gv
[],

301 *c⁄° 
__ívp
[], 
__Êags
)

302 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

305 #ifde‡
__USE_ATFILE


309 
	$Ác˚sßt
 (
__fd
, c⁄° *
__fûe
, 
__ty≥
, 
__Êag
)

310 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

315 #i‚def 
_STDIO_H


316 
	#SEEK_SET
 0

	)

317 
	#SEEK_CUR
 1

	)

318 
	#SEEK_END
 2

	)

319 #ifde‡
__USE_GNU


320 
	#SEEK_DATA
 3

	)

321 
	#SEEK_HOLE
 4

	)

325 #i‡
deföed
 
__USE_MISC
 && !deföed 
L_SET


327 
	#L_SET
 
SEEK_SET


	)

328 
	#L_INCR
 
SEEK_CUR


	)

329 
	#L_XTND
 
SEEK_END


	)

338 #i‚de‡
__USE_FILE_OFFSET64


339 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

341 #ifde‡
__REDIRECT_NTH


342 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

343 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

344 
l£ek64
);

346 
	#l£ek
 
l£ek64


	)

349 #ifde‡
__USE_LARGEFILE64


350 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

351 
__THROW
;

358 
	`˛o£
 (
__fd
);

360 #ifde‡
__USE_MISC


363 
	$˛o£‰om
 (
__lowfd
Ë
__THROW
;

371 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur


372 
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 2, 3);

378 
ssize_t
 
	$wrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
Ë
__wur


379 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 2, 3));

381 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


382 #i‚de‡
__USE_FILE_OFFSET64


389 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

390 
__off_t
 
__off£t
Ë
__wur


391 
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 2, 3);

398 
ssize_t
 
	$pwrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

399 
__off_t
 
__off£t
Ë
__wur


400 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 2, 3));

403 #ifde‡
__REDIRECT


404 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

405 
__off64_t
 
__off£t
),

406 
¥ód64
Ë
__wur


407 
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 2, 3);

408 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, c⁄° *
__buf
,

409 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

410 
pwrôe64
Ë
__wur


411 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 2, 3));

413 
	#¥ód
 
¥ód64


	)

414 
	#pwrôe
 
pwrôe64


	)

418 #ifde‡
__USE_LARGEFILE64


422 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

423 
__off64_t
 
__off£t
Ë
__wur


424 
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 2, 3);

427 
ssize_t
 
	$pwrôe64
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

428 
__off64_t
 
__off£t
Ë
__wur


429 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 2, 3));

437 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

439 #ifde‡
__USE_GNU


442 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

452 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

464 
	`¶ìp
 (
__£c⁄ds
);

466 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

467 || 
deföed
 
__USE_MISC


472 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

473 
__THROW
;

480 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

489 
	`∑u£
 ();

493 
	$chown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

494 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

496 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


498 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

503 
	$lchown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

504 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

508 #ifde‡
__USE_ATFILE


511 
	$fchow«t
 (
__fd
, c⁄° *
__fûe
, 
__uid_t
 
__ow√r
,

512 
__gid_t
 
__group
, 
__Êag
)

513 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

517 
	$chdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

519 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


521 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

531 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

533 #ifdef 
__USE_GNU


537 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

540 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

541 || 
deföed
 
__USE_MISC


545 *
	$gëwd
 (*
__buf
)

546 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur


547 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1));

552 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

555 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

557 #ifde‡
__USE_GNU


560 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

564 **
__ívú⁄
;

565 #ifde‡
__USE_GNU


566 **
ívú⁄
;

572 
	$execve
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[],

573 *c⁄° 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

575 #ifde‡
__USE_XOPEN2K8


578 
	$„xecve
 (
__fd
, *c⁄° 
__¨gv
[], *c⁄° 
__ívp
[])

579 
__THROW
 
	`__n⁄nuŒ
 ((2));

584 
	$execv
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[])

585 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

589 
	$exe˛e
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

590 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

594 
	$exe˛
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

595 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

599 
	$execvp
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[])

600 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

605 
	$exe˛p
 (c⁄° *
__fûe
, c⁄° *
__¨g
, ...)

606 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

608 #ifde‡
__USE_GNU


611 
	$execv≥
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[],

612 *c⁄° 
__ívp
[])

613 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

617 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


619 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

624 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

630 
	~<bôs/c⁄‚ame.h
>

633 
	$∑thc⁄f
 (c⁄° *
__∑th
, 
__«me
)

634 
__THROW
 
	`__n⁄nuŒ
 ((1));

637 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

640 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

642 #ifdef 
__USE_POSIX2


644 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW


645 
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 2, 3);

650 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

653 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

656 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

659 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

660 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


661 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

668 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

670 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


682 
	$£çgΩ
 (Ë
__THROW
;

689 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

691 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


693 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

697 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

700 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

703 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

706 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

711 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur


712 
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 2, 1);

713 #ifdef 
__USE_GNU


715 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

722 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

724 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


727 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
 
__wur
;

730 #ifde‡
__USE_XOPEN2K


732 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

739 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

741 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


744 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
 
__wur
;

747 #ifde‡
__USE_XOPEN2K


749 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

752 #ifde‡
__USE_GNU


755 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

756 
__THROW
;

760 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

761 
__THROW
;

765 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

766 
__THROW
 
__wur
;

770 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

771 
__THROW
 
__wur
;

778 
__pid_t
 
	$f‹k
 (Ë
__THROWNL
;

780 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

781 || 
deföed
 
__USE_MISC


786 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

789 #ifde‡
__USE_GNU


793 
__pid_t
 
	$_F‹k
 (Ë
__THROW
;

799 *
	$ây«me
 (
__fd
Ë
__THROW
;

803 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

804 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur


805 
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 2, 3);

809 
	$ißây
 (
__fd
Ë
__THROW
;

811 #ifde‡
__USE_MISC


814 
	$ây¶Ÿ
 (Ë
__THROW
;

819 
	$lök
 (c⁄° *
__‰om
, c⁄° *
__to
)

820 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

822 #ifde‡
__USE_ATFILE


825 
	$lök©
 (
__‰omfd
, c⁄° *
__‰om
, 
__tofd
,

826 c⁄° *
__to
, 
__Êags
)

827 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

830 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


832 
	$symlök
 (c⁄° *
__‰om
, c⁄° *
__to
)

833 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

838 
ssize_t
 
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
,

839 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

840 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur


841 
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 2, 3);

845 #ifde‡
__USE_ATFILE


847 
	$symlök©
 (c⁄° *
__‰om
, 
__tofd
,

848 c⁄° *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

851 
ssize_t
 
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

852 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

853 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur


854 
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 3, 4);

858 
	$u∆ök
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

860 #ifde‡
__USE_ATFILE


862 
	$u∆ök©
 (
__fd
, c⁄° *
__«me
, 
__Êag
)

863 
__THROW
 
	`__n⁄nuŒ
 ((2));

867 
	$rmdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

871 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

874 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

881 *
	`gëlogö
 ();

882 #ifde‡
__USE_POSIX199506


889 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1))

890 
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 1, 2);

893 #ifdef 
__USE_MISC


895 
	$£éogö
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

899 #ifdef 
__USE_POSIX2


903 
	~<bôs/gë›t_posix.h
>

907 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


911 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1))

912 
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 1, 2);

916 #i‡
deföed
 
__USE_MISC


919 
	$£tho°«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

920 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 1, 2));

924 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

930 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

931 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur


932 
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 1, 2);

933 
	$£tdomaö«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

934 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 1, 2));

939 
	$vh™gup
 (Ë
__THROW
;

942 
	$ªvoke
 (c⁄° *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

950 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

951 
size_t
 
__off£t
, 
__sˇÀ
)

952 
__THROW
 
	`__n⁄nuŒ
 ((1));

958 
	$ac˘
 (c⁄° *
__«me
Ë
__THROW
;

962 *
	$gëu£rshñl
 (Ë
__THROW
;

963 
	$ídu£rshñl
 (Ë
__THROW
;

964 
	$£tu£rshñl
 (Ë
__THROW
;

970 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

974 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

977 
	$chroŸ
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

981 *
	$gë∑ss
 (c⁄° *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

989 
	`fsync
 (
__fd
);

992 #ifde‡
__USE_GNU


995 
	$syncfs
 (
__fd
Ë
__THROW
;

999 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


1002 
	`gëho°id
 ();

1005 
	$sync
 (Ë
__THROW
;

1008 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K


1011 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

1016 
	$gëdèbÀsize
 (Ë
__THROW
;

1022 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


1025 #i‚de‡
__USE_FILE_OFFSET64


1026 
	$åunˇã
 (c⁄° *
__fûe
, 
__off_t
 
__Àngth
)

1027 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1029 #ifde‡
__REDIRECT_NTH


1030 
	`__REDIRECT_NTH
 (
åunˇã
,

1031 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
),

1032 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1034 
	#åunˇã
 
åunˇã64


	)

1037 #ifde‡
__USE_LARGEFILE64


1038 
	$åunˇã64
 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
)

1039 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1044 #i‡
deföed
 
__USE_POSIX199309
 \

1045 || 
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1048 #i‚de‡
__USE_FILE_OFFSET64


1049 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1051 #ifde‡
__REDIRECT_NTH


1052 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1053 
·runˇã64
Ë
__wur
;

1055 
	#·runˇã
 
·runˇã64


	)

1058 #ifde‡
__USE_LARGEFILE64


1059 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1065 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1066 || 
deföed
 
__USE_MISC


1070 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1076 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1080 #ifde‡
__USE_MISC


1091 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1096 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1108 
	#F_ULOCK
 0

	)

1109 
	#F_LOCK
 1

	)

1110 
	#F_TLOCK
 2

	)

1111 
	#F_TEST
 3

	)

1113 #i‚de‡
__USE_FILE_OFFSET64


1114 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1116 #ifde‡
__REDIRECT


1117 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1118 
lockf64
Ë
__wur
;

1120 
	#lockf
 
lockf64


	)

1123 #ifde‡
__USE_LARGEFILE64


1124 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1129 #ifde‡
__USE_GNU


1134 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1135 (
__exãnsi⁄__
 \

1136 ({ 
__ªsu…
; \

1137 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1138 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1139 
__ªsu…
; 
	}
}))

	)

1142 
ssize_t
 
c›y_fûe_ønge
 (
__öfd
, 
__off64_t
 *
__pöoff
,

1143 
__outfd
, 
__off64_t
 *
__poutoff
,

1144 
size_t
 
__Àngth
, 
__Êags
);

1147 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1150 
fd©async
 (
__fûdes
);

1153 #ifde‡
__USE_MISC


1162 *
	$¸y±
 (c⁄° *
__key
, c⁄° *
__ß…
)

1163 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1166 #ifdef 
__USE_XOPEN


1171 
	$swab
 (c⁄° *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1172 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2))

1173 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 1, 3))

1174 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

1181 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K


1183 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1186 *
	`cu£rid
 (*
__s
);

1192 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_XOPEN2K


1193 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1194 (*
__∑ª¡
) (),

1195 (*
__chûd
Ë()Ë
__THROW
;

1198 #ifde‡
__USE_MISC


1201 
	$gëíå›y
 (*
__buf„r
, 
size_t
 
__Àngth
Ë
__wur


1202 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 2));

1205 #ifde‡
__USE_GNU


1211 
	$˛o£_ønge
 (
__fd
, 
__max_fd
,

1212 
__Êags
Ë
__THROW
;

1216 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1217 
	~<bôs/uni°d.h
>

1221 
	~<bôs/uni°d_ext.h
>

1223 
__END_DECLS


	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/bits/confname.h

19 #i‚de‡
_UNISTD_H


26 
	m_PC_LINK_MAX
,

27 
	#_PC_LINK_MAX
 
_PC_LINK_MAX


	)

28 
	m_PC_MAX_CANON
,

29 
	#_PC_MAX_CANON
 
_PC_MAX_CANON


	)

30 
	m_PC_MAX_INPUT
,

31 
	#_PC_MAX_INPUT
 
_PC_MAX_INPUT


	)

32 
	m_PC_NAME_MAX
,

33 
	#_PC_NAME_MAX
 
_PC_NAME_MAX


	)

34 
	m_PC_PATH_MAX
,

35 
	#_PC_PATH_MAX
 
_PC_PATH_MAX


	)

36 
	m_PC_PIPE_BUF
,

37 
	#_PC_PIPE_BUF
 
_PC_PIPE_BUF


	)

38 
	m_PC_CHOWN_RESTRICTED
,

39 
	#_PC_CHOWN_RESTRICTED
 
_PC_CHOWN_RESTRICTED


	)

40 
	m_PC_NO_TRUNC
,

41 
	#_PC_NO_TRUNC
 
_PC_NO_TRUNC


	)

42 
	m_PC_VDISABLE
,

43 
	#_PC_VDISABLE
 
_PC_VDISABLE


	)

44 
	m_PC_SYNC_IO
,

45 
	#_PC_SYNC_IO
 
_PC_SYNC_IO


	)

46 
	m_PC_ASYNC_IO
,

47 
	#_PC_ASYNC_IO
 
_PC_ASYNC_IO


	)

48 
	m_PC_PRIO_IO
,

49 
	#_PC_PRIO_IO
 
_PC_PRIO_IO


	)

50 
	m_PC_SOCK_MAXBUF
,

51 
	#_PC_SOCK_MAXBUF
 
_PC_SOCK_MAXBUF


	)

52 
	m_PC_FILESIZEBITS
,

53 
	#_PC_FILESIZEBITS
 
_PC_FILESIZEBITS


	)

54 
	m_PC_REC_INCR_XFER_SIZE
,

55 
	#_PC_REC_INCR_XFER_SIZE
 
_PC_REC_INCR_XFER_SIZE


	)

56 
	m_PC_REC_MAX_XFER_SIZE
,

57 
	#_PC_REC_MAX_XFER_SIZE
 
_PC_REC_MAX_XFER_SIZE


	)

58 
	m_PC_REC_MIN_XFER_SIZE
,

59 
	#_PC_REC_MIN_XFER_SIZE
 
_PC_REC_MIN_XFER_SIZE


	)

60 
	m_PC_REC_XFER_ALIGN
,

61 
	#_PC_REC_XFER_ALIGN
 
_PC_REC_XFER_ALIGN


	)

62 
	m_PC_ALLOC_SIZE_MIN
,

63 
	#_PC_ALLOC_SIZE_MIN
 
_PC_ALLOC_SIZE_MIN


	)

64 
	m_PC_SYMLINK_MAX
,

65 
	#_PC_SYMLINK_MAX
 
_PC_SYMLINK_MAX


	)

66 
	m_PC_2_SYMLINKS


67 
	#_PC_2_SYMLINKS
 
_PC_2_SYMLINKS


	)

73 
	m_SC_ARG_MAX
,

74 
	#_SC_ARG_MAX
 
_SC_ARG_MAX


	)

75 
	m_SC_CHILD_MAX
,

76 
	#_SC_CHILD_MAX
 
_SC_CHILD_MAX


	)

77 
	m_SC_CLK_TCK
,

78 
	#_SC_CLK_TCK
 
_SC_CLK_TCK


	)

79 
	m_SC_NGROUPS_MAX
,

80 
	#_SC_NGROUPS_MAX
 
_SC_NGROUPS_MAX


	)

81 
	m_SC_OPEN_MAX
,

82 
	#_SC_OPEN_MAX
 
_SC_OPEN_MAX


	)

83 
	m_SC_STREAM_MAX
,

84 
	#_SC_STREAM_MAX
 
_SC_STREAM_MAX


	)

85 
	m_SC_TZNAME_MAX
,

86 
	#_SC_TZNAME_MAX
 
_SC_TZNAME_MAX


	)

87 
	m_SC_JOB_CONTROL
,

88 
	#_SC_JOB_CONTROL
 
_SC_JOB_CONTROL


	)

89 
	m_SC_SAVED_IDS
,

90 
	#_SC_SAVED_IDS
 
_SC_SAVED_IDS


	)

91 
	m_SC_REALTIME_SIGNALS
,

92 
	#_SC_REALTIME_SIGNALS
 
_SC_REALTIME_SIGNALS


	)

93 
	m_SC_PRIORITY_SCHEDULING
,

94 
	#_SC_PRIORITY_SCHEDULING
 
_SC_PRIORITY_SCHEDULING


	)

95 
	m_SC_TIMERS
,

96 
	#_SC_TIMERS
 
_SC_TIMERS


	)

97 
	m_SC_ASYNCHRONOUS_IO
,

98 
	#_SC_ASYNCHRONOUS_IO
 
_SC_ASYNCHRONOUS_IO


	)

99 
	m_SC_PRIORITIZED_IO
,

100 
	#_SC_PRIORITIZED_IO
 
_SC_PRIORITIZED_IO


	)

101 
	m_SC_SYNCHRONIZED_IO
,

102 
	#_SC_SYNCHRONIZED_IO
 
_SC_SYNCHRONIZED_IO


	)

103 
	m_SC_FSYNC
,

104 
	#_SC_FSYNC
 
_SC_FSYNC


	)

105 
	m_SC_MAPPED_FILES
,

106 
	#_SC_MAPPED_FILES
 
_SC_MAPPED_FILES


	)

107 
	m_SC_MEMLOCK
,

108 
	#_SC_MEMLOCK
 
_SC_MEMLOCK


	)

109 
	m_SC_MEMLOCK_RANGE
,

110 
	#_SC_MEMLOCK_RANGE
 
_SC_MEMLOCK_RANGE


	)

111 
	m_SC_MEMORY_PROTECTION
,

112 
	#_SC_MEMORY_PROTECTION
 
_SC_MEMORY_PROTECTION


	)

113 
	m_SC_MESSAGE_PASSING
,

114 
	#_SC_MESSAGE_PASSING
 
_SC_MESSAGE_PASSING


	)

115 
	m_SC_SEMAPHORES
,

116 
	#_SC_SEMAPHORES
 
_SC_SEMAPHORES


	)

117 
	m_SC_SHARED_MEMORY_OBJECTS
,

118 
	#_SC_SHARED_MEMORY_OBJECTS
 
_SC_SHARED_MEMORY_OBJECTS


	)

119 
	m_SC_AIO_LISTIO_MAX
,

120 
	#_SC_AIO_LISTIO_MAX
 
_SC_AIO_LISTIO_MAX


	)

121 
	m_SC_AIO_MAX
,

122 
	#_SC_AIO_MAX
 
_SC_AIO_MAX


	)

123 
	m_SC_AIO_PRIO_DELTA_MAX
,

124 
	#_SC_AIO_PRIO_DELTA_MAX
 
_SC_AIO_PRIO_DELTA_MAX


	)

125 
	m_SC_DELAYTIMER_MAX
,

126 
	#_SC_DELAYTIMER_MAX
 
_SC_DELAYTIMER_MAX


	)

127 
	m_SC_MQ_OPEN_MAX
,

128 
	#_SC_MQ_OPEN_MAX
 
_SC_MQ_OPEN_MAX


	)

129 
	m_SC_MQ_PRIO_MAX
,

130 
	#_SC_MQ_PRIO_MAX
 
_SC_MQ_PRIO_MAX


	)

131 
	m_SC_VERSION
,

132 
	#_SC_VERSION
 
_SC_VERSION


	)

133 
	m_SC_PAGESIZE
,

134 
	#_SC_PAGESIZE
 
_SC_PAGESIZE


	)

135 
	#_SC_PAGE_SIZE
 
_SC_PAGESIZE


	)

136 
	m_SC_RTSIG_MAX
,

137 
	#_SC_RTSIG_MAX
 
_SC_RTSIG_MAX


	)

138 
	m_SC_SEM_NSEMS_MAX
,

139 
	#_SC_SEM_NSEMS_MAX
 
_SC_SEM_NSEMS_MAX


	)

140 
	m_SC_SEM_VALUE_MAX
,

141 
	#_SC_SEM_VALUE_MAX
 
_SC_SEM_VALUE_MAX


	)

142 
	m_SC_SIGQUEUE_MAX
,

143 
	#_SC_SIGQUEUE_MAX
 
_SC_SIGQUEUE_MAX


	)

144 
	m_SC_TIMER_MAX
,

145 
	#_SC_TIMER_MAX
 
_SC_TIMER_MAX


	)

149 
	m_SC_BC_BASE_MAX
,

150 
	#_SC_BC_BASE_MAX
 
_SC_BC_BASE_MAX


	)

151 
	m_SC_BC_DIM_MAX
,

152 
	#_SC_BC_DIM_MAX
 
_SC_BC_DIM_MAX


	)

153 
	m_SC_BC_SCALE_MAX
,

154 
	#_SC_BC_SCALE_MAX
 
_SC_BC_SCALE_MAX


	)

155 
	m_SC_BC_STRING_MAX
,

156 
	#_SC_BC_STRING_MAX
 
_SC_BC_STRING_MAX


	)

157 
	m_SC_COLL_WEIGHTS_MAX
,

158 
	#_SC_COLL_WEIGHTS_MAX
 
_SC_COLL_WEIGHTS_MAX


	)

159 
	m_SC_EQUIV_CLASS_MAX
,

160 
	#_SC_EQUIV_CLASS_MAX
 
_SC_EQUIV_CLASS_MAX


	)

161 
	m_SC_EXPR_NEST_MAX
,

162 
	#_SC_EXPR_NEST_MAX
 
_SC_EXPR_NEST_MAX


	)

163 
	m_SC_LINE_MAX
,

164 
	#_SC_LINE_MAX
 
_SC_LINE_MAX


	)

165 
	m_SC_RE_DUP_MAX
,

166 
	#_SC_RE_DUP_MAX
 
_SC_RE_DUP_MAX


	)

167 
	m_SC_CHARCLASS_NAME_MAX
,

168 
	#_SC_CHARCLASS_NAME_MAX
 
_SC_CHARCLASS_NAME_MAX


	)

170 
	m_SC_2_VERSION
,

171 
	#_SC_2_VERSION
 
_SC_2_VERSION


	)

172 
	m_SC_2_C_BIND
,

173 
	#_SC_2_C_BIND
 
_SC_2_C_BIND


	)

174 
	m_SC_2_C_DEV
,

175 
	#_SC_2_C_DEV
 
_SC_2_C_DEV


	)

176 
	m_SC_2_FORT_DEV
,

177 
	#_SC_2_FORT_DEV
 
_SC_2_FORT_DEV


	)

178 
	m_SC_2_FORT_RUN
,

179 
	#_SC_2_FORT_RUN
 
_SC_2_FORT_RUN


	)

180 
	m_SC_2_SW_DEV
,

181 
	#_SC_2_SW_DEV
 
_SC_2_SW_DEV


	)

182 
	m_SC_2_LOCALEDEF
,

183 
	#_SC_2_LOCALEDEF
 
_SC_2_LOCALEDEF


	)

185 
	m_SC_PII
,

186 
	#_SC_PII
 
_SC_PII


	)

187 
	m_SC_PII_XTI
,

188 
	#_SC_PII_XTI
 
_SC_PII_XTI


	)

189 
	m_SC_PII_SOCKET
,

190 
	#_SC_PII_SOCKET
 
_SC_PII_SOCKET


	)

191 
	m_SC_PII_INTERNET
,

192 
	#_SC_PII_INTERNET
 
_SC_PII_INTERNET


	)

193 
	m_SC_PII_OSI
,

194 
	#_SC_PII_OSI
 
_SC_PII_OSI


	)

195 
	m_SC_POLL
,

196 
	#_SC_POLL
 
_SC_POLL


	)

197 
	m_SC_SELECT
,

198 
	#_SC_SELECT
 
_SC_SELECT


	)

199 
	m_SC_UIO_MAXIOV
,

200 
	#_SC_UIO_MAXIOV
 
_SC_UIO_MAXIOV


	)

201 
	m_SC_IOV_MAX
 = 
_SC_UIO_MAXIOV
,

202 
	#_SC_IOV_MAX
 
_SC_IOV_MAX


	)

203 
	m_SC_PII_INTERNET_STREAM
,

204 
	#_SC_PII_INTERNET_STREAM
 
_SC_PII_INTERNET_STREAM


	)

205 
	m_SC_PII_INTERNET_DGRAM
,

206 
	#_SC_PII_INTERNET_DGRAM
 
_SC_PII_INTERNET_DGRAM


	)

207 
	m_SC_PII_OSI_COTS
,

208 
	#_SC_PII_OSI_COTS
 
_SC_PII_OSI_COTS


	)

209 
	m_SC_PII_OSI_CLTS
,

210 
	#_SC_PII_OSI_CLTS
 
_SC_PII_OSI_CLTS


	)

211 
	m_SC_PII_OSI_M
,

212 
	#_SC_PII_OSI_M
 
_SC_PII_OSI_M


	)

213 
	m_SC_T_IOV_MAX
,

214 
	#_SC_T_IOV_MAX
 
_SC_T_IOV_MAX


	)

217 
	m_SC_THREADS
,

218 
	#_SC_THREADS
 
_SC_THREADS


	)

219 
	m_SC_THREAD_SAFE_FUNCTIONS
,

220 
	#_SC_THREAD_SAFE_FUNCTIONS
 
_SC_THREAD_SAFE_FUNCTIONS


	)

221 
	m_SC_GETGR_R_SIZE_MAX
,

222 
	#_SC_GETGR_R_SIZE_MAX
 
_SC_GETGR_R_SIZE_MAX


	)

223 
	m_SC_GETPW_R_SIZE_MAX
,

224 
	#_SC_GETPW_R_SIZE_MAX
 
_SC_GETPW_R_SIZE_MAX


	)

225 
	m_SC_LOGIN_NAME_MAX
,

226 
	#_SC_LOGIN_NAME_MAX
 
_SC_LOGIN_NAME_MAX


	)

227 
	m_SC_TTY_NAME_MAX
,

228 
	#_SC_TTY_NAME_MAX
 
_SC_TTY_NAME_MAX


	)

229 
	m_SC_THREAD_DESTRUCTOR_ITERATIONS
,

230 
	#_SC_THREAD_DESTRUCTOR_ITERATIONS
 
_SC_THREAD_DESTRUCTOR_ITERATIONS


	)

231 
	m_SC_THREAD_KEYS_MAX
,

232 
	#_SC_THREAD_KEYS_MAX
 
_SC_THREAD_KEYS_MAX


	)

233 
	m_SC_THREAD_STACK_MIN
,

234 
	#_SC_THREAD_STACK_MIN
 
_SC_THREAD_STACK_MIN


	)

235 
	m_SC_THREAD_THREADS_MAX
,

236 
	#_SC_THREAD_THREADS_MAX
 
_SC_THREAD_THREADS_MAX


	)

237 
	m_SC_THREAD_ATTR_STACKADDR
,

238 
	#_SC_THREAD_ATTR_STACKADDR
 
_SC_THREAD_ATTR_STACKADDR


	)

239 
	m_SC_THREAD_ATTR_STACKSIZE
,

240 
	#_SC_THREAD_ATTR_STACKSIZE
 
_SC_THREAD_ATTR_STACKSIZE


	)

241 
	m_SC_THREAD_PRIORITY_SCHEDULING
,

242 
	#_SC_THREAD_PRIORITY_SCHEDULING
 
_SC_THREAD_PRIORITY_SCHEDULING


	)

243 
	m_SC_THREAD_PRIO_INHERIT
,

244 
	#_SC_THREAD_PRIO_INHERIT
 
_SC_THREAD_PRIO_INHERIT


	)

245 
	m_SC_THREAD_PRIO_PROTECT
,

246 
	#_SC_THREAD_PRIO_PROTECT
 
_SC_THREAD_PRIO_PROTECT


	)

247 
	m_SC_THREAD_PROCESS_SHARED
,

248 
	#_SC_THREAD_PROCESS_SHARED
 
_SC_THREAD_PROCESS_SHARED


	)

250 
	m_SC_NPROCESSORS_CONF
,

251 
	#_SC_NPROCESSORS_CONF
 
_SC_NPROCESSORS_CONF


	)

252 
	m_SC_NPROCESSORS_ONLN
,

253 
	#_SC_NPROCESSORS_ONLN
 
_SC_NPROCESSORS_ONLN


	)

254 
	m_SC_PHYS_PAGES
,

255 
	#_SC_PHYS_PAGES
 
_SC_PHYS_PAGES


	)

256 
	m_SC_AVPHYS_PAGES
,

257 
	#_SC_AVPHYS_PAGES
 
_SC_AVPHYS_PAGES


	)

258 
	m_SC_ATEXIT_MAX
,

259 
	#_SC_ATEXIT_MAX
 
_SC_ATEXIT_MAX


	)

260 
	m_SC_PASS_MAX
,

261 
	#_SC_PASS_MAX
 
_SC_PASS_MAX


	)

263 
	m_SC_XOPEN_VERSION
,

264 
	#_SC_XOPEN_VERSION
 
_SC_XOPEN_VERSION


	)

265 
	m_SC_XOPEN_XCU_VERSION
,

266 
	#_SC_XOPEN_XCU_VERSION
 
_SC_XOPEN_XCU_VERSION


	)

267 
	m_SC_XOPEN_UNIX
,

268 
	#_SC_XOPEN_UNIX
 
_SC_XOPEN_UNIX


	)

269 
	m_SC_XOPEN_CRYPT
,

270 
	#_SC_XOPEN_CRYPT
 
_SC_XOPEN_CRYPT


	)

271 
	m_SC_XOPEN_ENH_I18N
,

272 
	#_SC_XOPEN_ENH_I18N
 
_SC_XOPEN_ENH_I18N


	)

273 
	m_SC_XOPEN_SHM
,

274 
	#_SC_XOPEN_SHM
 
_SC_XOPEN_SHM


	)

276 
	m_SC_2_CHAR_TERM
,

277 
	#_SC_2_CHAR_TERM
 
_SC_2_CHAR_TERM


	)

278 
	m_SC_2_C_VERSION
,

279 
	#_SC_2_C_VERSION
 
_SC_2_C_VERSION


	)

280 
	m_SC_2_UPE
,

281 
	#_SC_2_UPE
 
_SC_2_UPE


	)

283 
	m_SC_XOPEN_XPG2
,

284 
	#_SC_XOPEN_XPG2
 
_SC_XOPEN_XPG2


	)

285 
	m_SC_XOPEN_XPG3
,

286 
	#_SC_XOPEN_XPG3
 
_SC_XOPEN_XPG3


	)

287 
	m_SC_XOPEN_XPG4
,

288 
	#_SC_XOPEN_XPG4
 
_SC_XOPEN_XPG4


	)

290 
	m_SC_CHAR_BIT
,

291 
	#_SC_CHAR_BIT
 
_SC_CHAR_BIT


	)

292 
	m_SC_CHAR_MAX
,

293 
	#_SC_CHAR_MAX
 
_SC_CHAR_MAX


	)

294 
	m_SC_CHAR_MIN
,

295 
	#_SC_CHAR_MIN
 
_SC_CHAR_MIN


	)

296 
	m_SC_INT_MAX
,

297 
	#_SC_INT_MAX
 
_SC_INT_MAX


	)

298 
	m_SC_INT_MIN
,

299 
	#_SC_INT_MIN
 
_SC_INT_MIN


	)

300 
	m_SC_LONG_BIT
,

301 
	#_SC_LONG_BIT
 
_SC_LONG_BIT


	)

302 
	m_SC_WORD_BIT
,

303 
	#_SC_WORD_BIT
 
_SC_WORD_BIT


	)

304 
	m_SC_MB_LEN_MAX
,

305 
	#_SC_MB_LEN_MAX
 
_SC_MB_LEN_MAX


	)

306 
	m_SC_NZERO
,

307 
	#_SC_NZERO
 
_SC_NZERO


	)

308 
	m_SC_SSIZE_MAX
,

309 
	#_SC_SSIZE_MAX
 
_SC_SSIZE_MAX


	)

310 
	m_SC_SCHAR_MAX
,

311 
	#_SC_SCHAR_MAX
 
_SC_SCHAR_MAX


	)

312 
	m_SC_SCHAR_MIN
,

313 
	#_SC_SCHAR_MIN
 
_SC_SCHAR_MIN


	)

314 
	m_SC_SHRT_MAX
,

315 
	#_SC_SHRT_MAX
 
_SC_SHRT_MAX


	)

316 
	m_SC_SHRT_MIN
,

317 
	#_SC_SHRT_MIN
 
_SC_SHRT_MIN


	)

318 
	m_SC_UCHAR_MAX
,

319 
	#_SC_UCHAR_MAX
 
_SC_UCHAR_MAX


	)

320 
	m_SC_UINT_MAX
,

321 
	#_SC_UINT_MAX
 
_SC_UINT_MAX


	)

322 
	m_SC_ULONG_MAX
,

323 
	#_SC_ULONG_MAX
 
_SC_ULONG_MAX


	)

324 
	m_SC_USHRT_MAX
,

325 
	#_SC_USHRT_MAX
 
_SC_USHRT_MAX


	)

327 
	m_SC_NL_ARGMAX
,

328 
	#_SC_NL_ARGMAX
 
_SC_NL_ARGMAX


	)

329 
	m_SC_NL_LANGMAX
,

330 
	#_SC_NL_LANGMAX
 
_SC_NL_LANGMAX


	)

331 
	m_SC_NL_MSGMAX
,

332 
	#_SC_NL_MSGMAX
 
_SC_NL_MSGMAX


	)

333 
	m_SC_NL_NMAX
,

334 
	#_SC_NL_NMAX
 
_SC_NL_NMAX


	)

335 
	m_SC_NL_SETMAX
,

336 
	#_SC_NL_SETMAX
 
_SC_NL_SETMAX


	)

337 
	m_SC_NL_TEXTMAX
,

338 
	#_SC_NL_TEXTMAX
 
_SC_NL_TEXTMAX


	)

340 
	m_SC_XBS5_ILP32_OFF32
,

341 
	#_SC_XBS5_ILP32_OFF32
 
_SC_XBS5_ILP32_OFF32


	)

342 
	m_SC_XBS5_ILP32_OFFBIG
,

343 
	#_SC_XBS5_ILP32_OFFBIG
 
_SC_XBS5_ILP32_OFFBIG


	)

344 
	m_SC_XBS5_LP64_OFF64
,

345 
	#_SC_XBS5_LP64_OFF64
 
_SC_XBS5_LP64_OFF64


	)

346 
	m_SC_XBS5_LPBIG_OFFBIG
,

347 
	#_SC_XBS5_LPBIG_OFFBIG
 
_SC_XBS5_LPBIG_OFFBIG


	)

349 
	m_SC_XOPEN_LEGACY
,

350 
	#_SC_XOPEN_LEGACY
 
_SC_XOPEN_LEGACY


	)

351 
	m_SC_XOPEN_REALTIME
,

352 
	#_SC_XOPEN_REALTIME
 
_SC_XOPEN_REALTIME


	)

353 
	m_SC_XOPEN_REALTIME_THREADS
,

354 
	#_SC_XOPEN_REALTIME_THREADS
 
_SC_XOPEN_REALTIME_THREADS


	)

356 
	m_SC_ADVISORY_INFO
,

357 
	#_SC_ADVISORY_INFO
 
_SC_ADVISORY_INFO


	)

358 
	m_SC_BARRIERS
,

359 
	#_SC_BARRIERS
 
_SC_BARRIERS


	)

360 
	m_SC_BASE
,

361 
	#_SC_BASE
 
_SC_BASE


	)

362 
	m_SC_C_LANG_SUPPORT
,

363 
	#_SC_C_LANG_SUPPORT
 
_SC_C_LANG_SUPPORT


	)

364 
	m_SC_C_LANG_SUPPORT_R
,

365 
	#_SC_C_LANG_SUPPORT_R
 
_SC_C_LANG_SUPPORT_R


	)

366 
	m_SC_CLOCK_SELECTION
,

367 
	#_SC_CLOCK_SELECTION
 
_SC_CLOCK_SELECTION


	)

368 
	m_SC_CPUTIME
,

369 
	#_SC_CPUTIME
 
_SC_CPUTIME


	)

370 
	m_SC_THREAD_CPUTIME
,

371 
	#_SC_THREAD_CPUTIME
 
_SC_THREAD_CPUTIME


	)

372 
	m_SC_DEVICE_IO
,

373 
	#_SC_DEVICE_IO
 
_SC_DEVICE_IO


	)

374 
	m_SC_DEVICE_SPECIFIC
,

375 
	#_SC_DEVICE_SPECIFIC
 
_SC_DEVICE_SPECIFIC


	)

376 
	m_SC_DEVICE_SPECIFIC_R
,

377 
	#_SC_DEVICE_SPECIFIC_R
 
_SC_DEVICE_SPECIFIC_R


	)

378 
	m_SC_FD_MGMT
,

379 
	#_SC_FD_MGMT
 
_SC_FD_MGMT


	)

380 
	m_SC_FIFO
,

381 
	#_SC_FIFO
 
_SC_FIFO


	)

382 
	m_SC_PIPE
,

383 
	#_SC_PIPE
 
_SC_PIPE


	)

384 
	m_SC_FILE_ATTRIBUTES
,

385 
	#_SC_FILE_ATTRIBUTES
 
_SC_FILE_ATTRIBUTES


	)

386 
	m_SC_FILE_LOCKING
,

387 
	#_SC_FILE_LOCKING
 
_SC_FILE_LOCKING


	)

388 
	m_SC_FILE_SYSTEM
,

389 
	#_SC_FILE_SYSTEM
 
_SC_FILE_SYSTEM


	)

390 
	m_SC_MONOTONIC_CLOCK
,

391 
	#_SC_MONOTONIC_CLOCK
 
_SC_MONOTONIC_CLOCK


	)

392 
	m_SC_MULTI_PROCESS
,

393 
	#_SC_MULTI_PROCESS
 
_SC_MULTI_PROCESS


	)

394 
	m_SC_SINGLE_PROCESS
,

395 
	#_SC_SINGLE_PROCESS
 
_SC_SINGLE_PROCESS


	)

396 
	m_SC_NETWORKING
,

397 
	#_SC_NETWORKING
 
_SC_NETWORKING


	)

398 
	m_SC_READER_WRITER_LOCKS
,

399 
	#_SC_READER_WRITER_LOCKS
 
_SC_READER_WRITER_LOCKS


	)

400 
	m_SC_SPIN_LOCKS
,

401 
	#_SC_SPIN_LOCKS
 
_SC_SPIN_LOCKS


	)

402 
	m_SC_REGEXP
,

403 
	#_SC_REGEXP
 
_SC_REGEXP


	)

404 
	m_SC_REGEX_VERSION
,

405 
	#_SC_REGEX_VERSION
 
_SC_REGEX_VERSION


	)

406 
	m_SC_SHELL
,

407 
	#_SC_SHELL
 
_SC_SHELL


	)

408 
	m_SC_SIGNALS
,

409 
	#_SC_SIGNALS
 
_SC_SIGNALS


	)

410 
	m_SC_SPAWN
,

411 
	#_SC_SPAWN
 
_SC_SPAWN


	)

412 
	m_SC_SPORADIC_SERVER
,

413 
	#_SC_SPORADIC_SERVER
 
_SC_SPORADIC_SERVER


	)

414 
	m_SC_THREAD_SPORADIC_SERVER
,

415 
	#_SC_THREAD_SPORADIC_SERVER
 
_SC_THREAD_SPORADIC_SERVER


	)

416 
	m_SC_SYSTEM_DATABASE
,

417 
	#_SC_SYSTEM_DATABASE
 
_SC_SYSTEM_DATABASE


	)

418 
	m_SC_SYSTEM_DATABASE_R
,

419 
	#_SC_SYSTEM_DATABASE_R
 
_SC_SYSTEM_DATABASE_R


	)

420 
	m_SC_TIMEOUTS
,

421 
	#_SC_TIMEOUTS
 
_SC_TIMEOUTS


	)

422 
	m_SC_TYPED_MEMORY_OBJECTS
,

423 
	#_SC_TYPED_MEMORY_OBJECTS
 
_SC_TYPED_MEMORY_OBJECTS


	)

424 
	m_SC_USER_GROUPS
,

425 
	#_SC_USER_GROUPS
 
_SC_USER_GROUPS


	)

426 
	m_SC_USER_GROUPS_R
,

427 
	#_SC_USER_GROUPS_R
 
_SC_USER_GROUPS_R


	)

428 
	m_SC_2_PBS
,

429 
	#_SC_2_PBS
 
_SC_2_PBS


	)

430 
	m_SC_2_PBS_ACCOUNTING
,

431 
	#_SC_2_PBS_ACCOUNTING
 
_SC_2_PBS_ACCOUNTING


	)

432 
	m_SC_2_PBS_LOCATE
,

433 
	#_SC_2_PBS_LOCATE
 
_SC_2_PBS_LOCATE


	)

434 
	m_SC_2_PBS_MESSAGE
,

435 
	#_SC_2_PBS_MESSAGE
 
_SC_2_PBS_MESSAGE


	)

436 
	m_SC_2_PBS_TRACK
,

437 
	#_SC_2_PBS_TRACK
 
_SC_2_PBS_TRACK


	)

438 
	m_SC_SYMLOOP_MAX
,

439 
	#_SC_SYMLOOP_MAX
 
_SC_SYMLOOP_MAX


	)

440 
	m_SC_STREAMS
,

441 
	#_SC_STREAMS
 
_SC_STREAMS


	)

442 
	m_SC_2_PBS_CHECKPOINT
,

443 
	#_SC_2_PBS_CHECKPOINT
 
_SC_2_PBS_CHECKPOINT


	)

445 
	m_SC_V6_ILP32_OFF32
,

446 
	#_SC_V6_ILP32_OFF32
 
_SC_V6_ILP32_OFF32


	)

447 
	m_SC_V6_ILP32_OFFBIG
,

448 
	#_SC_V6_ILP32_OFFBIG
 
_SC_V6_ILP32_OFFBIG


	)

449 
	m_SC_V6_LP64_OFF64
,

450 
	#_SC_V6_LP64_OFF64
 
_SC_V6_LP64_OFF64


	)

451 
	m_SC_V6_LPBIG_OFFBIG
,

452 
	#_SC_V6_LPBIG_OFFBIG
 
_SC_V6_LPBIG_OFFBIG


	)

454 
	m_SC_HOST_NAME_MAX
,

455 
	#_SC_HOST_NAME_MAX
 
_SC_HOST_NAME_MAX


	)

456 
	m_SC_TRACE
,

457 
	#_SC_TRACE
 
_SC_TRACE


	)

458 
	m_SC_TRACE_EVENT_FILTER
,

459 
	#_SC_TRACE_EVENT_FILTER
 
_SC_TRACE_EVENT_FILTER


	)

460 
	m_SC_TRACE_INHERIT
,

461 
	#_SC_TRACE_INHERIT
 
_SC_TRACE_INHERIT


	)

462 
	m_SC_TRACE_LOG
,

463 
	#_SC_TRACE_LOG
 
_SC_TRACE_LOG


	)

465 
	m_SC_LEVEL1_ICACHE_SIZE
,

466 
	#_SC_LEVEL1_ICACHE_SIZE
 
_SC_LEVEL1_ICACHE_SIZE


	)

467 
	m_SC_LEVEL1_ICACHE_ASSOC
,

468 
	#_SC_LEVEL1_ICACHE_ASSOC
 
_SC_LEVEL1_ICACHE_ASSOC


	)

469 
	m_SC_LEVEL1_ICACHE_LINESIZE
,

470 
	#_SC_LEVEL1_ICACHE_LINESIZE
 
_SC_LEVEL1_ICACHE_LINESIZE


	)

471 
	m_SC_LEVEL1_DCACHE_SIZE
,

472 
	#_SC_LEVEL1_DCACHE_SIZE
 
_SC_LEVEL1_DCACHE_SIZE


	)

473 
	m_SC_LEVEL1_DCACHE_ASSOC
,

474 
	#_SC_LEVEL1_DCACHE_ASSOC
 
_SC_LEVEL1_DCACHE_ASSOC


	)

475 
	m_SC_LEVEL1_DCACHE_LINESIZE
,

476 
	#_SC_LEVEL1_DCACHE_LINESIZE
 
_SC_LEVEL1_DCACHE_LINESIZE


	)

477 
	m_SC_LEVEL2_CACHE_SIZE
,

478 
	#_SC_LEVEL2_CACHE_SIZE
 
_SC_LEVEL2_CACHE_SIZE


	)

479 
	m_SC_LEVEL2_CACHE_ASSOC
,

480 
	#_SC_LEVEL2_CACHE_ASSOC
 
_SC_LEVEL2_CACHE_ASSOC


	)

481 
	m_SC_LEVEL2_CACHE_LINESIZE
,

482 
	#_SC_LEVEL2_CACHE_LINESIZE
 
_SC_LEVEL2_CACHE_LINESIZE


	)

483 
	m_SC_LEVEL3_CACHE_SIZE
,

484 
	#_SC_LEVEL3_CACHE_SIZE
 
_SC_LEVEL3_CACHE_SIZE


	)

485 
	m_SC_LEVEL3_CACHE_ASSOC
,

486 
	#_SC_LEVEL3_CACHE_ASSOC
 
_SC_LEVEL3_CACHE_ASSOC


	)

487 
	m_SC_LEVEL3_CACHE_LINESIZE
,

488 
	#_SC_LEVEL3_CACHE_LINESIZE
 
_SC_LEVEL3_CACHE_LINESIZE


	)

489 
	m_SC_LEVEL4_CACHE_SIZE
,

490 
	#_SC_LEVEL4_CACHE_SIZE
 
_SC_LEVEL4_CACHE_SIZE


	)

491 
	m_SC_LEVEL4_CACHE_ASSOC
,

492 
	#_SC_LEVEL4_CACHE_ASSOC
 
_SC_LEVEL4_CACHE_ASSOC


	)

493 
	m_SC_LEVEL4_CACHE_LINESIZE
,

494 
	#_SC_LEVEL4_CACHE_LINESIZE
 
_SC_LEVEL4_CACHE_LINESIZE


	)

497 
	m_SC_IPV6
 = 
_SC_LEVEL1_ICACHE_SIZE
 + 50,

498 
	#_SC_IPV6
 
_SC_IPV6


	)

499 
	m_SC_RAW_SOCKETS
,

500 
	#_SC_RAW_SOCKETS
 
_SC_RAW_SOCKETS


	)

502 
	m_SC_V7_ILP32_OFF32
,

503 
	#_SC_V7_ILP32_OFF32
 
_SC_V7_ILP32_OFF32


	)

504 
	m_SC_V7_ILP32_OFFBIG
,

505 
	#_SC_V7_ILP32_OFFBIG
 
_SC_V7_ILP32_OFFBIG


	)

506 
	m_SC_V7_LP64_OFF64
,

507 
	#_SC_V7_LP64_OFF64
 
_SC_V7_LP64_OFF64


	)

508 
	m_SC_V7_LPBIG_OFFBIG
,

509 
	#_SC_V7_LPBIG_OFFBIG
 
_SC_V7_LPBIG_OFFBIG


	)

511 
	m_SC_SS_REPL_MAX
,

512 
	#_SC_SS_REPL_MAX
 
_SC_SS_REPL_MAX


	)

514 
	m_SC_TRACE_EVENT_NAME_MAX
,

515 
	#_SC_TRACE_EVENT_NAME_MAX
 
_SC_TRACE_EVENT_NAME_MAX


	)

516 
	m_SC_TRACE_NAME_MAX
,

517 
	#_SC_TRACE_NAME_MAX
 
_SC_TRACE_NAME_MAX


	)

518 
	m_SC_TRACE_SYS_MAX
,

519 
	#_SC_TRACE_SYS_MAX
 
_SC_TRACE_SYS_MAX


	)

520 
	m_SC_TRACE_USER_EVENT_MAX
,

521 
	#_SC_TRACE_USER_EVENT_MAX
 
_SC_TRACE_USER_EVENT_MAX


	)

523 
	m_SC_XOPEN_STREAMS
,

524 
	#_SC_XOPEN_STREAMS
 
_SC_XOPEN_STREAMS


	)

526 
	m_SC_THREAD_ROBUST_PRIO_INHERIT
,

527 
	#_SC_THREAD_ROBUST_PRIO_INHERIT
 
_SC_THREAD_ROBUST_PRIO_INHERIT


	)

528 
	m_SC_THREAD_ROBUST_PRIO_PROTECT
,

529 
	#_SC_THREAD_ROBUST_PRIO_PROTECT
 
_SC_THREAD_ROBUST_PRIO_PROTECT


	)

531 
	m_SC_MINSIGSTKSZ
,

532 
	#_SC_MINSIGSTKSZ
 
_SC_MINSIGSTKSZ


	)

534 
	m_SC_SIGSTKSZ


535 
	#_SC_SIGSTKSZ
 
_SC_SIGSTKSZ


	)

541 
	m_CS_PATH
,

542 
	#_CS_PATH
 
_CS_PATH


	)

544 
	m_CS_V6_WIDTH_RESTRICTED_ENVS
,

545 
	#_CS_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

546 
	#_CS_POSIX_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

548 
	m_CS_GNU_LIBC_VERSION
,

549 
	#_CS_GNU_LIBC_VERSION
 
_CS_GNU_LIBC_VERSION


	)

550 
	m_CS_GNU_LIBPTHREAD_VERSION
,

551 
	#_CS_GNU_LIBPTHREAD_VERSION
 
_CS_GNU_LIBPTHREAD_VERSION


	)

553 
	m_CS_V5_WIDTH_RESTRICTED_ENVS
,

554 
	#_CS_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

555 
	#_CS_POSIX_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

557 
	m_CS_V7_WIDTH_RESTRICTED_ENVS
,

558 
	#_CS_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

559 
	#_CS_POSIX_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

561 
	m_CS_LFS_CFLAGS
 = 1000,

562 
	#_CS_LFS_CFLAGS
 
_CS_LFS_CFLAGS


	)

563 
	m_CS_LFS_LDFLAGS
,

564 
	#_CS_LFS_LDFLAGS
 
_CS_LFS_LDFLAGS


	)

565 
	m_CS_LFS_LIBS
,

566 
	#_CS_LFS_LIBS
 
_CS_LFS_LIBS


	)

567 
	m_CS_LFS_LINTFLAGS
,

568 
	#_CS_LFS_LINTFLAGS
 
_CS_LFS_LINTFLAGS


	)

569 
	m_CS_LFS64_CFLAGS
,

570 
	#_CS_LFS64_CFLAGS
 
_CS_LFS64_CFLAGS


	)

571 
	m_CS_LFS64_LDFLAGS
,

572 
	#_CS_LFS64_LDFLAGS
 
_CS_LFS64_LDFLAGS


	)

573 
	m_CS_LFS64_LIBS
,

574 
	#_CS_LFS64_LIBS
 
_CS_LFS64_LIBS


	)

575 
	m_CS_LFS64_LINTFLAGS
,

576 
	#_CS_LFS64_LINTFLAGS
 
_CS_LFS64_LINTFLAGS


	)

578 
	m_CS_XBS5_ILP32_OFF32_CFLAGS
 = 1100,

579 
	#_CS_XBS5_ILP32_OFF32_CFLAGS
 
_CS_XBS5_ILP32_OFF32_CFLAGS


	)

580 
	m_CS_XBS5_ILP32_OFF32_LDFLAGS
,

581 
	#_CS_XBS5_ILP32_OFF32_LDFLAGS
 
_CS_XBS5_ILP32_OFF32_LDFLAGS


	)

582 
	m_CS_XBS5_ILP32_OFF32_LIBS
,

583 
	#_CS_XBS5_ILP32_OFF32_LIBS
 
_CS_XBS5_ILP32_OFF32_LIBS


	)

584 
	m_CS_XBS5_ILP32_OFF32_LINTFLAGS
,

585 
	#_CS_XBS5_ILP32_OFF32_LINTFLAGS
 
_CS_XBS5_ILP32_OFF32_LINTFLAGS


	)

586 
	m_CS_XBS5_ILP32_OFFBIG_CFLAGS
,

587 
	#_CS_XBS5_ILP32_OFFBIG_CFLAGS
 
_CS_XBS5_ILP32_OFFBIG_CFLAGS


	)

588 
	m_CS_XBS5_ILP32_OFFBIG_LDFLAGS
,

589 
	#_CS_XBS5_ILP32_OFFBIG_LDFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LDFLAGS


	)

590 
	m_CS_XBS5_ILP32_OFFBIG_LIBS
,

591 
	#_CS_XBS5_ILP32_OFFBIG_LIBS
 
_CS_XBS5_ILP32_OFFBIG_LIBS


	)

592 
	m_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
,

593 
	#_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LINTFLAGS


	)

594 
	m_CS_XBS5_LP64_OFF64_CFLAGS
,

595 
	#_CS_XBS5_LP64_OFF64_CFLAGS
 
_CS_XBS5_LP64_OFF64_CFLAGS


	)

596 
	m_CS_XBS5_LP64_OFF64_LDFLAGS
,

597 
	#_CS_XBS5_LP64_OFF64_LDFLAGS
 
_CS_XBS5_LP64_OFF64_LDFLAGS


	)

598 
	m_CS_XBS5_LP64_OFF64_LIBS
,

599 
	#_CS_XBS5_LP64_OFF64_LIBS
 
_CS_XBS5_LP64_OFF64_LIBS


	)

600 
	m_CS_XBS5_LP64_OFF64_LINTFLAGS
,

601 
	#_CS_XBS5_LP64_OFF64_LINTFLAGS
 
_CS_XBS5_LP64_OFF64_LINTFLAGS


	)

602 
	m_CS_XBS5_LPBIG_OFFBIG_CFLAGS
,

603 
	#_CS_XBS5_LPBIG_OFFBIG_CFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_CFLAGS


	)

604 
	m_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
,

605 
	#_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LDFLAGS


	)

606 
	m_CS_XBS5_LPBIG_OFFBIG_LIBS
,

607 
	#_CS_XBS5_LPBIG_OFFBIG_LIBS
 
_CS_XBS5_LPBIG_OFFBIG_LIBS


	)

608 
	m_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
,

609 
	#_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS


	)

611 
	m_CS_POSIX_V6_ILP32_OFF32_CFLAGS
,

612 
	#_CS_POSIX_V6_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_CFLAGS


	)

613 
	m_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
,

614 
	#_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LDFLAGS


	)

615 
	m_CS_POSIX_V6_ILP32_OFF32_LIBS
,

616 
	#_CS_POSIX_V6_ILP32_OFF32_LIBS
 
_CS_POSIX_V6_ILP32_OFF32_LIBS


	)

617 
	m_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
,

618 
	#_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS


	)

619 
	m_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
,

620 
	#_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS


	)

621 
	m_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
,

622 
	#_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS


	)

623 
	m_CS_POSIX_V6_ILP32_OFFBIG_LIBS
,

624 
	#_CS_POSIX_V6_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V6_ILP32_OFFBIG_LIBS


	)

625 
	m_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
,

626 
	#_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS


	)

627 
	m_CS_POSIX_V6_LP64_OFF64_CFLAGS
,

628 
	#_CS_POSIX_V6_LP64_OFF64_CFLAGS
 
_CS_POSIX_V6_LP64_OFF64_CFLAGS


	)

629 
	m_CS_POSIX_V6_LP64_OFF64_LDFLAGS
,

630 
	#_CS_POSIX_V6_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LDFLAGS


	)

631 
	m_CS_POSIX_V6_LP64_OFF64_LIBS
,

632 
	#_CS_POSIX_V6_LP64_OFF64_LIBS
 
_CS_POSIX_V6_LP64_OFF64_LIBS


	)

633 
	m_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
,

634 
	#_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LINTFLAGS


	)

635 
	m_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
,

636 
	#_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS


	)

637 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
,

638 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS


	)

639 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
,

640 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LIBS


	)

641 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
,

642 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


	)

644 
	m_CS_POSIX_V7_ILP32_OFF32_CFLAGS
,

645 
	#_CS_POSIX_V7_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_CFLAGS


	)

646 
	m_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
,

647 
	#_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LDFLAGS


	)

648 
	m_CS_POSIX_V7_ILP32_OFF32_LIBS
,

649 
	#_CS_POSIX_V7_ILP32_OFF32_LIBS
 
_CS_POSIX_V7_ILP32_OFF32_LIBS


	)

650 
	m_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
,

651 
	#_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS


	)

652 
	m_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
,

653 
	#_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS


	)

654 
	m_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
,

655 
	#_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS


	)

656 
	m_CS_POSIX_V7_ILP32_OFFBIG_LIBS
,

657 
	#_CS_POSIX_V7_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V7_ILP32_OFFBIG_LIBS


	)

658 
	m_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
,

659 
	#_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS


	)

660 
	m_CS_POSIX_V7_LP64_OFF64_CFLAGS
,

661 
	#_CS_POSIX_V7_LP64_OFF64_CFLAGS
 
_CS_POSIX_V7_LP64_OFF64_CFLAGS


	)

662 
	m_CS_POSIX_V7_LP64_OFF64_LDFLAGS
,

663 
	#_CS_POSIX_V7_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LDFLAGS


	)

664 
	m_CS_POSIX_V7_LP64_OFF64_LIBS
,

665 
	#_CS_POSIX_V7_LP64_OFF64_LIBS
 
_CS_POSIX_V7_LP64_OFF64_LIBS


	)

666 
	m_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
,

667 
	#_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LINTFLAGS


	)

668 
	m_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
,

669 
	#_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS


	)

670 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
,

671 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS


	)

672 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
,

673 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LIBS


	)

674 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
,

675 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS


	)

677 
	m_CS_V6_ENV
,

678 
	#_CS_V6_ENV
 
_CS_V6_ENV


	)

679 
	m_CS_V7_ENV


680 
	#_CS_V7_ENV
 
_CS_V7_ENV


	)

	@/usr/include/bits/endian.h

19 #i‚de‡
_BITS_ENDIAN_H


20 
	#_BITS_ENDIAN_H
 1

	)

30 
	#__LITTLE_ENDIAN
 1234

	)

31 
	#__BIG_ENDIAN
 4321

	)

32 
	#__PDP_ENDIAN
 3412

	)

35 
	~<bôs/ídü¬ess.h
>

39 #i‚de‡
__FLOAT_WORD_ORDER


40 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

43 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


44 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

45 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


46 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

	@/usr/include/bits/environments.h

18 #i‚de‡
_UNISTD_H


22 
	~<bôs/w‹dsize.h
>

42 #i‡
__WORDSIZE
 == 64

56 
	#_POSIX_V7_LPBIG_OFFBIG
 -1

	)

57 
	#_POSIX_V6_LPBIG_OFFBIG
 -1

	)

58 
	#_XBS5_LPBIG_OFFBIG
 -1

	)

61 
	#_POSIX_V7_LP64_OFF64
 1

	)

62 
	#_POSIX_V6_LP64_OFF64
 1

	)

63 
	#_XBS5_LP64_OFF64
 1

	)

69 
	#_POSIX_V7_ILP32_OFFBIG
 1

	)

70 
	#_POSIX_V6_ILP32_OFFBIG
 1

	)

71 
	#_XBS5_ILP32_OFFBIG
 1

	)

73 #i‚de‡
__x86_64__


75 
	#_POSIX_V7_ILP32_OFF32
 1

	)

76 
	#_POSIX_V6_ILP32_OFF32
 1

	)

77 
	#_XBS5_ILP32_OFF32
 1

	)

95 
	#__ILP32_OFF32_CFLAGS
 "-m32"

	)

96 
	#__ILP32_OFF32_LDFLAGS
 "-m32"

	)

97 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


98 
	#__ILP32_OFFBIG_CFLAGS
 "-mx32"

	)

99 
	#__ILP32_OFFBIG_LDFLAGS
 "-mx32"

	)

101 
	#__ILP32_OFFBIG_CFLAGS
 "-m32 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"

	)

102 
	#__ILP32_OFFBIG_LDFLAGS
 "-m32"

	)

104 
	#__LP64_OFF64_CFLAGS
 "-m64"

	)

105 
	#__LP64_OFF64_LDFLAGS
 "-m64"

	)

	@/usr/include/bits/errno.h

19 #i‚de‡
_BITS_ERRNO_H


20 
	#_BITS_ERRNO_H
 1

	)

22 #i‡!
deföed
 
_ERRNO_H


26 
	~<löux/î∫o.h
>

29 #i‚de‡
ENOTSUP


30 
	#ENOTSUP
 
EOPNOTSUPP


	)

33 #i‚de‡
ECANCELED


34 
	#ECANCELED
 125

	)

37 #i‚de‡
EOWNERDEAD


38 
	#EOWNERDEAD
 130

	)

41 #i‚de‡
ENOTRECOVERABLE


42 
	#ENOTRECOVERABLE
 131

	)

45 #i‚de‡
ERFKILL


46 
	#ERFKILL
 132

	)

49 #i‚de‡
EHWPOISON


50 
	#EHWPOISON
 133

	)

	@/usr/include/bits/floatn.h

19 #i‚de‡
_BITS_FLOATN_H


20 
	#_BITS_FLOATN_H


	)

22 
	~<„©uªs.h
>

29 #i‡(
deföed
 
__x86_64__
 \

30 ? 
__GNUC_PREREQ
 (4, 3) \

31 : (
deföed
 
__GNU__
 ? 
	$__GNUC_PREREQ
 (4, 5Ë: 
	$__GNUC_PREREQ
 (4, 4)))

32 
	#__HAVE_FLOAT128
 1

	)

34 
	#__HAVE_FLOAT128
 0

	)

39 #i‡
__HAVE_FLOAT128


40 
	#__HAVE_DISTINCT_FLOAT128
 1

	)

42 
	#__HAVE_DISTINCT_FLOAT128
 0

	)

48 
	#__HAVE_FLOAT64X
 1

	)

54 
	#__HAVE_FLOAT64X_LONG_DOUBLE
 1

	)

56 #i‚de‡
__ASSEMBLER__


60 #i‡
__HAVE_FLOAT128


61 #i‡!
	`__GNUC_PREREQ
 (7, 0Ë|| (
deföed
 
__˝lu•lus
 && !__GNUC_PREREQ (13, 0))

63 
	#__f128
(
x
Ëx##
q


	)

65 
	#__f128
(
x
Ëx##
f128


	)

70 #i‡
__HAVE_FLOAT128


71 #i‡!
	`__GNUC_PREREQ
 (7, 0Ë|| (
deföed
 
__˝lu•lus
 && !__GNUC_PREREQ (13, 0))

74 
_Com∂ex
 
	t__cÊﬂt128
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__TC__
)));

75 
	#__CFLOAT128
 
__cÊﬂt128


	)

77 
	#__CFLOAT128
 
_Com∂ex
 
_Flﬂt128


	)

82 #i‡
__HAVE_FLOAT128


85 #i‡!
	`__GNUC_PREREQ
 (7, 0Ë|| (
deföed
 
__˝lu•lus
 && !__GNUC_PREREQ (13, 0))

86 
__Êﬂt128
 
	t_Flﬂt128
;

90 #i‡!
	`__GNUC_PREREQ
 (7, 0)

91 
	#__buûtö_huge_vÆf128
(Ë((
_Flﬂt128
Ë
	`__buûtö_huge_vÆ
 ())

	)

99 #i‡!
	`__GNUC_PREREQ
 (7, 0)

100 
	#__buûtö_c›ysignf128
 
__buûtö_c›ysignq


	)

101 
	#__buûtö_Ábsf128
 
__buûtö_Ábsq


	)

102 
	#__buûtö_öff128
(Ë((
_Flﬂt128
Ë
	`__buûtö_öf
 ())

	)

103 
	#__buûtö_«nf128
(
x
Ë((
_Flﬂt128
Ë
	`__buûtö_«n
 (x))

	)

104 
	#__buûtö_«nsf128
(
x
Ë((
_Flﬂt128
Ë
	`__buûtö_«ns
 (x))

	)

111 #i‡!
	`__GNUC_PREREQ
 (6, 0)

112 
	#__buûtö_signbôf128
 
__signbôf128


	)

119 
	~<bôs/Êﬂä-comm⁄.h
>

	@/usr/include/bits/getopt_posix.h

20 #i‚de‡
_GETOPT_POSIX_H


21 
	#_GETOPT_POSIX_H
 1

	)

23 #i‡!
deföed
 
_UNISTD_H
 && !deföed 
_STDIO_H


27 
	~<bôs/gë›t_c‹e.h
>

29 
	g__BEGIN_DECLS


31 #i‡
deföed
 
__USE_POSIX2
 && !deföed 
__USE_POSIX_IMPLICITLY
 \

32 && !
deföed
 
	g__USE_GNU
 && !deföed 
	g_GETOPT_H


37 #ifde‡
__REDIRECT


38 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

39 c⁄° *
__sh‹t›ts
),

40 
__posix_gë›t
);

42 
	$__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

43 c⁄° *
__sh‹t›ts
)

44 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

45 
	#gë›t
 
__posix_gë›t


	)

49 
__END_DECLS


	@/usr/include/bits/libc-header-start.h

27 #i‚de‡
__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


31 #unde‡
__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


33 
	~<„©uªs.h
>

37 #unde‡
__GLIBC_USE_LIB_EXT2


38 #i‡(
deföed
 
__USE_GNU
 \

39 || (
deföed
 
	g__STDC_WANT_LIB_EXT2__
 && __STDC_WANT_LIB_EXT2__ > 0))

40 
	#__GLIBC_USE_LIB_EXT2
 1

	)

42 
	#__GLIBC_USE_LIB_EXT2
 0

	)

67 #unde‡
__GLIBC_USE_IEC_60559_BFP_EXT


68 #i‡
deföed
 
__USE_GNU
 || deföed 
__STDC_WANT_IEC_60559_BFP_EXT__


69 
	#__GLIBC_USE_IEC_60559_BFP_EXT
 1

	)

71 
	#__GLIBC_USE_IEC_60559_BFP_EXT
 0

	)

73 #unde‡
__GLIBC_USE_IEC_60559_BFP_EXT_C23


74 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT
Ë|| __GLIBC_USE (
ISOC23
)

75 
	#__GLIBC_USE_IEC_60559_BFP_EXT_C23
 1

	)

77 
	#__GLIBC_USE_IEC_60559_BFP_EXT_C23
 0

	)

79 #unde‡
__GLIBC_USE_IEC_60559_EXT


80 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT
Ë|| 
deföed
 
__STDC_WANT_IEC_60559_EXT__


81 
	#__GLIBC_USE_IEC_60559_EXT
 1

	)

83 
	#__GLIBC_USE_IEC_60559_EXT
 0

	)

90 #unde‡
__GLIBC_USE_IEC_60559_FUNCS_EXT


91 #i‡
deföed
 
__USE_GNU
 || deföed 
__STDC_WANT_IEC_60559_FUNCS_EXT__


92 
	#__GLIBC_USE_IEC_60559_FUNCS_EXT
 1

	)

94 
	#__GLIBC_USE_IEC_60559_FUNCS_EXT
 0

	)

96 #unde‡
__GLIBC_USE_IEC_60559_FUNCS_EXT_C23


97 #i‡
__GLIBC_USE
 (
IEC_60559_FUNCS_EXT
Ë|| __GLIBC_USE (
ISOC23
)

98 
	#__GLIBC_USE_IEC_60559_FUNCS_EXT_C23
 1

	)

100 
	#__GLIBC_USE_IEC_60559_FUNCS_EXT_C23
 0

	)

105 #unde‡
__GLIBC_USE_IEC_60559_TYPES_EXT


106 #i‡
deföed
 
__USE_GNU
 || deföed 
__STDC_WANT_IEC_60559_TYPES_EXT__


107 
	#__GLIBC_USE_IEC_60559_TYPES_EXT
 1

	)

109 
	#__GLIBC_USE_IEC_60559_TYPES_EXT
 0

	)

	@/usr/include/bits/posix_opt.h

19 #i‚def 
_BITS_POSIX_OPT_H


20 
	#_BITS_POSIX_OPT_H
 1

	)

23 
	#_POSIX_JOB_CONTROL
 1

	)

26 
	#_POSIX_SAVED_IDS
 1

	)

32 
	#_POSIX_PRIORITY_SCHEDULING
 200809L

	)

35 
	#_POSIX_SYNCHRONIZED_IO
 200809L

	)

38 
	#_POSIX_FSYNC
 200809L

	)

41 
	#_POSIX_MAPPED_FILES
 200809L

	)

44 
	#_POSIX_MEMLOCK
 200809L

	)

47 
	#_POSIX_MEMLOCK_RANGE
 200809L

	)

50 
	#_POSIX_MEMORY_PROTECTION
 200809L

	)

53 
	#_POSIX_CHOWN_RESTRICTED
 0

	)

57 
	#_POSIX_VDISABLE
 '\0'

	)

60 
	#_POSIX_NO_TRUNC
 1

	)

63 
	#_XOPEN_REALTIME
 1

	)

66 
	#_XOPEN_REALTIME_THREADS
 1

	)

69 
	#_XOPEN_SHM
 1

	)

72 
	#_POSIX_THREADS
 200809L

	)

75 
	#_POSIX_REENTRANT_FUNCTIONS
 1

	)

76 
	#_POSIX_THREAD_SAFE_FUNCTIONS
 200809L

	)

79 
	#_POSIX_THREAD_PRIORITY_SCHEDULING
 200809L

	)

82 
	#_POSIX_THREAD_ATTR_STACKSIZE
 200809L

	)

85 
	#_POSIX_THREAD_ATTR_STACKADDR
 200809L

	)

88 
	#_POSIX_THREAD_PRIO_INHERIT
 200809L

	)

92 
	#_POSIX_THREAD_PRIO_PROTECT
 200809L

	)

94 #ifde‡
__USE_XOPEN2K8


96 
	#_POSIX_THREAD_ROBUST_PRIO_INHERIT
 200809L

	)

99 
	#_POSIX_THREAD_ROBUST_PRIO_PROTECT
 -1

	)

103 
	#_POSIX_SEMAPHORES
 200809L

	)

106 
	#_POSIX_REALTIME_SIGNALS
 200809L

	)

109 
	#_POSIX_ASYNCHRONOUS_IO
 200809L

	)

110 
	#_POSIX_ASYNC_IO
 1

	)

112 
	#_LFS_ASYNCHRONOUS_IO
 1

	)

114 
	#_POSIX_PRIORITIZED_IO
 200809L

	)

117 
	#_LFS64_ASYNCHRONOUS_IO
 1

	)

120 
	#_LFS_LARGEFILE
 1

	)

121 
	#_LFS64_LARGEFILE
 1

	)

122 
	#_LFS64_STDIO
 1

	)

125 
	#_POSIX_SHARED_MEMORY_OBJECTS
 200809L

	)

128 
	#_POSIX_CPUTIME
 0

	)

131 
	#_POSIX_THREAD_CPUTIME
 0

	)

134 
	#_POSIX_REGEXP
 1

	)

137 
	#_POSIX_READER_WRITER_LOCKS
 200809L

	)

140 
	#_POSIX_SHELL
 1

	)

143 
	#_POSIX_TIMEOUTS
 200809L

	)

146 
	#_POSIX_SPIN_LOCKS
 200809L

	)

149 
	#_POSIX_SPAWN
 200809L

	)

152 
	#_POSIX_TIMERS
 200809L

	)

155 
	#_POSIX_BARRIERS
 200809L

	)

158 
	#_POSIX_MESSAGE_PASSING
 200809L

	)

161 
	#_POSIX_THREAD_PROCESS_SHARED
 200809L

	)

164 
	#_POSIX_MONOTONIC_CLOCK
 0

	)

167 
	#_POSIX_CLOCK_SELECTION
 200809L

	)

170 
	#_POSIX_ADVISORY_INFO
 200809L

	)

173 
	#_POSIX_IPV6
 200809L

	)

176 
	#_POSIX_RAW_SOCKETS
 200809L

	)

179 
	#_POSIX2_CHAR_TERM
 200809L

	)

182 
	#_POSIX_SPORADIC_SERVER
 -1

	)

183 
	#_POSIX_THREAD_SPORADIC_SERVER
 -1

	)

186 
	#_POSIX_TRACE
 -1

	)

187 
	#_POSIX_TRACE_EVENT_FILTER
 -1

	)

188 
	#_POSIX_TRACE_INHERIT
 -1

	)

189 
	#_POSIX_TRACE_LOG
 -1

	)

192 
	#_POSIX_TYPED_MEMORY_OBJECTS
 -1

	)

	@/usr/include/bits/pthread_stack_min-dynamic.h

19 #i‚de‡
PTHREAD_STACK_MIN


20 #i‡
deföed
 
__USE_DYNAMIC_STACK_SIZE
 && __USE_DYNAMIC_STACK_SIZE

21 #i‚de‡
__ASSEMBLER__


22 
	#__SC_THREAD_STACK_MIN_VALUE
 75

	)

23 
__BEGIN_DECLS


24 
	$__sysc⁄f
 (
__«me
Ë
__THROW
;

25 
__END_DECLS


26 
	#PTHREAD_STACK_MIN
 
	`__sysc⁄f
 (
__SC_THREAD_STACK_MIN_VALUE
)

	)

29 
	~<bôs/±hªad_°ack_mö.h
>

	@/usr/include/bits/pthreadtypes.h

19 #i‚de‡
_BITS_PTHREADTYPES_COMMON_H


20 
	#_BITS_PTHREADTYPES_COMMON_H
 1

	)

23 
	~<bôs/thªad-sh¨ed-ty≥s.h
>

27 
	t±hªad_t
;

34 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

35 
	m__Æign
;

36 } 
	t±hªad_muãx©å_t
;

43 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

44 
	m__Æign
;

45 } 
	t±hªad_c⁄d©å_t
;

49 
	t±hªad_key_t
;

53 
	t__ONCE_ALIGNMENT
 
	t±hªad_⁄˚_t
;

56 
	u±hªad_©å_t


58 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

59 
	m__Æign
;

61 #i‚de‡
__have_±hªad_©å_t


62 
±hªad_©å_t
 
	t±hªad_©å_t
;

63 
	#__have_±hªad_©å_t
 1

	)

69 
__±hªad_muãx_s
 
	m__d©a
;

70 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

71 
	m__Æign
;

72 } 
	t±hªad_muãx_t
;

77 
__±hªad_c⁄d_s
 
	m__d©a
;

78 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

79 
__exãnsi⁄__
 
	m__Æign
;

80 } 
	t±hªad_c⁄d_t
;

83 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


88 
__±hªad_rwlock_¨ch_t
 
	m__d©a
;

89 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

90 
	m__Æign
;

91 } 
	t±hªad_rwlock_t
;

95 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

96 
	m__Æign
;

97 } 
	t±hªad_rwlock©å_t
;

101 #ifde‡
__USE_XOPEN2K


103 vﬁ©ûê
	t±hªad_•ölock_t
;

110 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

111 
	m__Æign
;

112 } 
	t±hªad_b¨rõr_t
;

116 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

117 
	m__Æign
;

118 } 
	t±hªad_b¨rõøâr_t
;

	@/usr/include/bits/setjmp.h

19 #i‚de‡
_BITS_SETJMP_H


20 
	#_BITS_SETJMP_H
 1

	)

22 #i‡!
deföed
 
_SETJMP_H
 && !deföed 
_PTHREAD_H


26 
	~<bôs/w‹dsize.h
>

28 #i‚de‡
_ASM


30 #i‡
__WORDSIZE
 == 64

31 
	t__jmp_buf
[8];

32 #ñi‡
deföed
 
__x86_64__


33 
__exãnsi⁄__
 
	t__jmp_buf
[8];

35 
	t__jmp_buf
[6];

	@/usr/include/bits/stdint-intn.h

19 #i‚de‡
_BITS_STDINT_INTN_H


20 
	#_BITS_STDINT_INTN_H
 1

	)

22 
	~<bôs/ty≥s.h
>

24 
__öt8_t
 
	töt8_t
;

25 
__öt16_t
 
	töt16_t
;

26 
__öt32_t
 
	töt32_t
;

27 
__öt64_t
 
	töt64_t
;

	@/usr/include/bits/stdint-least.h

19 #i‚de‡
_BITS_STDINT_LEAST_H


20 
	#_BITS_STDINT_LEAST_H
 1

	)

22 
	~<bôs/ty≥s.h
>

25 
__öt_Àa°8_t
 
	töt_Àa°8_t
;

26 
__öt_Àa°16_t
 
	töt_Àa°16_t
;

27 
__öt_Àa°32_t
 
	töt_Àa°32_t
;

28 
__öt_Àa°64_t
 
	töt_Àa°64_t
;

31 
__uöt_Àa°8_t
 
	tuöt_Àa°8_t
;

32 
__uöt_Àa°16_t
 
	tuöt_Àa°16_t
;

33 
__uöt_Àa°32_t
 
	tuöt_Àa°32_t
;

34 
__uöt_Àa°64_t
 
	tuöt_Àa°64_t
;

	@/usr/include/bits/stdint-uintn.h

19 #i‚de‡
_BITS_STDINT_UINTN_H


20 
	#_BITS_STDINT_UINTN_H
 1

	)

22 
	~<bôs/ty≥s.h
>

24 
__uöt8_t
 
	tuöt8_t
;

25 
__uöt16_t
 
	tuöt16_t
;

26 
__uöt32_t
 
	tuöt32_t
;

27 
__uöt64_t
 
	tuöt64_t
;

	@/usr/include/bits/stdio-ldbl.h

19 #i‚de‡
_STDIO_H


23 
	$__LDBL_REDIR_DECL
 (
Ârötf
)

24 
	$__LDBL_REDIR_DECL
 (
¥ötf
)

25 
	$__LDBL_REDIR_DECL
 (
•rötf
)

26 
	$__LDBL_REDIR_DECL
 (
vÂrötf
)

27 
	$__LDBL_REDIR_DECL
 (
v¥ötf
)

28 
	$__LDBL_REDIR_DECL
 (
v•rötf
)

29 #i‡!
	`__GLIBC_USE
 (
DEPRECATED_SCANF
)

30 #i‡
deföed
 
__LDBL_COMPAT


31 #i‡
	`__GLIBC_USE
 (
C23_STRTOL
)

32 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__∆dbl___isoc23_fsˇnf
)

33 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__∆dbl___isoc23_sˇnf
)

34 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__∆dbl___isoc23_ssˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__∆dbl___isoc99_fsˇnf
)

37 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__∆dbl___isoc99_sˇnf
)

38 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__∆dbl___isoc99_ssˇnf
)

40 #ñi‡
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 1

41 #i‡
	`__GLIBC_USE
 (
C23_STRTOL
)

42 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__isoc23_fsˇnfõì128
)

43 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__isoc23_sˇnfõì128
)

44 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__isoc23_ssˇnfõì128
)

46 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__isoc99_fsˇnfõì128
)

47 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__isoc99_sˇnfõì128
)

48 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__isoc99_ssˇnfõì128
)

51 #îr‹ 
bôs
/
°dlib
-
ldbl
.
h
 
ö˛uded
 
whí
 
no
Üdb»
ªdúe˘i⁄s
 
¨e
 
ªquúed
.

54 
	$__LDBL_REDIR_DECL
 (
fsˇnf
)

55 
	$__LDBL_REDIR_DECL
 (
sˇnf
)

56 
	$__LDBL_REDIR_DECL
 (
ssˇnf
)

59 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


60 
	$__LDBL_REDIR_DECL
 (
¢¥ötf
)

61 
	$__LDBL_REDIR_DECL
 (
v¢¥ötf
)

64 #ifdef 
__USE_ISOC99


65 #i‡!
	`__GLIBC_USE
 (
DEPRECATED_SCANF
)

66 #i‡
deföed
 
__LDBL_COMPAT


67 #i‡
	`__GLIBC_USE
 (
C23_STRTOL
)

68 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__∆dbl___isoc23_vfsˇnf
)

69 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__∆dbl___isoc23_vsˇnf
)

70 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__∆dbl___isoc23_vssˇnf
)

72 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__∆dbl___isoc99_vfsˇnf
)

73 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__∆dbl___isoc99_vsˇnf
)

74 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__∆dbl___isoc99_vssˇnf
)

76 #ñi‡
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 1

77 #i‡
	`__GLIBC_USE
 (
C23_STRTOL
)

78 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__isoc23_vfsˇnfõì128
)

79 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__isoc23_vsˇnfõì128
)

80 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__isoc23_vssˇnfõì128
)

82 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__isoc99_vfsˇnfõì128
)

83 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__isoc99_vsˇnfõì128
)

84 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__isoc99_vssˇnfõì128
)

87 #îr‹ 
bôs
/
°dlib
-
ldbl
.
h
 
ö˛uded
 
whí
 
no
Üdb»
ªdúe˘i⁄s
 
¨e
 
ªquúed
.

90 
	$__LDBL_REDIR_DECL
 (
vfsˇnf
)

91 
	$__LDBL_REDIR_DECL
 (
vssˇnf
)

92 
	$__LDBL_REDIR_DECL
 (
vsˇnf
)

96 #ifde‡
__USE_XOPEN2K8


97 
	$__LDBL_REDIR_DECL
 (
vd¥ötf
)

98 
	$__LDBL_REDIR_DECL
 (
d¥ötf
)

101 #ifde‡
__USE_GNU


102 
	$__LDBL_REDIR_DECL
 (
va•rötf
)

103 
	$__LDBL_REDIR2_DECL
 (
a•rötf
)

104 
	$__LDBL_REDIR_DECL
 (
a•rötf
)

105 
	$__LDBL_REDIR_DECL
 (
ob°ack_¥ötf
)

106 
	$__LDBL_REDIR_DECL
 (
ob°ack_v¥ötf
)

109 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


110 
	$__LDBL_REDIR2_DECL
 (
•rötf_chk
)

111 
	$__LDBL_REDIR2_DECL
 (
v•rötf_chk
)

112 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


113 
	$__LDBL_REDIR2_DECL
 (
¢¥ötf_chk
)

114 
	$__LDBL_REDIR2_DECL
 (
v¢¥ötf_chk
)

116 #i‡
__USE_FORTIFY_LEVEL
 > 1

117 
	$__LDBL_REDIR2_DECL
 (
Ârötf_chk
)

118 
	$__LDBL_REDIR2_DECL
 (
¥ötf_chk
)

119 
	$__LDBL_REDIR2_DECL
 (
vÂrötf_chk
)

120 
	$__LDBL_REDIR2_DECL
 (
v¥ötf_chk
)

121 #ifde‡
__USE_XOPEN2K8


122 
	$__LDBL_REDIR2_DECL
 (
d¥ötf_chk
)

123 
	$__LDBL_REDIR2_DECL
 (
vd¥ötf_chk
)

125 #ifde‡
__USE_GNU


126 
	$__LDBL_REDIR2_DECL
 (
a•rötf_chk
)

127 
	$__LDBL_REDIR2_DECL
 (
va•rötf_chk
)

128 
	$__LDBL_REDIR2_DECL
 (
ob°ack_¥ötf_chk
)

129 
	$__LDBL_REDIR2_DECL
 (
ob°ack_v¥ötf_chk
)

	@/usr/include/bits/stdio.h

19 #i‚de‡
_BITS_STDIO_H


20 
	#_BITS_STDIO_H
 1

	)

22 #i‚de‡
_STDIO_H


26 #i‚de‡
__exã∫_ölöe


27 
	#__STDIO_INLINE
 
ölöe


	)

29 
	#__STDIO_INLINE
 
__exã∫_ölöe


	)

33 #ifde‡
__USE_EXTERN_INLINES


36 #i‡!(
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄
)

38 
__STDIO_INLINE
 

39 
	$v¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__¨g
)

41  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

42 
	}
}

46 
__STDIO_INLINE
 

47 
	$gëch¨
 ()

49  
	`gëc
 (
°dö
);

50 
	}
}

53 #ifde‡
__USE_MISC


55 
__STDIO_INLINE
 

56 
	$fgëc_u∆ocked
 (
FILE
 *
__Â
)

58  
	`__gëc_u∆ocked_body
 (
__Â
);

59 
	}
}

63 #ifde‡
__USE_POSIX199506


65 
__STDIO_INLINE
 

66 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

68  
	`__gëc_u∆ocked_body
 (
__Â
);

69 
	}
}

72 
__STDIO_INLINE
 

73 
	$gëch¨_u∆ocked
 ()

75  
	`__gëc_u∆ocked_body
 (
°dö
);

76 
	}
}

81 
__STDIO_INLINE
 

82 
	$putch¨
 (
__c
)

84  
	`putc
 (
__c
, 
°dout
);

85 
	}
}

88 #ifde‡
__USE_MISC


90 
__STDIO_INLINE
 

91 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

93  
	`__putc_u∆ocked_body
 (
__c
, 
__°ªam
);

94 
	}
}

98 #ifde‡
__USE_POSIX199506


100 
__STDIO_INLINE
 

101 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

103  
	`__putc_u∆ocked_body
 (
__c
, 
__°ªam
);

104 
	}
}

107 
__STDIO_INLINE
 

108 
	$putch¨_u∆ocked
 (
__c
)

110  
	`__putc_u∆ocked_body
 (
__c
, 
°dout
);

111 
	}
}

115 #ifdef 
__USE_GNU


117 
__STDIO_INLINE
 
__ssize_t


118 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

120  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

121 
	}
}

125 #ifde‡
__USE_MISC


127 
__STDIO_INLINE
 

128 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

130  
	`__„of_u∆ocked_body
 (
__°ªam
);

131 
	}
}

134 
__STDIO_INLINE
 

135 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

137  
	`__„º‹_u∆ocked_body
 (
__°ªam
);

138 
	}
}

144 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__
 \

145 && !
deföed
 
	g__˝lu•lus


147 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

148 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

149 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

150 && (
size_t
Ë(
size
) != 0) \

151 ? ({ *
__±r
 = (*Ë(
±r
); \

152 
FILE
 *
__°ªam
 = (
°ªam
); \

153 
size_t
 
__˙t
; \

154 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

155 
__˙t
 > 0; --__cnt) \

157 
__c
 = 
	`gëc_u∆ocked
 (
__°ªam
); \

158 i‡(
__c
 =
EOF
) \

160 *
__±r
++ = 
__c
; \

162 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

163 / (
size_t
Ë(
size
); }) \

164 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

165 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

167 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

168 (Ë(
n
), (
size_t
) 0) \

169 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

171 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

172 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

173 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

174 && (
size_t
Ë(
size
) != 0) \

175 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

176 
FILE
 *
__°ªam
 = (
°ªam
); \

177 
size_t
 
__˙t
; \

178 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

179 
__˙t
 > 0; --__cnt) \

180 i‡(
	`putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

182 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

183 / (
size_t
Ë(
size
); }) \

184 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

185 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

187 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

188 (Ë(
n
), (
size_t
) 0) \

189 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

193 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2-decl.h

19 #i‚de‡
_BITS_STDIO2_DEC_H


20 
	#_BITS_STDIO2_DEC_H
 1

	)

22 #i‚de‡
_STDIO_H


26 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

27 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW


28 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 3));

29 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

30 c⁄° *
__ª°ri˘
 
__f‹m©
,

31 
__gnuc_va_li°
 
__≠
Ë
__THROW


32 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 3));

34 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


36 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

37 
size_t
 
__¶í
, c⁄° *
__ª°ri˘
 
__f‹m©
,

38 ...Ë
__THROW


39 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 2));

40 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

41 
size_t
 
__¶í
, c⁄° *
__ª°ri˘
 
__f‹m©
,

42 
__gnuc_va_li°
 
__≠
Ë
__THROW


43 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 2));

47 #i‡
__USE_FORTIFY_LEVEL
 > 1

49 
	$__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

50 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

51 
	`__n⁄nuŒ
 ((1));

52 
	`__¥ötf_chk
 (
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

53 
	$__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

54 c⁄° *
__ª°ri˘
 
__f‹m©
,

55 
__gnuc_va_li°
 
__≠
Ë
	`__n⁄nuŒ
 ((1));

56 
	`__v¥ötf_chk
 (
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
,

57 
__gnuc_va_li°
 
__≠
);

59 #ifde‡
__USE_XOPEN2K8


60 
	$__d¥ötf_chk
 (
__fd
, 
__Êag
, c⁄° *
__ª°ri˘
 
__fmt
,

61 ...Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

62 
	$__vd¥ötf_chk
 (
__fd
, 
__Êag
,

63 c⁄° *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__¨g
)

64 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

67 #ifde‡
__USE_GNU


69 
	$__a•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

70 c⁄° *
__ª°ri˘
 
__fmt
, ...)

71 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 4))Ë
__wur
;

72 
	$__va•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

73 c⁄° *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__¨g
)

74 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 0))Ë
__wur
;

75 
	$__ob°ack_¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

76 
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
,

78 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

79 
	$__ob°ack_v¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

80 
__Êag
,

81 c⁄° *
__ª°ri˘
 
__f‹m©
,

82 
__gnuc_va_li°
 
__¨gs
)

83 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

88 #i‡
	`__GLIBC_USE
 (
DEPRECATED_GETS
)

89 *
	`__REDIRECT
 (
__gës_w¨n
, (*
__°r
), 
gës
)

90 
__wur
 
	`__w¨«âr
 ("please use fgets or getline instead, gets can't "

93 *
	$__gës_chk
 (*
__°r
, 
size_t
Ë
__wur
;

96 *
	`__REDIRECT
 (
__fgës_Æüs
,

97 (*
__ª°ri˘
 
__s
, 
__n
,

98 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës
)

99 
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 2));

100 *
	`__REDIRECT
 (
__fgës_chk_w¨n
,

101 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

102 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_chk
)

103 
__wur
 
	`__w¨«âr
 ("fgets called with bigger sizeÅhanÜength "

106 *
	$__fgës_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

107 
FILE
 *
__ª°ri˘
 
__°ªam
)

108 
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 3)Ë
	`__n⁄nuŒ
 ((4));

110 
size_t
 
	`__REDIRECT
 (
__‰ód_Æüs
,

111 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

112 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

113 
‰ód
Ë
__wur
;

114 
size_t
 
	`__REDIRECT
 (
__‰ód_chk_w¨n
,

115 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

116 
size_t
 
__size
, size_à
__n
,

117 
FILE
 *
__ª°ri˘
 
__°ªam
),

118 
__‰ód_chk
)

119 
__wur
 
	`__w¨«âr
 ("fread called with bigger size *ÇmembÅhanÜength "

122 
size_t
 
	$__‰ód_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

123 
size_t
 
__size
, size_à
__n
,

124 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
 
	`__n⁄nuŒ
 ((5));

126 #ifde‡
__USE_GNU


127 *
	`__REDIRECT_FORTIFY
 (
__fgës_u∆ocked_Æüs
,

128 (*
__ª°ri˘
 
__s
, 
__n
,

129 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës_u∆ocked
)

130 
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 2));

131 *
	`__REDIRECT
 (
__fgës_u∆ocked_chk_w¨n
,

132 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

133 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_u∆ocked_chk
)

134 
__wur
 
	`__w¨«âr
 ("fgets_unlocked called with bigger sizeÅhanÜength "

138 *
	$__fgës_u∆ocked_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
,

139 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
)

140 
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 3)Ë
	`__n⁄nuŒ
 ((4));

143 #ifde‡
__USE_MISC


144 #unde‡
‰ód_u∆ocked


145 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_Æüs
,

146 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

147 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

148 
‰ód_u∆ocked
Ë
__wur
;

149 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_chk_w¨n
,

150 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

151 
size_t
 
__size
, size_à
__n
,

152 
FILE
 *
__ª°ri˘
 
__°ªam
),

153 
__‰ód_u∆ocked_chk
)

154 
__wur
 
	`__w¨«âr
 ("fread_unlocked called with bigger size *ÇmembÅhan "

157 
size_t
 
	$__‰ód_u∆ocked_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

158 
size_t
 
__size
, size_à
__n
,

159 
FILE
 *
__ª°ri˘
 
__°ªam
)

160 
__wur
 
	`__n⁄nuŒ
 ((5));

	@/usr/include/bits/stdio2.h

19 #i‚de‡
_BITS_STDIO2_H


20 
	#_BITS_STDIO2_H
 1

	)

22 #i‚de‡
_STDIO_H


26 #ifde‡
__va_¨g_∑ck


27 
__f‹tify_fun˘i⁄
 

28 
__NTH
 (
	$•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__fmt
, ...))

30  
	`__buûtö___•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

31 
	`__glibc_objsize
 (
__s
), 
__fmt
,

32 
	`__va_¨g_∑ck
 ());

33 
	}
}

34 #ñi‡
__f‹tify_u£_˛™g


36 
__f‹tify_fun˘i⁄_îr‹_fun˘i⁄
 
__©åibuã_ovîlﬂdabÀ__
 

37 
__NTH
 (
•rötf
 (
__f‹tify_˛™g_ovîlﬂd_¨g
 (*, 
__ª°ri˘
, 
__s
),

38 c⁄° *
__ª°ri˘
 
__fmt
, ...))

40 
__gnuc_va_li°
 
	g__f‹tify_≠
;

41 
__buûtö_va_°¨t
 (
__f‹tify_≠
, 
__fmt
);

42 
	g__r
 = 
__buûtö___v•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

43 
__glibc_objsize
 (
__s
), 
__fmt
,

44 
__f‹tify_≠
);

45 
__buûtö_va_íd
 (
__f‹tify_≠
);

46  
	g__r
;

48 #ñi‡!
deföed
 
__˝lu•lus


49 
	#•rötf
(
°r
, ...) \

50 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, \

51 
	`__glibc_objsize
 (
°r
), 
__VA_ARGS__
)

	)

54 
__f‹tify_fun˘i⁄
 
__©åibuã_ovîlﬂdabÀ__
 

55 
__NTH
 (
v•rötf
 (
__f‹tify_˛™g_ovîlﬂd_¨g
 (*, 
__ª°ri˘
, 
__s
),

56 c⁄° *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

58  
__buûtö___v•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

59 
__glibc_objsize
 (
__s
), 
__fmt
, 
__≠
);

62 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


63 #ifde‡
__va_¨g_∑ck


64 
__f‹tify_fun˘i⁄
 

65 
__NTH
 (
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

66 c⁄° *
__ª°ri˘
 
__fmt
, ...))

68  
	`__buûtö___¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

69 
	`__glibc_objsize
 (
__s
), 
__fmt
,

70 
	`__va_¨g_∑ck
 ());

71 
	}
}

72 #ñi‡
__f‹tify_u£_˛™g


74 
__f‹tify_fun˘i⁄_îr‹_fun˘i⁄
 
__©åibuã_ovîlﬂdabÀ__
 

75 
__NTH
 (
¢¥ötf
 (
__f‹tify_˛™g_ovîlﬂd_¨g
 (*, 
__ª°ri˘
, 
__s
),

76 
size_t
 
__n
, c⁄° *
__ª°ri˘
 
__fmt
, ...))

78 
__gnuc_va_li°
 
	g__f‹tify_≠
;

79 
__buûtö_va_°¨t
 (
__f‹tify_≠
, 
__fmt
);

80 
	g__r
 = 
__buûtö___v¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

81 
__glibc_objsize
 (
__s
), 
__fmt
,

82 
__f‹tify_≠
);

83 
__buûtö_va_íd
 (
__f‹tify_≠
);

84  
	g__r
;

86 #ñi‡!
deföed
 
__˝lu•lus


87 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

88 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, \

89 
	`__glibc_objsize
 (
°r
), 
__VA_ARGS__
)

	)

92 
__f‹tify_fun˘i⁄
 
__©åibuã_ovîlﬂdabÀ__
 

93 
__NTH
 (
v¢¥ötf
 (
__f‹tify_˛™g_ovîlﬂd_¨g
 (*, 
__ª°ri˘
, 
__s
),

94 
size_t
 
__n
, c⁄° *
__ª°ri˘
 
__fmt
,

95 
__gnuc_va_li°
 
__≠
))

96 
__f‹tify_˛™g_w¨nög
 (
__f‹tify_˛™g_bos_°©ic_…
 (
__n
, 
__s
),

100  
__buûtö___v¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

101 
__glibc_objsize
 (
__s
), 
__fmt
, 
__≠
);

106 #i‡
__USE_FORTIFY_LEVEL
 > 1

107 #ifde‡
__va_¨g_∑ck


108 
__f‹tify_fun˘i⁄
 
__n⁄nuŒ
 ((1)) 

109 
	$Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, c⁄° *__ª°ri˘ 
__fmt
, ...)

111  
	`__Ârötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

112 
	`__va_¨g_∑ck
 ());

113 
	}
}

115 
__f‹tify_fun˘i⁄
 

116 
	$¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, ...)

118  
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

119 
	}
}

120 #ñi‡
__f‹tify_u£_˛™g


122 
__f‹tify_fun˘i⁄_îr‹_fun˘i⁄
 
__©åibuã_ovîlﬂdabÀ__
 
__n⁄nuŒ
 ((1)) 

123 
Ârötf
 (
__f‹tify_˛™g_ovîlﬂd_¨g
 (
FILE
 *, 
__ª°ri˘
, 
__°ªam
),

124 c⁄° *
__ª°ri˘
 
__fmt
, ...)

126 
__gnuc_va_li°
 
	g__f‹tify_≠
;

127 
__buûtö_va_°¨t
 (
__f‹tify_≠
, 
__fmt
);

128 
	g__r
 = 
__buûtö___vÂrötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1,

129 
__fmt
, 
__f‹tify_≠
);

130 
__buûtö_va_íd
 (
__f‹tify_≠
);

131  
	g__r
;

134 
__f‹tify_fun˘i⁄_îr‹_fun˘i⁄
 
__©åibuã_ovîlﬂdabÀ__
 

135 
¥ötf
 (
__f‹tify_˛™g_ovîlﬂd_¨g
 (c⁄° *, 
__ª°ri˘
, 
__fmt
), ...)

137 
__gnuc_va_li°
 
	g__f‹tify_≠
;

138 
__buûtö_va_°¨t
 (
__f‹tify_≠
, 
__fmt
);

139 
	g__r
 = 
__buûtö___v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

140 
__f‹tify_≠
);

141 
__buûtö_va_íd
 (
__f‹tify_≠
);

142  
	g__r
;

144 #ñi‡!
deföed
 
__˝lu•lus


145 
	#¥ötf
(...) \

146 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

147 
	#Ârötf
(
°ªam
, ...) \

148 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

151 
__f‹tify_fun˘i⁄
 
__©åibuã_ovîlﬂdabÀ__
 

152 
v¥ötf
 (
__f‹tify_˛™g_ovîlﬂd_¨g
 (c⁄° *, 
__ª°ri˘
, 
__fmt
),

153 
__gnuc_va_li°
 
__≠
)

155 #ifde‡
__USE_EXTERN_INLINES


156  
__vÂrötf_chk
 (
°dout
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

158  
__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

162 
__f‹tify_fun˘i⁄
 
__n⁄nuŒ
 ((1)) 

163 
	$vÂrötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

164 c⁄° *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

166  
	`__vÂrötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

167 
	}
}

169 #ifde‡
__USE_XOPEN2K8


170 #ifde‡
__va_¨g_∑ck


171 
__f‹tify_fun˘i⁄
 

172 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

174  
	`__d¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

175 
	`__va_¨g_∑ck
 ());

176 
	}
}

177 #ñi‡
__f‹tify_u£_˛™g


178 
__f‹tify_fun˘i⁄_îr‹_fun˘i⁄
 
__©åibuã_ovîlﬂdabÀ__
 

179 
d¥ötf
 (
__fd
, 
__f‹tify_˛™g_ovîlﬂd_¨g
 (c⁄° *, 
__ª°ri˘
,

180 
__fmt
), ...)

182 
__gnuc_va_li°
 
	g__f‹tify_≠
;

183 
__buûtö_va_°¨t
 (
__f‹tify_≠
, 
__fmt
);

184 
	g__r
 = 
__vd¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

185 
__f‹tify_≠
);

186 
__buûtö_va_íd
 (
__f‹tify_≠
);

187  
	g__r
;

189 #ñi‡!
deföed
 
__˝lu•lus


190 
	#d¥ötf
(
fd
, ...) \

191 
	`__d¥ötf_chk
 (
fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

194 
__f‹tify_fun˘i⁄
 

195 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

197  
	`__vd¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

198 
	}
}

201 #ifde‡
__USE_GNU


202 #ifde‡
__va_¨g_∑ck


203 
__f‹tify_fun˘i⁄
 

204 
__NTH
 (
	$a•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
, ...))

206  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

207 
	`__va_¨g_∑ck
 ());

208 
	}
}

210 
__f‹tify_fun˘i⁄
 

211 
__NTH
 (
	$__a•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
,

214  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

215 
	`__va_¨g_∑ck
 ());

216 
	}
}

218 
__f‹tify_fun˘i⁄
 

219 
__NTH
 (
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

220 c⁄° *
__ª°ri˘
 
__fmt
, ...))

222  
	`__ob°ack_¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

223 
	`__va_¨g_∑ck
 ());

224 
	}
}

225 #ñi‡
__f‹tify_u£_˛™g


226 
__f‹tify_fun˘i⁄_îr‹_fun˘i⁄
 
__©åibuã_ovîlﬂdabÀ__
 

227 
__NTH
 (
a•rötf
 (
__f‹tify_˛™g_ovîlﬂd_¨g
 (**, 
__ª°ri˘
, 
__±r
),

228 c⁄° *
__ª°ri˘
 
__fmt
, ...))

230 
__gnuc_va_li°
 
	g__f‹tify_≠
;

231 
__buûtö_va_°¨t
 (
__f‹tify_≠
, 
__fmt
);

232 
	g__r
 = 
__va•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

233 
__f‹tify_≠
);

234 
__buûtö_va_íd
 (
__f‹tify_≠
);

235  
	g__r
;

238 
__f‹tify_fun˘i⁄_îr‹_fun˘i⁄
 
__©åibuã_ovîlﬂdabÀ__
 

239 
__NTH
 (
__a•rötf
 (
__f‹tify_˛™g_ovîlﬂd_¨g
 (**, 
__ª°ri˘
, 
__±r
),

240 c⁄° *
__ª°ri˘
 
__fmt
, ...))

242 
__gnuc_va_li°
 
	g__f‹tify_≠
;

243 
__buûtö_va_°¨t
 (
__f‹tify_≠
, 
__fmt
);

244 
	g__r
 = 
__va•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

245 
__f‹tify_≠
);

246 
__buûtö_va_íd
 (
__f‹tify_≠
);

247  
	g__r
;

250 
__f‹tify_fun˘i⁄_îr‹_fun˘i⁄
 
__©åibuã_ovîlﬂdabÀ__
 

251 
__NTH
 (
ob°ack_¥ötf
 (
__f‹tify_˛™g_ovîlﬂd_¨g
 (
ob°ack
 *,

252 
__ª°ri˘
, 
__ob°ack
),

253 c⁄° *
__ª°ri˘
 
__fmt
, ...))

255 
__gnuc_va_li°
 
	g__f‹tify_≠
;

256 
__buûtö_va_°¨t
 (
__f‹tify_≠
, 
__fmt
);

257 
	g__r
 = 
__ob°ack_v¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1,

258 
__fmt
, 
__f‹tify_≠
);

259 
__buûtö_va_íd
 (
__f‹tify_≠
);

260  
	g__r
;

262 #ñi‡!
deföed
 
__˝lu•lus


263 
	#a•rötf
(
±r
, ...) \

264 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

265 
	#__a•rötf
(
±r
, ...) \

266 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

267 
	#ob°ack_¥ötf
(
ob°ack
, ...) \

268 
	`__ob°ack_¥ötf_chk
 (
ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

271 
__f‹tify_fun˘i⁄
 

272 
__NTH
 (
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
,

273 
__gnuc_va_li°
 
__≠
))

275  
	`__va•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

276 
	}
}

278 
__f‹tify_fun˘i⁄
 

279 
__NTH
 (
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

280 c⁄° *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

282  
	`__ob°ack_v¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

283 
__≠
);

284 
	}
}

290 #i‡
__GLIBC_USE
 (
DEPRECATED_GETS
)

291 
__f‹tify_fun˘i⁄
 
__wur
 
__©åibuã_ovîlﬂdabÀ__
 *

292 
gës
 (
	$__f‹tify_˛™g_ovîlﬂd_¨g
 (*, , 
__°r
))

293 
	`__f‹tify_˛™g_w¨nög
 (
	`__glibc_objsize
 (
__°r
Ë=(
size_t
) -1,

297 i‡(
	`__glibc_objsize
 (
__°r
Ë!(
size_t
) -1)

298  
	`__gës_chk
 (
__°r
, 
	`__glibc_objsize
 (__str));

299  
	`__gës_w¨n
 (
__°r
);

300 
	}
}

303 
__f‹tify_fun˘i⁄
 
__wur
 
	$__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 1, 2)

304 
	`__n⁄nuŒ
 ((3)Ë
__©åibuã_ovîlﬂdabÀ__
 *

305 
	`fgës
 (
	`__f‹tify_˛™g_ovîlﬂd_¨g
 (*, 
__ª°ri˘
, 
__s
), 
__n
,

306 
FILE
 *
__ª°ri˘
 
__°ªam
)

307 
	`__f‹tify_˛™g_w¨nög
 (
	`__f‹tify_˛™g_bos_°©ic_…
 (
__n
, 
__s
) && __n > 0,

311 
size_t
 
sz
 = 
	`__glibc_objsize
 (
__s
);

312 i‡(
	`__glibc_ß„_‹_unknown_Àn
 (
__n
,  (), 
sz
))

313  
	`__fgës_Æüs
 (
__s
, 
__n
, 
__°ªam
);

314 #i‡!
__f‹tify_u£_˛™g


315 i‡(
	`__glibc_unß„_Àn
 (
__n
,  (), 
sz
))

316  
	`__fgës_chk_w¨n
 (
__s
, 
sz
, 
__n
, 
__°ªam
);

318  
	`__fgës_chk
 (
__s
, 
sz
, 
__n
, 
__°ªam
);

319 
	}
}

321 
__f‹tify_fun˘i⁄
 
__wur
 
__n⁄nuŒ
 ((4)Ë
__©åibuã_ovîlﬂdabÀ__
 
size_t


322 
‰ód
 (
__f‹tify_˛™g_ovîlﬂd_¨g
 (*, 
__ª°ri˘
, 
__±r
),

323 
size_t
 
__size
, size_à
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
)

324 
__f‹tify_˛™g_w¨nög
 (
__f‹tify_˛™g_bos0_°©ic_…
 (
__size
 * 
__n
, 
__±r
)

325 && !
__f‹tify_˛™g_mul_may_ovîÊow
 (
__size
, 
__n
),

329 
size_t
 
	gsz
 = 
__glibc_objsize0
 (
__±r
);

330 i‡(
__glibc_ß„_‹_unknown_Àn
 (
__n
, 
__size
, 
sz
))

331  
__‰ód_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

332 #i‡!
__f‹tify_u£_˛™g


333 i‡(
__glibc_unß„_Àn
 (
__n
, 
__size
, 
sz
))

334  
__‰ód_chk_w¨n
 (
__±r
, 
sz
, 
__size
, 
__n
, 
__°ªam
);

336  
__‰ód_chk
 (
__±r
, 
sz
, 
__size
, 
__n
, 
__°ªam
);

339 #ifde‡
__USE_GNU


340 
__f‹tify_fun˘i⁄
 
__wur
 
	$__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 1, 2)

341 
	`__n⁄nuŒ
 ((3)Ë
__©åibuã_ovîlﬂdabÀ__
 *

342 
	`fgës_u∆ocked
 (
	`__f‹tify_˛™g_ovîlﬂd_¨g
 (*, 
__ª°ri˘
, 
__s
),

343 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
)

344 
	`__f‹tify_˛™g_w¨nög
 (
	`__f‹tify_˛™g_bos_°©ic_…
 (
__n
, 
__s
) && __n > 0,

348 
size_t
 
sz
 = 
	`__glibc_objsize
 (
__s
);

349 i‡(
	`__glibc_ß„_‹_unknown_Àn
 (
__n
,  (), 
sz
))

350  
	`__fgës_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

351 #i‡!
__f‹tify_u£_˛™g


352 i‡(
	`__glibc_unß„_Àn
 (
__n
,  (), 
sz
))

353  
	`__fgës_u∆ocked_chk_w¨n
 (
__s
, 
sz
, 
__n
, 
__°ªam
);

355  
	`__fgës_u∆ocked_chk
 (
__s
, 
sz
, 
__n
, 
__°ªam
);

356 
	}
}

359 #ifde‡
__USE_MISC


360 #unde‡
‰ód_u∆ocked


361 
__f‹tify_fun˘i⁄
 
__wur
 
__n⁄nuŒ
 ((4)Ë
__©åibuã_ovîlﬂdabÀ__
 
size_t


362 
‰ód_u∆ocked
 (
__f‹tify_˛™g_ovîlﬂd_¨g0
 (*, 
__ª°ri˘
, 
__±r
),

363 
size_t
 
__size
, size_à
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
)

364 
__f‹tify_˛™g_w¨nög
 (
__f‹tify_˛™g_bos0_°©ic_…
 (
__size
 * 
__n
, 
__±r
)

365 && !
__f‹tify_˛™g_mul_may_ovîÊow
 (
__size
, 
__n
),

369 
size_t
 
	gsz
 = 
__glibc_objsize0
 (
__±r
);

370 i‡(
__glibc_ß„_‹_unknown_Àn
 (
__n
, 
__size
, 
sz
))

372 #ifde‡
__USE_EXTERN_INLINES


373 i‡(
__buûtö_c⁄°™t_p
 (
__size
)

374 && 
__buûtö_c⁄°™t_p
 (
__n
)

375 && (
	g__size
 | 
	g__n
Ë< (((
	gsize_t
) 1) << (8 *  (size_t) / 2))

376 && 
__size
 * 
	g__n
 <= 8)

378 
size_t
 
__˙t
 = 
__size
 * 
__n
;

379 *
	g__˝å
 = (*Ë
__±r
;

380 i‡(
	g__˙t
 == 0)

383 ; 
	g__˙t
 > 0; --__cnt)

385 
	g__c
 = 
gëc_u∆ocked
 (
__°ªam
);

386 i‡(
	g__c
 =
EOF
)

388 *
	g__˝å
++ = 
__c
;

390  (
	g__˝å
 - (*Ë
	g__±r
Ë/ 
	g__size
;

393  
__‰ód_u∆ocked_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

395 #i‡!
__f‹tify_u£_˛™g


396 i‡(
__glibc_unß„_Àn
 (
__n
, 
__size
, 
sz
))

397  
__‰ód_u∆ocked_chk_w¨n
 (
__±r
, 
sz
, 
__size
, 
__n
, 
__°ªam
);

399  
__‰ód_u∆ocked_chk
 (
__±r
, 
sz
, 
__size
, 
__n
, 
__°ªam
);

	@/usr/include/bits/stdio_lim.h

19 #i‚de‡
_BITS_STDIO_LIM_H


20 
	#_BITS_STDIO_LIM_H
 1

	)

22 #i‚de‡
_STDIO_H


26 
	#FILENAME_MAX
 4096

	)

	@/usr/include/bits/stdlib-bsearch.h

19 
__exã∫_ölöe
 *

20 
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

21 
__com∑r_‚_t
 
__com∑r
)

23 
size_t
 
__l
, 
__u
, 
__idx
;

24 c⁄° *
__p
;

25 
__com∑ris⁄
;

27 
__l
 = 0;

28 
__u
 = 
__nmemb
;

29 
__l
 < 
__u
)

31 
__idx
 = (
__l
 + 
__u
) / 2;

32 
__p
 = (c⁄° *Ë(((c⁄° *Ë
__ba£
Ë+ (
__idx
 * 
__size
));

33 
__com∑ris⁄
 = (*
__com∑r
Ë(
__key
, 
__p
);

34 i‡(
__com∑ris⁄
 < 0)

35 
__u
 = 
__idx
;

36 i‡(
__com∑ris⁄
 > 0)

37 
__l
 = 
__idx
 + 1;

40 #i‡
	`__GNUC_PREREQ
(4, 6)

41 #¥agm®
GCC
 
dügno°ic
 
push


42 #¥agm®
GCC
 
dügno°ic
 
ign‹ed
 "-Wcast-qual"

44  (*Ë
__p
;

45 #i‡
	`__GNUC_PREREQ
(4, 6)

46 #¥agm®
GCC
 
dügno°ic
 
p›


51  
NULL
;

52 
	}
}

	@/usr/include/bits/stdlib-float.h

19 #i‚de‡
_STDLIB_H


23 #ifde‡
__USE_EXTERN_INLINES


24 
__exã∫_ölöe
 

25 
__NTH
 (
	$©of
 (c⁄° *
__≈å
))

27  
	`°πod
 (
__≈å
, (**Ë
NULL
);

28 
	}
}

	@/usr/include/bits/stdlib-ldbl.h

19 #i‚de‡
_STDLIB_H


23 #ifdef 
__USE_ISOC99


24 #ifde‡
__LDBL_COMPAT


25 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

27 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
__°πoõì128
)

31 #ifde‡
__USE_GNU


32 #ifde‡
__LDBL_COMPAT


33 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

35 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
__°πoõì128_l
)

39 #i‡
	`__GLIBC_USE
 (
IEC_60559_BFP_EXT_C23
)

40 #ifde‡
__LDBL_COMPAT


41 
	$__LDBL_REDIR1_DECL
 (
°r‰oml
, 
°r‰omd
)

43 
	$__LDBL_REDIR1_DECL
 (
°r‰oml
, 
__°r‰omõì128
)

47 #ifde‡
__USE_MISC


48 #i‡
deföed
 
__LDBL_COMPAT


49 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

50 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

51 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

52 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

53 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

54 #ñi‡
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 1

55 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
__qecvtõì128
)

56 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
__qfcvtõì128
)

57 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
__qgcvtõì128
)

58 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
__qecvtõì128_r
)

59 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
__qfcvtõì128_r
)

61 #îr‹ 
bôs
/
°dlib
-
ldbl
.
h
 
ö˛uded
 
whí
 
no
Üdb»
ªdúe˘i⁄s
 
¨e
 
ªquúed
.

	@/usr/include/bits/stdlib.h

19 #i‚de‡
_STDLIB_H


23 *
	$__ªÆ∑th_chk
 (c⁄° *
__ª°ri˘
 
__«me
,

24 *
__ª°ri˘
 
__ªsﬁved
,

25 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

26 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

27 (c⁄° *
__ª°ri˘
 
__«me
,

28 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

29 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

30 (c⁄° *
__ª°ri˘
 
__«me
,

31 *
__ª°ri˘
 
__ªsﬁved
,

32 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


33 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

36 
__f‹tify_fun˘i⁄
 
__©åibuã_ovîlﬂdabÀ__
 
__wur
 *

37 
	`__NTH
 (
	`ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

38 
	$__f‹tify_˛™g_ovîlﬂd_¨g
 (*, 
__ª°ri˘
, 
__ªsﬁved
)))

39 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


40 
	`__f‹tify_˛™g_w¨nög_⁄ly_if_bos_…
 (
PATH_MAX
, 
__ªsﬁved
,

46 
size_t
 
sz
 = 
	`__glibc_objsize
 (
__ªsﬁved
);

48 i‡(
sz
 =(
size_t
) -1)

49  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

51 #i‡!
__f‹tify_u£_˛™g
 && 
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


52 i‡(
	`__glibc_unß„_Àn
 (
PATH_MAX
,  (), 
sz
))

53  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
sz
);

55  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
sz
);

56 
	}
}

59 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

60 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2))

61 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

62 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

63 
size_t
 
__buÊí
), 
±¢ame_r
)

64 
	`__n⁄nuŒ
 ((2)Ë
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

65 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

66 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

67 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

68 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

71 
__f‹tify_fun˘i⁄
 
__©åibuã_ovîlﬂdabÀ__
 

72 
	`__NTH
 (
	`±¢ame_r
 (
__fd
,

73 
	`__f‹tify_˛™g_ovîlﬂd_¨g
 (*, ,
__buf
),

74 
size_t
 
__buÊí
))

75 
	`__f‹tify_˛™g_w¨nög_⁄ly_if_bos_…
 (
__buÊí
, 
__buf
,

79  
	`__glibc_f‹tify
 (
±¢ame_r
, 
__buÊí
,  (),

80 
	`__glibc_objsize
 (
__buf
),

81 
__fd
, 
__buf
, 
__buÊí
);

82 
	}
}

85 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

86 
__THROW
 
__wur
;

87 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

88 
w˘omb
Ë
__wur
;

90 
__f‹tify_fun˘i⁄
 
__©åibuã_ovîlﬂdabÀ__
 
__wur
 

91 
	`__NTH
 (
	`w˘omb
 (
	`__f‹tify_˛™g_ovîlﬂd_¨g
 (*, ,
__s
), 
wch¨_t
 
__wch¨
))

96 
	#__STDLIB_MB_LEN_MAX
 16

	)

97 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


100 i‡(
	`__glibc_objsize
 (
__s
Ë!(
size_t
) -1

101 && 
__STDLIB_MB_LEN_MAX
 > 
	`__glibc_objsize
 (
__s
))

102  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__glibc_objsize
 (__s));

103  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

104 
	}
}

107 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

108 c⁄° *
__ª°ri˘
 
__§c
,

109 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW


110 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 3)Ë__©å_ac˚s†((
__ªad_⁄ly__
, 2));

111 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_nuŒd°
,

112 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

113 c⁄° *
__ª°ri˘
 
__§c
,

114 
size_t
 
__Àn
), 
mb°owcs
)

115 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 2));

116 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

117 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

118 c⁄° *
__ª°ri˘
 
__§c
,

119 
size_t
 
__Àn
), 
mb°owcs
)

120 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 3)Ë__©å_ac˚s†((
__ªad_⁄ly__
, 2));

121 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

122 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

123 c⁄° *
__ª°ri˘
 
__§c
,

124 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

125 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

128 
__f‹tify_fun˘i⁄
 
__©åibuã_ovîlﬂdabÀ__
 
size_t


129 
	`__NTH
 (
	`mb°owcs
 (
	`__f‹tify_˛™g_ovîlﬂd_¨g
 (
wch¨_t
 *, 
__ª°ri˘
, 
__d°
),

130 c⁄° *
__ª°ri˘
 
__§c
,

131 
size_t
 
__Àn
))

132 
	`__f‹tify_˛™g_w¨nög_⁄ly_if_bos0_…2
 (
__Àn
, 
__d°
,  (
wch¨_t
),

136 i‡(
	`__buûtö_c⁄°™t_p
 (
__d°
 =
NULL
) && __dst == NULL)

137  
	`__mb°owcs_nuŒd°
 (
__d°
, 
__§c
, 
__Àn
);

139  
	`__glibc_f‹tify_n
 (
mb°owcs
, 
__Àn
,  (
wch¨_t
),

140 
	`__glibc_objsize
 (
__d°
), __d°, 
__§c
, 
__Àn
);

141 
	}
}

143 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

144 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

145 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW


146 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 3)Ë__©å_ac˚s†((
__ªad_⁄ly__
, 2));

147 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

148 (*
__ª°ri˘
 
__d°
,

149 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

150 
size_t
 
__Àn
), 
wc°ombs
)

151 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 3)Ë__©å_ac˚s†((
__ªad_⁄ly__
, 2));

152 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

153 (*
__ª°ri˘
 
__d°
,

154 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

155 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

156 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

158 
__f‹tify_fun˘i⁄
 
__©åibuã_ovîlﬂdabÀ__
 
size_t


159 
	`__NTH
 (
	`wc°ombs
 (
	`__f‹tify_˛™g_ovîlﬂd_¨g
 (*, 
__ª°ri˘
, 
__d°
),

160 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

161 
size_t
 
__Àn
))

163  
	`__glibc_f‹tify
 (
wc°ombs
, 
__Àn
,  (),

164 
	`__glibc_objsize
 (
__d°
),

165 
__d°
, 
__§c
, 
__Àn
);

166 
	}
}

	@/usr/include/bits/types.h

23 #i‚def 
_BITS_TYPES_H


24 
	#_BITS_TYPES_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/w‹dsize.h
>

28 
	~<bôs/timesize.h
>

31 
	t__u_ch¨
;

32 
	t__u_sh‹t
;

33 
	t__u_öt
;

34 
	t__u_l⁄g
;

37 sig√d 
	t__öt8_t
;

38 
	t__uöt8_t
;

39 sig√d 
	t__öt16_t
;

40 
	t__uöt16_t
;

41 sig√d 
	t__öt32_t
;

42 
	t__uöt32_t
;

43 #i‡
__WORDSIZE
 == 64

44 sig√d 
	t__öt64_t
;

45 
	t__uöt64_t
;

47 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

48 
__exãnsi⁄__
 
	t__uöt64_t
;

52 
__öt8_t
 
	t__öt_Àa°8_t
;

53 
__uöt8_t
 
	t__uöt_Àa°8_t
;

54 
__öt16_t
 
	t__öt_Àa°16_t
;

55 
__uöt16_t
 
	t__uöt_Àa°16_t
;

56 
__öt32_t
 
	t__öt_Àa°32_t
;

57 
__uöt32_t
 
	t__uöt_Àa°32_t
;

58 
__öt64_t
 
	t__öt_Àa°64_t
;

59 
__uöt64_t
 
	t__uöt_Àa°64_t
;

62 #i‡
__WORDSIZE
 == 64

63 
	t__quad_t
;

64 
	t__u_quad_t
;

66 
__exãnsi⁄__
 
	t__quad_t
;

67 
__exãnsi⁄__
 
	t__u_quad_t
;

71 #i‡
__WORDSIZE
 == 64

72 
	t__ötmax_t
;

73 
	t__uötmax_t
;

75 
__exãnsi⁄__
 
	t__ötmax_t
;

76 
__exãnsi⁄__
 
	t__uötmax_t
;

109 
	#__S16_TYPE
 

	)

110 
	#__U16_TYPE
 

	)

111 
	#__S32_TYPE
 

	)

112 
	#__U32_TYPE
 

	)

113 
	#__SLONGWORD_TYPE
 

	)

114 
	#__ULONGWORD_TYPE
 

	)

115 #i‡
__WORDSIZE
 == 32

116 
	#__SQUAD_TYPE
 
__öt64_t


	)

117 
	#__UQUAD_TYPE
 
__uöt64_t


	)

118 
	#__SWORD_TYPE
 

	)

119 
	#__UWORD_TYPE
 

	)

120 
	#__SLONG32_TYPE
 

	)

121 
	#__ULONG32_TYPE
 

	)

122 
	#__S64_TYPE
 
__öt64_t


	)

123 
	#__U64_TYPE
 
__uöt64_t


	)

126 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

127 #ñi‡
__WORDSIZE
 == 64

128 
	t__SQUAD_TYPE
 

	)

129 
	t__UQUAD_TYPE
 

	)

130 
	t__SWORD_TYPE
 

	)

131 
	t__UWORD_TYPE
 

	)

132 
	t__SLONG32_TYPE
 

	)

133 
	t__ULONG32_TYPE
 

	)

134 
	t__S64_TYPE
 

	)

135 
	t__U64_TYPE
 

	)

137 
	t__STD_TYPE
 

	)

141 
	~<bôs/ty≥sizes.h
>

142 
	~<bôs/time64.h
>

145 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

146 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

147 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

148 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

149 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

150 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

151 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

152 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

153 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

154 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

155 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

156 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

157 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

158 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

159 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

160 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

161 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

162 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

163 
__STD_TYPE
 
__SUSECONDS64_T_TYPE
 
	g__su£c⁄ds64_t
;

165 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

166 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

169 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

172 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

175 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

180 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

181 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

184 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

185 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

188 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

189 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

192 
__STD_TYPE
 
__FSWORD_T_TYPE
 
	g__fsw‹d_t
;

194 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

197 
__STD_TYPE
 
__SYSCALL_SLONG_TYPE
 
	g__sysˇŒ_¶⁄g_t
;

199 
__STD_TYPE
 
__SYSCALL_ULONG_TYPE
 
	g__sysˇŒ_ul⁄g_t
;

203 
__off64_t
 
	t__loff_t
;

204 *
	t__ˇddr_t
;

207 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

210 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

215 
	t__sig_©omic_t
;

220 #i‡
__TIMESIZE
 =64 && 
deföed
 
__LIBC


221 
	#__time64_t
 
__time_t


	)

222 #ñi‡
__TIMESIZE
 != 64

223 
__STD_TYPE
 
__TIME64_T_TYPE
 
	g__time64_t
;

226 #unde‡
__STD_TYPE


	@/usr/include/bits/types/FILE.h

1 #i‚de‡
__FILE_deföed


2 
	#__FILE_deföed
 1

	)

4 
	g_IO_FILE
;

7 
_IO_FILE
 
	tFILE
;

	@/usr/include/bits/types/__FILE.h

1 #i‚de‡
____FILE_deföed


2 
	#____FILE_deföed
 1

	)

4 
	g_IO_FILE
;

5 
_IO_FILE
 
	t__FILE
;

	@/usr/include/bits/types/__fpos64_t.h

1 #i‚de‡
_____Âos64_t_deföed


2 
	#_____Âos64_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

5 
	~<bôs/ty≥s/__mb°©e_t.h
>

10 
	s_G_Âos64_t


12 
__off64_t
 
	m__pos
;

13 
__mb°©e_t
 
	m__°©e
;

14 } 
	t__Âos64_t
;

	@/usr/include/bits/types/__fpos_t.h

1 #i‚de‡
_____Âos_t_deföed


2 
	#_____Âos_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

5 
	~<bôs/ty≥s/__mb°©e_t.h
>

10 
	s_G_Âos_t


12 
__off_t
 
	m__pos
;

13 
__mb°©e_t
 
	m__°©e
;

14 } 
	t__Âos_t
;

	@/usr/include/bits/types/__sigset_t.h

1 #i‚de‡
____sig£t_t_deföed


2 
	#____sig£t_t_deföed


	)

4 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

7 
	m__vÆ
[
_SIGSET_NWORDS
];

8 } 
	t__sig£t_t
;

	@/usr/include/bits/types/cookie_io_functions_t.h

18 #i‚de‡
__cookõ_io_fun˘i⁄s_t_deföed


19 
	#__cookõ_io_fun˘i⁄s_t_deföed
 1

	)

21 
	~<bôs/ty≥s.h
>

27 
__ssize_t
 
	tcookõ_ªad_fun˘i⁄_t
 (*
	t__cookõ
, *
	t__buf
,

28 
	tsize_t
 
	t__nbyãs
);

36 
__ssize_t
 
	tcookõ_wrôe_fun˘i⁄_t
 (*
	t__cookõ
, c⁄° *
	t__buf
,

37 
	tsize_t
 
	t__nbyãs
);

45 
	tcookõ_£ek_fun˘i⁄_t
 (*
	t__cookõ
, 
	t__off64_t
 *
	t__pos
, 
	t__w
);

48 
	tcookõ_˛o£_fun˘i⁄_t
 (*
	t__cookõ
);

55 
	s_IO_cookõ_io_fun˘i⁄s_t


57 
cookõ_ªad_fun˘i⁄_t
 *
	mªad
;

58 
cookõ_wrôe_fun˘i⁄_t
 *
	mwrôe
;

59 
cookõ_£ek_fun˘i⁄_t
 *
	m£ek
;

60 
cookõ_˛o£_fun˘i⁄_t
 *
	m˛o£
;

61 } 
	tcookõ_io_fun˘i⁄s_t
;

	@/usr/include/bits/types/error_t.h

19 #i‚de‡
__îr‹_t_deföed


20 
	#__îr‹_t_deföed
 1

	)

22 
	tîr‹_t
;

	@/usr/include/bits/types/locale_t.h

19 #i‚de‡
_BITS_TYPES_LOCALE_T_H


20 
	#_BITS_TYPES_LOCALE_T_H
 1

	)

22 
	~<bôs/ty≥s/__loˇÀ_t.h
>

24 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/bits/types/struct_FILE.h

18 #i‚de‡
__°ru˘_FILE_deföed


19 
	#__°ru˘_FILE_deföed
 1

	)

25 #i‡
deföed
 
_IO_USE_OLD_IO_FILE
 && !deföed 
_LIBC


29 #i‡
deföed
 
_IO_lock_t_deföed
 && !deföed 
_LIBC


33 
	~<bôs/ty≥s.h
>

35 
	g_IO_FILE
;

36 
	g_IO_m¨kî
;

37 
	g_IO_codecvt
;

38 
	g_IO_wide_d©a
;

42 #i‚de‡
_IO_lock_t_deföed


43 
	t_IO_lock_t
;

49 
	s_IO_FILE


51 
	m_Êags
;

54 *
	m_IO_ªad_±r
;

55 *
	m_IO_ªad_íd
;

56 *
	m_IO_ªad_ba£
;

57 *
	m_IO_wrôe_ba£
;

58 *
	m_IO_wrôe_±r
;

59 *
	m_IO_wrôe_íd
;

60 *
	m_IO_buf_ba£
;

61 *
	m_IO_buf_íd
;

64 *
	m_IO_ßve_ba£
;

65 *
	m_IO_backup_ba£
;

66 *
	m_IO_ßve_íd
;

68 
_IO_m¨kî
 *
	m_m¨kîs
;

70 
_IO_FILE
 *
	m_chaö
;

72 
	m_fûío
;

73 
	m_Êags2
;

74 
__off_t
 
	m_ﬁd_off£t
;

77 
	m_cur_cﬁumn
;

78 sig√d 
	m_vèbÀ_off£t
;

79 
	m_sh‹tbuf
[1];

81 
_IO_lock_t
 *
	m_lock
;

82 #ifde‡
_IO_USE_OLD_IO_FILE


85 
	s_IO_FILE_com∂ëe


87 
_IO_FILE
 
	m_fûe
;

89 
__off64_t
 
	m_off£t
;

91 
_IO_codecvt
 *
	m_codecvt
;

92 
_IO_wide_d©a
 *
	m_wide_d©a
;

93 
_IO_FILE
 *
	m_‰ìªs_li°
;

94 *
	m_‰ìªs_buf
;

95 
_IO_FILE
 **
	m_¥evchaö
;

96 
	m_mode
;

98 
	m_unu£d2
[15 *  () - 5 *  (*)];

102 
	#__gëc_u∆ocked_body
(
_Â
) \

103 (
	`__glibc_u∆ikñy
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
) \

104 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

106 
	#__putc_u∆ocked_body
(
_ch
, 
_Â
) \

107 (
	`__glibc_u∆ikñy
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
) \

108 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

109 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

111 
	#_IO_EOF_SEEN
 0x0010

	)

112 
	#__„of_u∆ocked_body
(
_Â
Ë(((_Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

114 
	#_IO_ERR_SEEN
 0x0020

	)

115 
	#__„º‹_u∆ocked_body
(
_Â
Ë(((_Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

117 
	#_IO_USER_LOCK
 0x8000

	)

	@/usr/include/bits/types/struct___jmp_buf_tag.h

19 #i‚def 
__jmp_buf_èg_deföed


20 
	#__jmp_buf_èg_deföed
 1

	)

22 
	~<bôs/£tjmp.h
>

23 
	~<bôs/ty≥s/__sig£t_t.h
>

26 
	s__jmp_buf_èg


32 
__jmp_buf
 
	m__jmpbuf
;

33 
	m__mask_was_ßved
;

34 
__sig£t_t
 
	m__ßved_mask
;

	@/usr/include/bits/types/struct_timespec.h

2 #i‚de‡
_STRUCT_TIMESPEC


3 
	#_STRUCT_TIMESPEC
 1

	)

5 
	~<bôs/ty≥s.h
>

6 
	~<bôs/ídün.h
>

7 
	~<bôs/ty≥s/time_t.h
>

11 
	stime•ec


13 #ifde‡
__USE_TIME64_REDIRECTS


14 
__time64_t
 
	mtv_£c
;

16 
__time_t
 
	mtv_£c
;

18 #i‡
__WORDSIZE
 == 64 \

19 || (
deföed
 
	m__SYSCALL_WORDSIZE
 && __SYSCALL_WORDSIZE == 64) \

20 || (
__TIMESIZE
 =32 && !
deföed
 
__USE_TIME64_REDIRECTS
)

21 
__sysˇŒ_¶⁄g_t
 
tv_n£c
;

23 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


25 
	mtv_n£c
;

27 
	mtv_n£c
;

	@/usr/include/bits/types/struct_timeval.h

1 #i‚de‡
__timevÆ_deföed


2 
	#__timevÆ_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

8 
	stimevÆ


10 #ifde‡
__USE_TIME64_REDIRECTS


11 
__time64_t
 
	mtv_£c
;

12 
__su£c⁄ds64_t
 
	mtv_u£c
;

14 
__time_t
 
	mtv_£c
;

15 
__su£c⁄ds_t
 
	mtv_u£c
;

	@/usr/include/bits/types/time_t.h

1 #i‚de‡
__time_t_deföed


2 
	#__time_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

7 #ifde‡
__USE_TIME64_REDIRECTS


8 
__time64_t
 
	ttime_t
;

10 
__time_t
 
	ttime_t
;

	@/usr/include/bits/unistd.h

19 #i‚de‡
_UNISTD_H


23 
	~<bôs/uni°d-de˛.h
>

25 
__f‹tify_fun˘i⁄
 
__©åibuã_ovîlﬂdabÀ__
 
__wur
 
ssize_t


26 
ªad
 (
__fd
, 
__f‹tify_˛™g_ovîlﬂd_¨g0
 (*, ,
__buf
), 
size_t
 
__nbyãs
)

27 
__f‹tify_˛™g_w¨nög_⁄ly_if_bos0_…
 (
__nbyãs
, 
__buf
,

32  
__glibc_f‹tify
 (
ªad
, 
__nbyãs
,  (),

33 
__glibc_objsize0
 (
__buf
),

34 
__fd
, 
__buf
, 
__nbyãs
);

37 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


38 #i‚de‡
__USE_FILE_OFFSET64


39 
__f‹tify_fun˘i⁄
 
__©åibuã_ovîlﬂdabÀ__
 
__wur
 
ssize_t


40 
¥ód
 (
__fd
, 
__f‹tify_˛™g_ovîlﬂd_¨g0
 (*, ,
__buf
),

41 
size_t
 
__nbyãs
, 
__off_t
 
__off£t
)

42 
__f‹tify_˛™g_w¨nög_⁄ly_if_bos0_…
 (
__nbyãs
, 
__buf
,

46  
__glibc_f‹tify
 (
¥ód
, 
__nbyãs
,  (),

47 
__glibc_objsize0
 (
__buf
),

48 
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

51 
__f‹tify_fun˘i⁄
 
__©åibuã_ovîlﬂdabÀ__
 
__wur
 
ssize_t


52 
¥ód
 (
__fd
, 
__f‹tify_˛™g_ovîlﬂd_¨g0
 (*, ,
__buf
),

53 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

54 
__f‹tify_˛™g_w¨nög_⁄ly_if_bos0_…
 (
__nbyãs
, 
__buf
,

58  
__glibc_f‹tify
 (
¥ód64
, 
__nbyãs
,  (),

59 
__glibc_objsize0
 (
__buf
),

60 
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

64 #ifde‡
__USE_LARGEFILE64


65 
__f‹tify_fun˘i⁄
 
__©åibuã_ovîlﬂdabÀ__
 
__wur
 
ssize_t


66 
¥ód64
 (
__fd
, 
__f‹tify_˛™g_ovîlﬂd_¨g0
 (*, ,
__buf
),

67 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

68 
__f‹tify_˛™g_w¨nög_⁄ly_if_bos0_…
 (
__nbyãs
, 
__buf
,

72  
__glibc_f‹tify
 (
¥ód64
, 
__nbyãs
,  (),

73 
__glibc_objsize0
 (
__buf
),

74 
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

79 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


80 
__f‹tify_fun˘i⁄
 
__©åibuã_ovîlﬂdabÀ__
 
__n⁄nuŒ
 ((1, 2)Ë
__wur
 
ssize_t


81 
__NTH
 (
ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
,

82 
__f‹tify_˛™g_ovîlﬂd_¨g0
 (*, 
__ª°ri˘
, 
__buf
),

83 
size_t
 
__Àn
))

84 
__f‹tify_˛™g_w¨nög_⁄ly_if_bos_…
 (
__Àn
, 
__buf
,

89  
__glibc_f‹tify
 (
ªadlök
, 
__Àn
,  (),

90 
__glibc_objsize
 (
__buf
),

91 
__∑th
, 
__buf
, 
__Àn
);

95 #ifde‡
__USE_ATFILE


96 
__f‹tify_fun˘i⁄
 
__©åibuã_ovîlﬂdabÀ__
 
__n⁄nuŒ
 ((2, 3)Ë
__wur
 
ssize_t


97 
__NTH
 (
ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

98 
__f‹tify_˛™g_ovîlﬂd_¨g0
 (*, 
__ª°ri˘
, 
__buf
),

99 
size_t
 
__Àn
))

100 
__f‹tify_˛™g_w¨nög_⁄ly_if_bos_…
 (
__Àn
, 
__buf
,

104  
__glibc_f‹tify
 (
ªadlök©
, 
__Àn
,  (),

105 
__glibc_objsize
 (
__buf
),

106 
__fd
, 
__∑th
, 
__buf
, 
__Àn
);

110 
__f‹tify_fun˘i⁄
 
__©åibuã_ovîlﬂdabÀ__
 
__wur
 *

111 
__NTH
 (
gëcwd
 (
__f‹tify_˛™g_ovîlﬂd_¨g
 (*, , 
__buf
), 
size_t
 
__size
))

112 
__f‹tify_˛™g_w¨nög_⁄ly_if_bos_…
 (
__size
, 
__buf
,

116  
__glibc_f‹tify
 (
gëcwd
, 
__size
,  (),

117 
__glibc_objsize
 (
__buf
),

118 
__buf
, 
__size
);

121 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


122 
__f‹tify_fun˘i⁄
 
__©åibuã_ovîlﬂdabÀ__
 
__n⁄nuŒ
 ((1))

123 
__©åibuã_dïªˇãd__
 
__wur
 *

124 
__NTH
 (
gëwd
 (
	$__f‹tify_˛™g_ovîlﬂd_¨g
 (*,, 
__buf
)))

126 i‡(
	`__glibc_objsize
 (
__buf
Ë!(
size_t
) -1)

127  
	`__gëwd_chk
 (
__buf
, 
	`__glibc_objsize
 (__buf));

128  
	`__gëwd_w¨n
 (
__buf
);

129 
	}
}

132 
__f‹tify_fun˘i⁄
 
__©åibuã_ovîlﬂdabÀ__
 
size_t


133 
__NTH
 (
c⁄f°r
 (
__«me
, 
__f‹tify_˛™g_ovîlﬂd_¨g
 (*, ,
__buf
),

134 
size_t
 
__Àn
))

135 
__f‹tify_˛™g_w¨nög_⁄ly_if_bos_…
 (
__Àn
, 
__buf
,

139  
__glibc_f‹tify
 (
c⁄f°r
, 
__Àn
,  (),

140 
__glibc_objsize
 (
__buf
),

141 
__«me
, 
__buf
, 
__Àn
);

145 
__f‹tify_fun˘i⁄
 
__©åibuã_ovîlﬂdabÀ__
 

146 
__NTH
 (
gëgroups
 (
__size
,

147 
	$__f‹tify_˛™g_ovîlﬂd_¨g
 (
__gid_t
 *, , 
__li°
)))

148 
	`__f‹tify_˛™g_w¨nög_⁄ly_if_bos_…
 (
__size
 *  (
__gid_t
), 
__li°
,

153  
	`__glibc_f‹tify
 (
gëgroups
, 
__size
,  (
__gid_t
),

154 
	`__glibc_objsize
 (
__li°
),

155 
__size
, 
__li°
);

156 
	}
}

159 
__f‹tify_fun˘i⁄
 
__©åibuã_ovîlﬂdabÀ__
 

160 
__NTH
 (
ây«me_r
 (
__fd
,

161 
__f‹tify_˛™g_ovîlﬂd_¨g
 (*, ,
__buf
),

162 
size_t
 
__buÊí
))

163 
__f‹tify_˛™g_w¨nög_⁄ly_if_bos_…
 (
__buÊí
, 
__buf
,

167  
__glibc_f‹tify
 (
ây«me_r
, 
__buÊí
,  (),

168 
__glibc_objsize
 (
__buf
),

169 
__fd
, 
__buf
, 
__buÊí
);

173 #ifde‡
__USE_POSIX199506


174 
__f‹tify_fun˘i⁄
 
__©åibuã_ovîlﬂdabÀ__
 

175 
gëlogö_r
 (
__f‹tify_˛™g_ovîlﬂd_¨g
 (*, ,
__buf
), 
size_t
 
__buÊí
)

176 
__f‹tify_˛™g_w¨nög_⁄ly_if_bos_…
 (
__buÊí
, 
__buf
,

180  
__glibc_f‹tify
 (
gëlogö_r
, 
__buÊí
,  (),

181 
__glibc_objsize
 (
__buf
),

182 
__buf
, 
__buÊí
);

187 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_UNIX98


188 
__f‹tify_fun˘i⁄
 
__©åibuã_ovîlﬂdabÀ__
 

189 
__NTH
 (
gëho°«me
 (
__f‹tify_˛™g_ovîlﬂd_¨g
 (*, ,
__buf
),

190 
size_t
 
__buÊí
))

191 
__f‹tify_˛™g_w¨nög_⁄ly_if_bos_…
 (
__buÊí
, 
__buf
,

195  
__glibc_f‹tify
 (
gëho°«me
, 
__buÊí
,  (),

196 
__glibc_objsize
 (
__buf
),

197 
__buf
, 
__buÊí
);

202 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

203 
__f‹tify_fun˘i⁄
 
__©åibuã_ovîlﬂdabÀ__
 

204 
__NTH
 (
gëdomaö«me
 (
__f‹tify_˛™g_ovîlﬂd_¨g
 (*, ,
__buf
),

205 
size_t
 
__buÊí
))

206 
__f‹tify_˛™g_w¨nög_⁄ly_if_bos_…
 (
__buÊí
, 
__buf
,

210  
__glibc_f‹tify
 (
gëdomaö«me
, 
__buÊí
,  (),

211 
__glibc_objsize
 (
__buf
),

212 
__buf
, 
__buÊí
);

	@/usr/include/bits/unistd_ext.h

19 #i‚de‡
_UNISTD_H


23 #ifde‡
__USE_GNU


34 
__pid_t
 
	$gëtid
 (Ë
__THROW
;

36 #ifde‡
__has_ö˛ude


37 #i‡
	`__has_ö˛ude
 ("linux/close_range.h")

38 
	~"löux/˛o£_ønge.h
"

42 #i‚de‡
CLOSE_RANGE_UNSHARE


43 
	#CLOSE_RANGE_UNSHARE
 (1U << 1)

	)

46 #i‚de‡
CLOSE_RANGE_CLOEXEC


47 
	#CLOSE_RANGE_CLOEXEC
 (1U << 2)

	)

	@/usr/include/bits/waitflags.h

19 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


25 
	#WNOHANG
 1

	)

26 
	#WUNTRACED
 2

	)

29 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


30 
	#WSTOPPED
 2

	)

31 
	#WEXITED
 4

	)

32 
	#WCONTINUED
 8

	)

33 
	#WNOWAIT
 0x01000000

	)

36 
	#__WNOTHREAD
 0x20000000

	)

38 
	#__WALL
 0x40000000

	)

39 
	#__WCLONE
 0x80000000

	)

	@/usr/include/bits/waitstatus.h

19 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


28 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

31 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

34 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

37 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

40 
	#__WIFSIGNALED
(
°©us
) \

41 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

44 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

48 #ifde‡
WCONTINUED


49 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

53 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

56 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

57 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

58 
	#__W_CONTINUED
 0xffff

	)

59 
	#__WCOREFLAG
 0x80

	)

	@/usr/include/bits/wchar.h

19 #i‚de‡
_BITS_WCHAR_H


20 
	#_BITS_WCHAR_H
 1

	)

33 #ifde‡
__WCHAR_MAX__


34 
	#__WCHAR_MAX
 
__WCHAR_MAX__


	)

35 #ñi‡
L
'\0' - 1 > 0

36 
	#__WCHAR_MAX
 (0xffffffffu + 
L
'\0')

	)

38 
	#__WCHAR_MAX
 (0x7ffffff‡+ 
L
'\0')

	)

41 #ifde‡
__WCHAR_MIN__


42 
	#__WCHAR_MIN
 
__WCHAR_MIN__


	)

43 #ñi‡
L
'\0' - 1 > 0

44 
	#__WCHAR_MIN
 (
L
'\0' + 0)

	)

46 
	#__WCHAR_MIN
 (-
__WCHAR_MAX
 - 1)

	)

	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__
 && !deföed 
__ILP32__


4 
	#__WORDSIZE
 64

	)

6 
	#__WORDSIZE
 32

	)

7 
	#__WORDSIZE32_SIZE_ULONG
 0

	)

8 
	#__WORDSIZE32_PTRDIFF_LONG
 0

	)

11 
	#__WORDSIZE_TIME64_COMPAT32
 1

	)

13 #ifde‡
__x86_64__


15 
	#__SYSCALL_WORDSIZE
 64

	)

	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

128 #unde‡
__USE_ISOC11


129 #unde‡
__USE_ISOC99


130 #unde‡
__USE_ISOC95


131 #unde‡
__USE_ISOCXX11


132 #unde‡
__USE_POSIX


133 #unde‡
__USE_POSIX2


134 #unde‡
__USE_POSIX199309


135 #unde‡
__USE_POSIX199506


136 #unde‡
__USE_XOPEN


137 #unde‡
__USE_XOPEN_EXTENDED


138 #unde‡
__USE_UNIX98


139 #unde‡
__USE_XOPEN2K


140 #unde‡
__USE_XOPEN2KXSI


141 #unde‡
__USE_XOPEN2K8


142 #unde‡
__USE_XOPEN2K8XSI


143 #unde‡
__USE_LARGEFILE


144 #unde‡
__USE_LARGEFILE64


145 #unde‡
__USE_FILE_OFFSET64


146 #unde‡
__USE_MISC


147 #unde‡
__USE_ATFILE


148 #unde‡
__USE_DYNAMIC_STACK_SIZE


149 #unde‡
__USE_GNU


150 #unde‡
__USE_FORTIFY_LEVEL


151 #unde‡
__KERNEL_STRICT_NAMES


152 #unde‡
__GLIBC_USE_ISOC23


153 #unde‡
__GLIBC_USE_DEPRECATED_GETS


154 #unde‡
__GLIBC_USE_DEPRECATED_SCANF


155 #unde‡
__GLIBC_USE_C23_STRTOL


159 #i‚de‡
_LOOSE_KERNEL_NAMES


160 
	#__KERNEL_STRICT_NAMES


	)

170 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


171 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

172 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

174 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

181 #i‡
deföed
 
__˛™g_maj‹__
 && deföed 
__˛™g_mö‹__


182 
	#__glibc_˛™g_¥îeq
(
maj
, 
mö
) \

183 ((
__˛™g_maj‹__
 << 16Ë+ 
__˛™g_mö‹__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

185 
	#__glibc_˛™g_¥îeq
(
maj
, 
mö
Ë0

	)

189 
	#__GLIBC_USE
(
F
Ë
__GLIBC_USE_
 ## 
	)
F

195 #i‡(
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE
) \

196 && !
deföed
 
	g_DEFAULT_SOURCE


198 #unde‡
_DEFAULT_SOURCE


199 
	#_DEFAULT_SOURCE
 1

	)

203 #ifde‡
_ISOC2X_SOURCE


204 #unde‡
_ISOC2X_SOURCE


205 #unde‡
_ISOC23_SOURCE


206 
	#_ISOC23_SOURCE
 1

	)

210 #ifde‡
_GNU_SOURCE


211 #unde‡
_ISOC95_SOURCE


212 
	#_ISOC95_SOURCE
 1

	)

213 #unde‡
_ISOC99_SOURCE


214 
	#_ISOC99_SOURCE
 1

	)

215 #unde‡
_ISOC11_SOURCE


216 
	#_ISOC11_SOURCE
 1

	)

217 #unde‡
_ISOC23_SOURCE


218 
	#_ISOC23_SOURCE
 1

	)

219 #unde‡
_POSIX_SOURCE


220 
	#_POSIX_SOURCE
 1

	)

221 #unde‡
_POSIX_C_SOURCE


222 
	#_POSIX_C_SOURCE
 200809L

	)

223 #unde‡
_XOPEN_SOURCE


224 
	#_XOPEN_SOURCE
 700

	)

225 #unde‡
_XOPEN_SOURCE_EXTENDED


226 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

227 #unde‡
_LARGEFILE64_SOURCE


228 
	#_LARGEFILE64_SOURCE
 1

	)

229 #unde‡
_DEFAULT_SOURCE


230 
	#_DEFAULT_SOURCE
 1

	)

231 #unde‡
_ATFILE_SOURCE


232 
	#_ATFILE_SOURCE
 1

	)

233 #unde‡
_DYNAMIC_STACK_SIZE_SOURCE


234 
	#_DYNAMIC_STACK_SIZE_SOURCE
 1

	)

239 #i‡(
deföed
 
_DEFAULT_SOURCE
 \

240 || (!
deföed
 
	g__STRICT_ANSI__
 \

241 && !
deföed
 
	g_ISOC99_SOURCE
 && !deföed 
	g_ISOC11_SOURCE
 \

242 && !
deföed
 
	g_ISOC23_SOURCE
 \

243 && !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 \

244 && !
deföed
 
	g_XOPEN_SOURCE
))

245 #unde‡
_DEFAULT_SOURCE


246 
	#_DEFAULT_SOURCE
 1

	)

250 #i‡(
deföed
 
_ISOC23_SOURCE
 \

251 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ > 201710L))

252 
	#__GLIBC_USE_ISOC23
 1

	)

254 
	#__GLIBC_USE_ISOC23
 0

	)

258 #i‡(
deföed
 
_ISOC11_SOURCE
 || deföed 
_ISOC23_SOURCE
 \

259 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

260 
	#__USE_ISOC11
 1

	)

264 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

265 || 
deföed
 
_ISOC23_SOURCE
 \

266 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

267 
	#__USE_ISOC99
 1

	)

271 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

272 || 
deföed
 
_ISOC23_SOURCE
 \

273 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

274 
	#__USE_ISOC95
 1

	)

277 #ifde‡
__˝lu•lus


279 #i‡
__˝lu•lus
 >= 201703L

280 
	#__USE_ISOC11
 1

	)

284 #i‡
__˝lu•lus
 >201103L || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__


285 
	#__USE_ISOCXX11
 1

	)

286 
	#__USE_ISOC99
 1

	)

293 #ifde‡
_DEFAULT_SOURCE


294 #i‡!
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE


295 
	#__USE_POSIX_IMPLICITLY
 1

	)

297 #unde‡
_POSIX_SOURCE


298 
	#_POSIX_SOURCE
 1

	)

299 #unde‡
_POSIX_C_SOURCE


300 
	#_POSIX_C_SOURCE
 200809L

	)

303 #i‡((!
deföed
 
__STRICT_ANSI__
 \

304 || (
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) >= 500)) \

305 && !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

306 
	#_POSIX_SOURCE
 1

	)

307 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

308 
	#_POSIX_C_SOURCE
 2

	)

309 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

310 
	#_POSIX_C_SOURCE
 199506L

	)

311 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

312 
	#_POSIX_C_SOURCE
 200112L

	)

314 
	#_POSIX_C_SOURCE
 200809L

	)

316 
	#__USE_POSIX_IMPLICITLY
 1

	)

325 #i‡((!
deföed
 
_POSIX_C_SOURCE
 || (_POSIX_C_SOURCE - 0) < 199506L) \

326 && (
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE
))

327 
	#_POSIX_SOURCE
 1

	)

328 #unde‡
_POSIX_C_SOURCE


329 
	#_POSIX_C_SOURCE
 199506L

	)

332 #i‡(
deföed
 
_POSIX_SOURCE
 \

333 || (
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >= 1) \

334 || 
deföed
 
_XOPEN_SOURCE
)

335 
	#__USE_POSIX
 1

	)

338 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


339 
	#__USE_POSIX2
 1

	)

342 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199309L

343 
	#__USE_POSIX199309
 1

	)

346 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199506L

347 
	#__USE_POSIX199506
 1

	)

350 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200112L

351 
	#__USE_XOPEN2K
 1

	)

352 #unde‡
__USE_ISOC95


353 
	#__USE_ISOC95
 1

	)

354 #unde‡
__USE_ISOC99


355 
	#__USE_ISOC99
 1

	)

358 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200809L

359 
	#__USE_XOPEN2K8
 1

	)

360 #unde‡
_ATFILE_SOURCE


361 
	#_ATFILE_SOURCE
 1

	)

364 #ifdef 
_XOPEN_SOURCE


365 
	#__USE_XOPEN
 1

	)

366 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

367 
	#__USE_XOPEN_EXTENDED
 1

	)

368 
	#__USE_UNIX98
 1

	)

369 #unde‡
_LARGEFILE_SOURCE


370 
	#_LARGEFILE_SOURCE
 1

	)

371 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

372 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

373 
	#__USE_XOPEN2K8
 1

	)

374 
	#__USE_XOPEN2K8XSI
 1

	)

376 
	#__USE_XOPEN2K
 1

	)

377 
	#__USE_XOPEN2KXSI
 1

	)

378 #unde‡
__USE_ISOC95


379 
	#__USE_ISOC95
 1

	)

380 #unde‡
__USE_ISOC99


381 
	#__USE_ISOC99
 1

	)

384 #ifde‡
_XOPEN_SOURCE_EXTENDED


385 
	#__USE_XOPEN_EXTENDED
 1

	)

390 #ifde‡
_LARGEFILE_SOURCE


391 
	#__USE_LARGEFILE
 1

	)

394 #ifde‡
_LARGEFILE64_SOURCE


395 
	#__USE_LARGEFILE64
 1

	)

398 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

399 
	#__USE_FILE_OFFSET64
 1

	)

402 
	~<„©uªs-time64.h
>

404 #i‡
deföed
 
_DEFAULT_SOURCE


405 
	#__USE_MISC
 1

	)

408 #ifdef 
_ATFILE_SOURCE


409 
	#__USE_ATFILE
 1

	)

412 #ifdef 
_DYNAMIC_STACK_SIZE_SOURCE


413 
	#__USE_DYNAMIC_STACK_SIZE
 1

	)

416 #ifdef 
_GNU_SOURCE


417 
	#__USE_GNU
 1

	)

420 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0

421 #i‡!
deföed
 
__OPTIMIZE__
 || __OPTIMIZE__ <= 0

422 #w¨nög 
_FORTIFY_SOURCE
 
ªquúes
 
compûög
 
wôh
 
›timiz©i⁄
 (-
O
)

423 #ñi‡!
__GNUC_PREREQ
 (4, 1)

424 #w¨nög 
_FORTIFY_SOURCE
 
ªquúes
 
GCC
 4.1 
‹
 
œãr


425 #ñi‡
_FORTIFY_SOURCE
 > 2 && (
__glibc_˛™g_¥îeq
 (9, 0) \

426 || 
	$__GNUC_PREREQ
 (12, 0))

428 #i‡
_FORTIFY_SOURCE
 > 3

429 #w¨nög 
_FORTIFY_SOURCE
 > 3 
is
 
åóãd
 
like
 3 
⁄
 
this
 
∂©f‹m


431 
	#__USE_FORTIFY_LEVEL
 3

	)

432 #ñi‡
_FORTIFY_SOURCE
 > 1

433 #i‡
_FORTIFY_SOURCE
 > 2

434 #w¨nög 
_FORTIFY_SOURCE
 > 2 
is
 
åóãd
 
like
 2 
⁄
 
this
 
∂©f‹m


436 
	#__USE_FORTIFY_LEVEL
 2

	)

438 
	#__USE_FORTIFY_LEVEL
 1

	)

441 #i‚de‡
__USE_FORTIFY_LEVEL


442 
	#__USE_FORTIFY_LEVEL
 0

	)

449 #i‡
deföed
 
__˝lu•lus
 ? __˝lu•lu†>201402L : deföed 
__USE_ISOC11


450 
	#__GLIBC_USE_DEPRECATED_GETS
 0

	)

452 
	#__GLIBC_USE_DEPRECATED_GETS
 1

	)

467 #i‡(
deföed
 
__USE_GNU
 \

468 && (
deföed
 
__˝lu•lus
 \

469 ? (
__˝lu•lus
 < 201103L && !
deföed
 
__GXX_EXPERIMENTAL_CXX0X__
) \

470 : (!
deföed
 
__STDC_VERSION__
 || __STDC_VERSION__ < 199901L)))

471 
	#__GLIBC_USE_DEPRECATED_SCANF
 1

	)

473 
	#__GLIBC_USE_DEPRECATED_SCANF
 0

	)

481 #i‡
	`__GLIBC_USE
 (
ISOC23
)

482 
	#__GLIBC_USE_C23_STRTOL
 1

	)

484 
	#__GLIBC_USE_C23_STRTOL
 0

	)

489 
	~<°dc-¥edef.h
>

497 #unde‡
__GNU_LIBRARY__


498 
	#__GNU_LIBRARY__
 6

	)

502 
	#__GLIBC__
 2

	)

503 
	#__GLIBC_MINOR__
 40

	)

505 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

506 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

509 #i‚de‡
__ASSEMBLER__


510 #i‚de‡
_SYS_CDEFS_H


511 
	~<sys/cdefs.h
>

516 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


517 
	#__USE_LARGEFILE
 1

	)

518 
	#__USE_LARGEFILE64
 1

	)

524 #i‡
	`__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

525 && !
deföed
 
__OPTIMIZE_SIZE__
 && !deföed 
__NO_INLINE__
 \

526 && 
deföed
 
__exã∫_ölöe


527 
	#__USE_EXTERN_INLINES
 1

	)

535 
	~<gnu/°ubs.h
>

	@/usr/include/sched.h

19 #i‚def 
_SCHED_H


20 
	#_SCHED_H
 1

	)

22 
	~<„©uªs.h
>

25 
	~<bôs/ty≥s.h
>

27 
	#__√ed_size_t


	)

28 
	#__√ed_NULL


	)

29 
	~<°ddef.h
>

31 
	~<bôs/ty≥s/time_t.h
>

32 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

33 #i‚de‡
__USE_XOPEN2K


34 
	~<time.h
>

37 #i‚de‡
__pid_t_deföed


38 
__pid_t
 
	tpid_t
;

39 
	#__pid_t_deföed


	)

43 
	~<bôs/sched.h
>

44 
	~<bôs/˝u-£t.h
>

47 
	#sched_¥i‹ôy
 
sched_¥i‹ôy


	)

48 
	#__sched_¥i‹ôy
 
sched_¥i‹ôy


	)

51 
__BEGIN_DECLS


54 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, c⁄° 
sched_∑øm
 *
__∑øm
)

55 
__THROW
;

58 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

61 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

62 c⁄° 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

65 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

68 
	$sched_yõld
 (Ë
__THROW
;

71 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

74 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

77 #i‚de‡
__USE_TIME64_REDIRECTS


78 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

80 #ifde‡
__REDIRECT_NTH


81 
	`__REDIRECT_NTH
 (
sched_º_gë_öãrvÆ
,

82 (
__pid_t
 
__pid
, 
time•ec
 *
__t
),

83 
__sched_º_gë_öãrvÆ64
);

85 
	#sched_º_gë_öãrvÆ
 
__sched_º_gë_öãrvÆ64


	)

89 #ifde‡
__USE_GNU


91 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

92 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

93 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

94 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

95 
˝u£ç
)

	)

96 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

97 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

99 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

100 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

101 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

102 
˝u£ç
)

	)

103 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

104 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

106 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

107 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

108 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

109 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

111 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

112 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

113 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

114 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

115 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

116 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

117 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

118 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

119 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

120 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

121 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

122 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

124 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

125 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

126 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

130 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

131 c⁄° 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

134 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

135 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

138 
__END_DECLS


	@/usr/include/sys/select.h

21 #i‚de‡
_SYS_SELECT_H


22 
	#_SYS_SELECT_H
 1

	)

24 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

30 
	~<bôs/£À˘.h
>

33 
	~<bôs/ty≥s/sig£t_t.h
>

36 
	~<bôs/ty≥s/time_t.h
>

37 
	~<bôs/ty≥s/°ru˘_timevÆ.h
>

38 #ifde‡
__USE_XOPEN2K


39 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

42 #i‚de‡
__su£c⁄ds_t_deföed


43 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

44 
	#__su£c⁄ds_t_deföed


	)

49 
	t__fd_mask
;

52 #unde‡
__NFDBITS


54 
	#__NFDBITS
 (8 * (Ë (
__fd_mask
))

	)

55 
	#__FD_ELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

56 
	#__FD_MASK
(
d
Ë((
__fd_mask
Ë(1UL << ((dË% 
__NFDBITS
)))

	)

63 #ifde‡
__USE_XOPEN


64 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

65 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

67 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

68 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

70 } 
	tfd_£t
;

73 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

75 #ifde‡
__USE_MISC


77 
__fd_mask
 
	tfd_mask
;

80 
	#NFDBITS
 
__NFDBITS


	)

85 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

86 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

87 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

88 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

91 
	g__BEGIN_DECLS


101 #i‚de‡
__USE_TIME64_REDIRECTS


102 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

103 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

104 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

105 
timevÆ
 *
__ª°ri˘
 
__timeout
);

107 #ifde‡
__REDIRECT


108 
__REDIRECT
 (
£À˘
,

109 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

110 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

111 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

112 
timevÆ
 *
__ª°ri˘
 
__timeout
),

113 
__£À˘64
);

115 
	#£À˘
 
__£À˘64


	)

119 #ifde‡
__USE_XOPEN2K


126 #i‚de‡
__USE_TIME64_REDIRECTS


127 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

128 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

129 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

130 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

131 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

133 #ifde‡
__REDIRECT


134 
__REDIRECT
 (
p£À˘
,

135 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

136 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

137 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

138 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

139 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
),

140 
__p£À˘64
);

142 
	#p£À˘
 
__p£À˘64


	)

149 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__GNUC__


150 
	~<bôs/£À˘2.h
>

153 
	g__END_DECLS


	@/usr/include/sys/types.h

22 #i‚def 
_SYS_TYPES_H


23 
	#_SYS_TYPES_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

31 #ifdef 
__USE_MISC


32 #i‚de‡
__u_ch¨_deföed


33 
__u_ch¨
 
	tu_ch¨
;

34 
__u_sh‹t
 
	tu_sh‹t
;

35 
__u_öt
 
	tu_öt
;

36 
__u_l⁄g
 
	tu_l⁄g
;

37 
__quad_t
 
	tquad_t
;

38 
__u_quad_t
 
	tu_quad_t
;

39 
__fsid_t
 
	tfsid_t
;

40 
	#__u_ch¨_deföed


	)

42 
__loff_t
 
	tloff_t
;

45 #i‚de‡
__öo_t_deföed


46 #i‚de‡
__USE_FILE_OFFSET64


47 
__öo_t
 
	töo_t
;

49 
__öo64_t
 
	töo_t
;

51 
	#__öo_t_deföed


	)

53 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


54 
__öo64_t
 
	töo64_t
;

55 
	#__öo64_t_deföed


	)

58 #i‚de‡
__dev_t_deföed


59 
__dev_t
 
	tdev_t
;

60 
	#__dev_t_deföed


	)

63 #i‚de‡
__gid_t_deföed


64 
__gid_t
 
	tgid_t
;

65 
	#__gid_t_deföed


	)

68 #i‚de‡
__mode_t_deföed


69 
__mode_t
 
	tmode_t
;

70 
	#__mode_t_deföed


	)

73 #i‚de‡
__∆ök_t_deföed


74 
__∆ök_t
 
	t∆ök_t
;

75 
	#__∆ök_t_deföed


	)

78 #i‚de‡
__uid_t_deföed


79 
__uid_t
 
	tuid_t
;

80 
	#__uid_t_deföed


	)

83 #i‚de‡
__off_t_deföed


84 #i‚de‡
__USE_FILE_OFFSET64


85 
__off_t
 
	toff_t
;

87 
__off64_t
 
	toff_t
;

89 
	#__off_t_deföed


	)

91 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


92 
__off64_t
 
	toff64_t
;

93 
	#__off64_t_deföed


	)

96 #i‚de‡
__pid_t_deföed


97 
__pid_t
 
	tpid_t
;

98 
	#__pid_t_deföed


	)

101 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
) \

102 && !
deföed
 
__id_t_deföed


103 
__id_t
 
	tid_t
;

104 
	#__id_t_deföed


	)

107 #i‚de‡
__ssize_t_deföed


108 
__ssize_t
 
	tssize_t
;

109 
	#__ssize_t_deföed


	)

112 #ifdef 
__USE_MISC


113 #i‚de‡
__daddr_t_deföed


114 
__daddr_t
 
	tdaddr_t
;

115 
__ˇddr_t
 
	tˇddr_t
;

116 
	#__daddr_t_deföed


	)

120 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


121 
__key_t
 
	tkey_t
;

122 
	#__key_t_deföed


	)

125 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


126 
	~<bôs/ty≥s/˛ock_t.h
>

128 
	~<bôs/ty≥s/˛ockid_t.h
>

129 
	~<bôs/ty≥s/time_t.h
>

130 
	~<bôs/ty≥s/timî_t.h
>

132 #ifde‡
__USE_XOPEN


133 #i‚de‡
__u£c⁄ds_t_deföed


134 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

135 
	#__u£c⁄ds_t_deföed


	)

137 #i‚de‡
__su£c⁄ds_t_deföed


138 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

139 
	#__su£c⁄ds_t_deföed


	)

143 
	#__√ed_size_t


	)

144 
	~<°ddef.h
>

146 #ifde‡
__USE_MISC


148 
	tul⁄g
;

149 
	tush‹t
;

150 
	tuöt
;

155 
	~<bôs/°döt-öä.h
>

158 
__uöt8_t
 
	tu_öt8_t
;

159 
__uöt16_t
 
	tu_öt16_t
;

160 
__uöt32_t
 
	tu_öt32_t
;

161 
__uöt64_t
 
	tu_öt64_t
;

163 #i‡
__GNUC_PREREQ
 (2, 7)

164 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

166 
	tªgi°î_t
;

171 
	#__BIT_TYPES_DEFINED__
 1

	)

174 #ifdef 
__USE_MISC


176 
	~<ídün.h
>

179 
	~<sys/£À˘.h
>

183 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
) \

184 && !
deföed
 
__blksize_t_deföed


185 
__blksize_t
 
	tblksize_t
;

186 
	#__blksize_t_deföed


	)

190 #i‚de‡
__USE_FILE_OFFSET64


191 #i‚de‡
__blk˙t_t_deföed


192 
__blk˙t_t
 
	tblk˙t_t
;

193 
	#__blk˙t_t_deföed


	)

195 #i‚de‡
__fsblk˙t_t_deföed


196 
__fsblk˙t_t
 
	tfsblk˙t_t
;

197 
	#__fsblk˙t_t_deföed


	)

199 #i‚de‡
__fsfû˙t_t_deföed


200 
__fsfû˙t_t
 
	tfsfû˙t_t
;

201 
	#__fsfû˙t_t_deföed


	)

204 #i‚de‡
__blk˙t_t_deföed


205 
__blk˙t64_t
 
	tblk˙t_t
;

206 
	#__blk˙t_t_deföed


	)

208 #i‚de‡
__fsblk˙t_t_deföed


209 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

210 
	#__fsblk˙t_t_deföed


	)

212 #i‚de‡
__fsfû˙t_t_deföed


213 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

214 
	#__fsfû˙t_t_deföed


	)

218 #ifde‡
__USE_LARGEFILE64


219 
__blk˙t64_t
 
	tblk˙t64_t
;

220 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

221 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

226 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


227 
	~<bôs/±hªadty≥s.h
>

230 
	g__END_DECLS


	@/usr/include/time.h

22 #i‚def 
_TIME_H


23 
	#_TIME_H
 1

	)

25 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 
	#__√ed_NULL


	)

29 
	~<°ddef.h
>

33 
	~<bôs/time.h
>

37 
	~<bôs/ty≥s/˛ock_t.h
>

38 
	~<bôs/ty≥s/time_t.h
>

39 
	~<bôs/ty≥s/°ru˘_tm.h
>

41 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_ISOC11


42 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

45 #ifde‡
__USE_POSIX199309


46 
	~<bôs/ty≥s/˛ockid_t.h
>

47 
	~<bôs/ty≥s/timî_t.h
>

48 
	~<bôs/ty≥s/°ru˘_ôimî•ec.h
>

49 
	gsigevít
;

52 #ifde‡
__USE_XOPEN2K


53 #i‚de‡
__pid_t_deföed


54 
__pid_t
 
	tpid_t
;

55 
	#__pid_t_deföed


	)

59 #ifde‡
__USE_XOPEN2K8


60 
	~<bôs/ty≥s/loˇÀ_t.h
>

63 #ifde‡
__USE_ISOC11


65 
	#TIME_UTC
 1

	)

68 
__BEGIN_DECLS


72 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

74 #i‚de‡
__USE_TIME64_REDIRECTS


76 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

79 
	`dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
);

82 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

84 #ifde‡
__REDIRECT_NTH


85 
time_t
 
	`__REDIRECT_NTH
 (
time
, (time_à*
__timî
), 
__time64
);

86 
	`__REDIRECT_NTH
 (
dif·ime
, (
time_t
 
__time1
,Åime_à
__time0
),

87 
__dif·ime64
);

88 
time_t
 
	`__REDIRECT_NTH
 (
mktime
, (
tm
 *
__ç
), 
__mktime64
);

90 
	#time
 
__time64


	)

91 
	#dif·ime
 
__dif·ime64


	)

92 
	#mktime
 
__mktime64


	)

99 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

100 c⁄° *
__ª°ri˘
 
__f‹m©
,

101 c⁄° 
tm
 *
__ª°ri˘
 
__ç
)

102 
__THROW
 
	`__n⁄nuŒ
((1, 3, 4));

104 #ifde‡
__USE_XOPEN


107 *
	$°Ωtime
 (c⁄° *
__ª°ri˘
 
__s
,

108 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

109 
__THROW
;

112 #ifde‡
__USE_XOPEN2K8


116 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

117 c⁄° *
__ª°ri˘
 
__f‹m©
,

118 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

119 
loˇÀ_t
 
__loc
Ë
__THROW
;

122 #ifde‡
__USE_GNU


123 *
	$°Ωtime_l
 (c⁄° *
__ª°ri˘
 
__s
,

124 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

125 
loˇÀ_t
 
__loc
Ë
__THROW
;

129 #i‚de‡
__USE_TIME64_REDIRECTS


132 
tm
 *
	$gmtime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

136 
tm
 *
	$loˇ…ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

139 #ifde‡
__REDIRECT_NTH


140 
tm
*
	`__REDIRECT_NTH
 (
gmtime
, (c⁄° 
time_t
 *
__timî
), 
__gmtime64
);

141 
tm
 *
	`__REDIRECT_NTH
 (
loˇ…ime
, (c⁄° 
time_t
 *
__timî
),

142 
__loˇ…ime64
);

144 
	#gmtime
 
__gmtime64


	)

145 
	#loˇ…ime
 
__loˇ…ime64


	)

150 #i‡
deföed
 
__USE_POSIX
 || 
	`__GLIBC_USE
 (
ISOC23
)

151 #i‚de‡
__USE_TIME64_REDIRECTS


154 
tm
 *
	$gmtime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

155 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

159 
tm
 *
	$loˇ…ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

160 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

162 #ifde‡
__REDIRECT_NTH


163 
tm
*
	`__REDIRECT_NTH
 (
gmtime_r
, (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

164 
tm
 *
__ª°ri˘
 
__ç
),

165 
__gmtime64_r
);

167 
tm
*
	`__REDIRECT_NTH
 (
loˇ…ime_r
, (c⁄° 
time_t
 *
__ª°ri˘
 
__t
,

168 
tm
 *
__ª°ri˘
 
__ç
),

169 
__loˇ…ime64_r
);

171 
	#gmtime_r
 
__gmtime64_r


	)

172 
	#loˇ…ime_r
 
__loˇ…ime_r


	)

179 *
	$as˘ime
 (c⁄° 
tm
 *
__ç
Ë
__THROW
;

182 #i‚de‡
__USE_TIME64_REDIRECTS


183 *
	$˘ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

185 #ifde‡
__REDIRECT_NTH


186 *
	`__REDIRECT_NTH
 (
˘ime
, (c⁄° 
time_t
 *
__timî
), 
__˘ime64
);

188 
	#˘ime
 
__˘ime64


	)

192 #ifde‡
__USE_POSIX


197 *
	$as˘ime_r
 (c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

198 *
__ª°ri˘
 
__buf
Ë
__THROW
;

201 #i‚de‡
__USE_TIME64_REDIRECTS


202 *
	$˘ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

203 *
__ª°ri˘
 
__buf
Ë
__THROW
;

205 #ifde‡
__REDIRECT_NTH


206 *
	`__REDIRECT_NTH
 (
˘ime_r
, (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

207 *
__ª°ri˘
 
__buf
), 
__˘ime64_r
);

209 
	#˘ime_r
 
__˘ime64_r


	)

217 *
__tz«me
[2];

218 
__daylight
;

219 
__timez⁄e
;

222 #ifdef 
__USE_POSIX


224 *
tz«me
[2];

228 
	$tz£t
 (Ë
__THROW
;

231 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


232 
daylight
;

233 
timez⁄e
;

239 
	#__i¶óp
(
yór
) \

240 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

243 #i‡
deföed
 
__USE_MISC
 || 
	`__GLIBC_USE
 (
ISOC23
)

244 #i‚de‡
__USE_TIME64_REDIRECTS


246 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

248 #ifde‡
__REDIRECT_NTH


249 
time_t
 
	`__REDIRECT_NTH
 (
timegm
, (
tm
 *
__ç
), 
__timegm64
);

251 
	#timegm
 
__timegm64


	)

257 #ifde‡
__USE_MISC


261 #i‚de‡
__USE_TIME64_REDIRECTS


263 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

265 #ifde‡
__REDIRECT_NTH


266 
time_t
 
	`__REDIRECT_NTH
 (
timñoˇl
, (
tm
 *
__ç
), 
__mktime64
);

271 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

275 #ifde‡
__USE_POSIX199309


276 #i‚de‡
__USE_TIME64_REDIRECTS


281 
	`«no¶ìp
 (c⁄° 
time•ec
 *
__ªque°ed_time
,

282 
time•ec
 *
__ªmaöög
);

285 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

288 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
)

289 
__THROW
 
	`__n⁄nuŒ
((2));

292 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, c⁄° 
time•ec
 *
__ç
)

293 
__THROW
 
	`__n⁄nuŒ
((2));

295 #ifde‡
__REDIRECT


296 
	`__REDIRECT
 (
«no¶ìp
, (c⁄° 
time•ec
 *
__ªque°ed_time
,

297 
time•ec
 *
__ªmaöög
),

298 
__«no¶ìp64
);

299 
	`__REDIRECT_NTH
 (
˛ock_gëªs
, (
˛ockid_t
 
__˛ock_id
,

300 
time•ec
 *
__ªs
),

301 
__˛ock_gëªs64
);

302 
	`__REDIRECT_NTH
 (
˛ock_gëtime
, (
˛ockid_t
 
__˛ock_id
, 

303 
time•ec
 *
__ç
), 
__˛ock_gëtime64
)

304 
	`__n⁄nuŒ
((2));

305 
	`__REDIRECT_NTH
 (
˛ock_£âime
, (
˛ockid_t
 
__˛ock_id
, const 

306 
time•ec
 *
__ç
), 
__˛ock_£âime64
)

307 
	`__n⁄nuŒ
((2));

309 
	#«no¶ìp
 
__«no¶ìp64


	)

310 
	#˛ock_gëªs
 
__˛ock_gëªs64


	)

311 
	#˛ock_gëtime
 
__˛ock_gëtime64


	)

312 
	#˛ock_£âime
 
__˛ock_£âime64


	)

317 #ifde‡
__USE_XOPEN2K


322 #i‚de‡
__USE_TIME64_REDIRECTS


323 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

324 c⁄° 
time•ec
 *
__ªq
,

325 
time•ec
 *
__ªm
);

327 #ifde‡
__REDIRECT


328 
	`__REDIRECT
 (
˛ock_«no¶ìp
, (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

329 c⁄° 
time•ec
 *
__ªq
,

330 
time•ec
 *
__ªm
),

331 
__˛ock_«no¶ìp_time64
);

333 
	#˛ock_«no¶ìp
 
__˛ock_«no¶ìp_time64


	)

338 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

343 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

344 
sigevít
 *
__ª°ri˘
 
__evp
,

345 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

348 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

351 #i‚de‡
__USE_TIME64_REDIRECTS


352 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

353 c⁄° 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

354 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

357 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

358 
__THROW
;

360 #ifde‡
__REDIRECT_NTH


361 
	`__REDIRECT_NTH
 (
timî_£âime
, (
timî_t
 
__timîid
, 
__Êags
,

362 c⁄° 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

363 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
),

364 
__timî_£âime64
);

366 
	`__REDIRECT_NTH
 (
timî_gëtime
, (
timî_t
 
__timîid
,

367 
ôimî•ec
 *
__vÆue
),

368 
__timî_gëtime64
);

370 
	#timî_£âime
 
__timî_£âime64


	)

371 
	#timî_gëtime
 
__timî_gëtime64


	)

376 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

380 #ifde‡
__USE_ISOC11


381 #i‚de‡
__USE_TIME64_REDIRECTS


383 
	$time•ec_gë
 (
time•ec
 *
__ts
, 
__ba£
)

384 
__THROW
 
	`__n⁄nuŒ
 ((1));

386 #ifde‡
__REDIRECT_NTH


387 
	`__REDIRECT_NTH
 (
time•ec_gë
, (
time•ec
 *
__ts
, 
__ba£
),

388 
__time•ec_gë64
Ë
	`__n⁄nuŒ
 ((1));

390 
	#time•ec_gë
 
__time•ec_gë64


	)

396 #i‡
	`__GLIBC_USE
 (
ISOC23
)

397 #i‚de‡
__USE_TIME64_REDIRECTS


399 
	$time•ec_gëªs
 (
time•ec
 *
__ts
, 
__ba£
)

400 
__THROW
;

402 #ifde‡
__REDIRECT_NTH


403 
	`__REDIRECT_NTH
 (
time•ec_gëªs
, (
time•ec
 *
__ts
,

404 
__ba£
),

405 
__time•ec_gëªs64
);

407 
	#time•ec_gëªs
 
__time•ec_gëªs64


	)

413 #ifde‡
__USE_XOPEN_EXTENDED


425 
gëd©e_îr
;

434 
tm
 *
	`gëd©e
 (c⁄° *
__°rög
);

437 #ifde‡
__USE_GNU


448 
	`gëd©e_r
 (c⁄° *
__ª°ri˘
 
__°rög
,

449 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

452 
__END_DECLS


	@/usr/include/bits/cpu-set.h

20 #i‚de‡
_BITS_CPU_SET_H


21 
	#_BITS_CPU_SET_H
 1

	)

23 #i‚de‡
_SCHED_H


28 
	#__CPU_SETSIZE
 1024

	)

29 
	#__NCPUBITS
 (8 *  (
__˝u_mask
))

	)

32 
__CPU_MASK_TYPE
 
	t__˝u_mask
;

35 
	#__CPUELT
(
˝u
Ë((˝uË/ 
__NCPUBITS
)

	)

36 
	#__CPUMASK
(
˝u
Ë((
__˝u_mask
Ë1 << ((˝uË% 
__NCPUBITS
))

	)

41 
__˝u_mask
 
	m__bôs
[
__CPU_SETSIZE
 / 
__NCPUBITS
];

42 } 
	t˝u_£t_t
;

45 #i‡
__GNUC_PREREQ
 (2, 91)

46 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

47 dÿ
	`__buûtö_mem£t
 (
˝u£ç
, '\0', 
£tsize
); 0)

	)

49 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

51 
size_t
 
__i
; \

52 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

53 
__˝u_mask
 *
__bôs
 = (
˝u£ç
)->__bits; \

54 
__i
 = 0; __ò< 
__imax
; ++__i) \

55 
__bôs
[
__i
] = 0; \

56 } 0)

	)

58 
	#__CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

59 (
__exãnsi⁄__
 \

60 ({ 
size_t
 
__˝u
 = (
˝u
); \

61 
__˝u
 / 8 < (
£tsize
) \

62 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

63 |
	`__CPUMASK
 (
__˝u
)) \

64 : 0; }))

	)

65 
	#__CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

66 (
__exãnsi⁄__
 \

67 ({ 
size_t
 
__˝u
 = (
˝u
); \

68 
__˝u
 / 8 < (
£tsize
) \

69 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

70 &~
	`__CPUMASK
 (
__˝u
)) \

71 : 0; }))

	)

72 
	#__CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

73 (
__exãnsi⁄__
 \

74 ({ 
size_t
 
__˝u
 = (
˝u
); \

75 
__˝u
 / 8 < (
£tsize
) \

76 ? ((((c⁄° 
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

77 & 
	`__CPUMASK
 (
__˝u
))) != 0 \

78 : 0; }))

	)

80 
	#__CPU_COUNT_S
(
£tsize
, 
˝u£ç
) \

81 
	`__sched_˝ucou¡
 (
£tsize
, 
˝u£ç
)

	)

83 #i‡
__GNUC_PREREQ
 (2, 91)

84 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

85 (
	`__buûtö_memcmp
 (
˝u£ç1
, 
˝u£ç2
, 
£tsize
Ë=0)

	)

87 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

88 (
__exãnsi⁄__
 \

89 ({ c⁄° 
__˝u_mask
 *
__¨r1
 = (
˝u£ç1
)->
__bôs
; \

90 c⁄° 
__˝u_mask
 *
__¨r2
 = (
˝u£ç2
)->
__bôs
; \

91 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

92 
size_t
 
__i
; \

93 
__i
 = 0; __ò< 
__imax
; ++__i) \

94 i‡(
__¨r1
[
__i
] !
__¨r2
[__i]) \

96 
__i
 =
__imax
; }))

	)

99 
	#__CPU_OP_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, 
›
) \

100 (
__exãnsi⁄__
 \

101 ({ 
˝u_£t_t
 *
__de°
 = (
de°£t
); \

102 c⁄° 
__˝u_mask
 *
__¨r1
 = (
§c£t1
)->
__bôs
; \

103 c⁄° 
__˝u_mask
 *
__¨r2
 = (
§c£t2
)->
__bôs
; \

104 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

105 
size_t
 
__i
; \

106 
__i
 = 0; __ò< 
__imax
; ++__i) \

107 ((
__˝u_mask
 *Ë
__de°
->
__bôs
)[
__i
] = 
__¨r1
[__i] 
›
 
__¨r2
[__i]; \

108 
__de°
; }))

	)

110 
	#__CPU_ALLOC_SIZE
(
cou¡
) \

111 ((((
cou¡
Ë+ 
__NCPUBITS
 - 1Ë/ __NCPUBITSË*  (
__˝u_mask
))

	)

112 
	#__CPU_ALLOC
(
cou¡
Ë
	`__sched_˝uÆloc
 (cou¡)

	)

113 
	#__CPU_FREE
(
˝u£t
Ë
	`__sched_˝u‰ì
 (˝u£t)

	)

115 
__BEGIN_DECLS


117 
	$__sched_˝ucou¡
 (
size_t
 
__£tsize
, c⁄° 
˝u_£t_t
 *
__£ç
)

118 
__THROW
;

119 
˝u_£t_t
 *
	$__sched_˝uÆloc
 (
size_t
 
__cou¡
Ë
__THROW
 
__wur
;

120 
	$__sched_˝u‰ì
 (
˝u_£t_t
 *
__£t
Ë
__THROW
;

122 
__END_DECLS


	@/usr/include/bits/endianness.h

1 #i‚de‡
_BITS_ENDIANNESS_H


2 
	#_BITS_ENDIANNESS_H
 1

	)

4 #i‚de‡
_BITS_ENDIAN_H


9 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/floatn-common.h

20 #i‚de‡
_BITS_FLOATN_COMMON_H


21 
	#_BITS_FLOATN_COMMON_H


	)

23 
	~<„©uªs.h
>

24 
	~<bôs/l⁄g-doubÀ.h
>

34 
	#__HAVE_FLOAT16
 0

	)

35 
	#__HAVE_FLOAT32
 1

	)

36 
	#__HAVE_FLOAT64
 1

	)

37 
	#__HAVE_FLOAT32X
 1

	)

38 
	#__HAVE_FLOAT128X
 0

	)

52 
	#__HAVE_DISTINCT_FLOAT16
 
__HAVE_FLOAT16


	)

53 
	#__HAVE_DISTINCT_FLOAT32
 0

	)

54 
	#__HAVE_DISTINCT_FLOAT64
 0

	)

55 
	#__HAVE_DISTINCT_FLOAT32X
 0

	)

56 
	#__HAVE_DISTINCT_FLOAT64X
 0

	)

57 
	#__HAVE_DISTINCT_FLOAT128X
 
__HAVE_FLOAT128X


	)

63 
	#__HAVE_FLOAT128_UNLIKE_LDBL
 (
__HAVE_DISTINCT_FLOAT128
 \

64 && 
__LDBL_MANT_DIG__
 !113)

	)

69 #i‡
__GNUC_PREREQ
 (7, 0Ë&& !
deföed
 
__˝lu•lus


70 
	#__HAVE_FLOATN_NOT_TYPEDEF
 1

	)

72 
	#__HAVE_FLOATN_NOT_TYPEDEF
 0

	)

75 #i‚de‡
__ASSEMBLER__


80 #i‡
__HAVE_FLOAT16


81 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| (
deföed
 
__˝lu•lus
 && !__GNUC_PREREQ (13, 0))

83 
	#__f16
(
x
Ë((
_Flﬂt16
Ëx##
f
)

	)

85 
	#__f16
(
x
Ëx##
f16


	)

89 #i‡
__HAVE_FLOAT32


90 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| (
deföed
 
__˝lu•lus
 && !__GNUC_PREREQ (13, 0))

91 
	#__f32
(
x
Ëx##
f


	)

93 
	#__f32
(
x
Ëx##
f32


	)

97 #i‡
__HAVE_FLOAT64


98 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| (
deföed
 
__˝lu•lus
 && !__GNUC_PREREQ (13, 0))

99 #ifde‡
__NO_LONG_DOUBLE_MATH


100 
	#__f64
(
x
Ëx##
l


	)

102 
	#__f64
(
x
Ë
	)
x

105 
	#__f64
(
x
Ëx##
f64


	)

109 #i‡
__HAVE_FLOAT32X


110 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| (
deföed
 
__˝lu•lus
 && !__GNUC_PREREQ (13, 0))

111 
	#__f32x
(
x
Ë
	)
x

113 
	#__f32x
(
x
Ëx##
f32x


	)

117 #i‡
__HAVE_FLOAT64X


118 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| (
deföed
 
__˝lu•lus
 && !__GNUC_PREREQ (13, 0))

119 #i‡
__HAVE_FLOAT64X_LONG_DOUBLE


120 
	#__f64x
(
x
Ëx##
l


	)

122 
	#__f64x
(
x
Ë
	`__f128
 (x)

	)

125 
	#__f64x
(
x
Ëx##
f64x


	)

129 #i‡
__HAVE_FLOAT128X


130 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| (
deföed
 
__˝lu•lus
 && !__GNUC_PREREQ (13, 0))

133 
	#__f128x
(
x
Ëx##
f128x


	)

138 #i‡
__HAVE_FLOAT16


139 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| (
deföed
 
__˝lu•lus
 && !__GNUC_PREREQ (13, 0))

140 
_Com∂ex
 
	t__cÊﬂt16
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HC__
)));

141 
	#__CFLOAT16
 
__cÊﬂt16


	)

143 
	#__CFLOAT16
 
_Com∂ex
 
_Flﬂt16


	)

147 #i‡
__HAVE_FLOAT32


148 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| (
deföed
 
__˝lu•lus
 && !__GNUC_PREREQ (13, 0))

149 
	#__CFLOAT32
 
_Com∂ex
 

	)

151 
	#__CFLOAT32
 
_Com∂ex
 
_Flﬂt32


	)

155 #i‡
__HAVE_FLOAT64


156 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| (
deföed
 
__˝lu•lus
 && !__GNUC_PREREQ (13, 0))

157 #ifde‡
__NO_LONG_DOUBLE_MATH


158 
	#__CFLOAT64
 
_Com∂ex
 

	)

160 
	#__CFLOAT64
 
_Com∂ex
 

	)

163 
	#__CFLOAT64
 
_Com∂ex
 
_Flﬂt64


	)

167 #i‡
__HAVE_FLOAT32X


168 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| (
deföed
 
__˝lu•lus
 && !__GNUC_PREREQ (13, 0))

169 
	#__CFLOAT32X
 
_Com∂ex
 

	)

171 
	#__CFLOAT32X
 
_Com∂ex
 
_Flﬂt32x


	)

175 #i‡
__HAVE_FLOAT64X


176 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| (
deföed
 
__˝lu•lus
 && !__GNUC_PREREQ (13, 0))

177 #i‡
__HAVE_FLOAT64X_LONG_DOUBLE


178 
	#__CFLOAT64X
 
_Com∂ex
 

	)

180 
	#__CFLOAT64X
 
__CFLOAT128


	)

183 
	#__CFLOAT64X
 
_Com∂ex
 
_Flﬂt64x


	)

187 #i‡
__HAVE_FLOAT128X


188 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| (
deföed
 
__˝lu•lus
 && !__GNUC_PREREQ (13, 0))

191 
	#__CFLOAT128X
 
_Com∂ex
 
_Flﬂt128x


	)

196 #i‡
__HAVE_FLOAT16


198 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| (
deföed
 
__˝lu•lus
 && !__GNUC_PREREQ (13, 0))

199 
	t_Flﬂt16
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HF__
)));

202 #i‡!
__GNUC_PREREQ
 (7, 0)

203 
	#__buûtö_huge_vÆf16
(Ë((
_Flﬂt16
Ë
	`__buûtö_huge_vÆ
 ())

	)

204 
	#__buûtö_öff16
(Ë((
_Flﬂt16
Ë
	`__buûtö_öf
 ())

	)

205 
	#__buûtö_«nf16
(
x
Ë((
_Flﬂt16
Ë
	`__buûtö_«n
 (x))

	)

206 
	#__buûtö_«nsf16
(
x
Ë((
_Flﬂt16
Ë
	`__buûtö_«ns
 (x))

	)

211 #i‡
__HAVE_FLOAT32


213 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| (
deföed
 
__˝lu•lus
 && !__GNUC_PREREQ (13, 0))

214 
	t_Flﬂt32
;

217 #i‡!
__GNUC_PREREQ
 (7, 0)

218 
	#__buûtö_huge_vÆf32
(Ë(
	`__buûtö_huge_vÆf
 ())

	)

219 
	#__buûtö_öff32
(Ë(
	`__buûtö_öff
 ())

	)

220 
	#__buûtö_«nf32
(
x
Ë(
	`__buûtö_«nf
 (x))

	)

221 
	#__buûtö_«nsf32
(
x
Ë(
	`__buûtö_«nsf
 (x))

	)

226 #i‡
__HAVE_FLOAT64


235 #ifde‡
__NO_LONG_DOUBLE_MATH


237 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| (
deföed
 
__˝lu•lus
 && !__GNUC_PREREQ (13, 0))

238 
	t_Flﬂt64
;

241 #i‡!
__GNUC_PREREQ
 (7, 0)

242 
	#__buûtö_huge_vÆf64
(Ë(
	`__buûtö_huge_vÆl
 ())

	)

243 
	#__buûtö_öff64
(Ë(
	`__buûtö_öÊ
 ())

	)

244 
	#__buûtö_«nf64
(
x
Ë(
	`__buûtö_«∆
 (x))

	)

245 
	#__buûtö_«nsf64
(
x
Ë(
	`__buûtö_«n¶
 (x))

	)

250 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| (
deföed
 
__˝lu•lus
 && !__GNUC_PREREQ (13, 0))

251 
	t_Flﬂt64
;

254 #i‡!
__GNUC_PREREQ
 (7, 0)

255 
	#__buûtö_huge_vÆf64
(Ë(
	`__buûtö_huge_vÆ
 ())

	)

256 
	#__buûtö_öff64
(Ë(
	`__buûtö_öf
 ())

	)

257 
	#__buûtö_«nf64
(
x
Ë(
	`__buûtö_«n
 (x))

	)

258 
	#__buûtö_«nsf64
(
x
Ë(
	`__buûtö_«ns
 (x))

	)

265 #i‡
__HAVE_FLOAT32X


267 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| (
deföed
 
__˝lu•lus
 && !__GNUC_PREREQ (13, 0))

268 
	t_Flﬂt32x
;

271 #i‡!
__GNUC_PREREQ
 (7, 0)

272 
	#__buûtö_huge_vÆf32x
(Ë(
	`__buûtö_huge_vÆ
 ())

	)

273 
	#__buûtö_öff32x
(Ë(
	`__buûtö_öf
 ())

	)

274 
	#__buûtö_«nf32x
(
x
Ë(
	`__buûtö_«n
 (x))

	)

275 
	#__buûtö_«nsf32x
(
x
Ë(
	`__buûtö_«ns
 (x))

	)

280 #i‡
__HAVE_FLOAT64X


282 #i‡
__HAVE_FLOAT64X_LONG_DOUBLE


284 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| (
deföed
 
__˝lu•lus
 && !__GNUC_PREREQ (13, 0))

285 
	t_Flﬂt64x
;

288 #i‡!
__GNUC_PREREQ
 (7, 0)

289 
	#__buûtö_huge_vÆf64x
(Ë(
	`__buûtö_huge_vÆl
 ())

	)

290 
	#__buûtö_öff64x
(Ë(
	`__buûtö_öÊ
 ())

	)

291 
	#__buûtö_«nf64x
(
x
Ë(
	`__buûtö_«∆
 (x))

	)

292 
	#__buûtö_«nsf64x
(
x
Ë(
	`__buûtö_«n¶
 (x))

	)

297 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| (
deföed
 
__˝lu•lus
 && !__GNUC_PREREQ (13, 0))

298 
_Flﬂt128
 
	t_Flﬂt64x
;

301 #i‡!
__GNUC_PREREQ
 (7, 0)

302 
	#__buûtö_huge_vÆf64x
(Ë(
	`__buûtö_huge_vÆf128
 ())

	)

303 
	#__buûtö_öff64x
(Ë(
	`__buûtö_öff128
 ())

	)

304 
	#__buûtö_«nf64x
(
x
Ë(
	`__buûtö_«nf128
 (x))

	)

305 
	#__buûtö_«nsf64x
(
x
Ë(
	`__buûtö_«nsf128
 (x))

	)

312 #i‡
__HAVE_FLOAT128X


314 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| (
deföed
 
__˝lu•lus
 && !__GNUC_PREREQ (13, 0))

318 #i‡!
__GNUC_PREREQ
 (7, 0)

319 
	#__buûtö_huge_vÆf128x
(Ë((
_Flﬂt128x
Ë
	`__buûtö_huge_vÆ
 ())

	)

320 
	#__buûtö_öff128x
(Ë((
_Flﬂt128x
Ë
	`__buûtö_öf
 ())

	)

321 
	#__buûtö_«nf128x
(
x
Ë((
_Flﬂt128x
Ë
	`__buûtö_«n
 (x))

	)

322 
	#__buûtö_«nsf128x
(
x
Ë((
_Flﬂt128x
Ë
	`__buûtö_«ns
 (x))

	)

	@/usr/include/bits/getopt_core.h

20 #i‚de‡
_GETOPT_CORE_H


21 
	#_GETOPT_CORE_H
 1

	)

28 
__BEGIN_DECLS


36 *
›èrg
;

50 
›töd
;

55 
›ãº
;

59 
›t›t
;

91 
	$gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

92 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

94 
__END_DECLS


	@/usr/include/bits/pthread_stack_min.h

20 
	#PTHREAD_STACK_MIN
 16384

	)

	@/usr/include/bits/sched.h

20 #i‚de‡
_BITS_SCHED_H


21 
	#_BITS_SCHED_H
 1

	)

23 #i‚de‡
_SCHED_H


28 
	#SCHED_OTHER
 0

	)

29 
	#SCHED_FIFO
 1

	)

30 
	#SCHED_RR
 2

	)

31 #ifde‡
__USE_GNU


32 
	#SCHED_BATCH
 3

	)

33 
	#SCHED_ISO
 4

	)

34 
	#SCHED_IDLE
 5

	)

35 
	#SCHED_DEADLINE
 6

	)

37 
	#SCHED_RESET_ON_FORK
 0x40000000

	)

40 #ifde‡
__USE_GNU


42 
	#CSIGNAL
 0x000000f‡

	)

43 
	#CLONE_VM
 0x00000100

	)

44 
	#CLONE_FS
 0x00000200

	)

45 
	#CLONE_FILES
 0x00000400

	)

46 
	#CLONE_SIGHAND
 0x00000800

	)

47 
	#CLONE_PIDFD
 0x00001000

	)

49 
	#CLONE_PTRACE
 0x00002000

	)

50 
	#CLONE_VFORK
 0x00004000

	)

52 
	#CLONE_PARENT
 0x00008000

	)

54 
	#CLONE_THREAD
 0x00010000

	)

55 
	#CLONE_NEWNS
 0x00020000

	)

56 
	#CLONE_SYSVSEM
 0x00040000

	)

57 
	#CLONE_SETTLS
 0x00080000

	)

58 
	#CLONE_PARENT_SETTID
 0x00100000

	)

60 
	#CLONE_CHILD_CLEARTID
 0x00200000

	)

62 
	#CLONE_DETACHED
 0x00400000

	)

63 
	#CLONE_UNTRACED
 0x00800000

	)

65 
	#CLONE_CHILD_SETTID
 0x01000000

	)

67 
	#CLONE_NEWCGROUP
 0x02000000

	)

68 
	#CLONE_NEWUTS
 0x04000000

	)

69 
	#CLONE_NEWIPC
 0x08000000

	)

70 
	#CLONE_NEWUSER
 0x10000000

	)

71 
	#CLONE_NEWPID
 0x20000000

	)

72 
	#CLONE_NEWNET
 0x40000000

	)

73 
	#CLONE_IO
 0x80000000

	)

77 
	#CLONE_NEWTIME
 0x00000080

	)

80 
	~<bôs/ty≥s/°ru˘_sched_∑øm.h
>

82 
	g__BEGIN_DECLS


84 #ifde‡
__USE_GNU


86 
˛⁄e
 ((*
__‚
Ë(*
__¨g
), *
__chûd_°ack
,

87 
__Êags
, *
__¨g
, ...Ë
__THROW
;

90 
	$unsh¨e
 (
__Êags
Ë
__THROW
;

93 
	$sched_gë˝u
 (Ë
__THROW
;

96 
	$gë˝u
 (*, *Ë
__THROW
;

99 
	$£äs
 (
__fd
, 
__n°y≥
Ë
__THROW
;

102 
__END_DECLS


	@/usr/include/bits/select.h

18 #i‚de‡
_SYS_SELECT_H


25 
	#__FD_ZERO
(
s
) \

27 
__i
; \

28 
fd_£t
 *
__¨r
 = (
s
); \

29 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

30 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

31 } 0)

	)

32 
	#__FD_SET
(
d
, 
s
) \

33 ((Ë(
	`__FDS_BITS
 (
s
)[
	`__FD_ELT
(
d
)] |
	`__FD_MASK
(d)))

	)

34 
	#__FD_CLR
(
d
, 
s
) \

35 ((Ë(
	`__FDS_BITS
 (
s
)[
	`__FD_ELT
(
d
)] &~
	`__FD_MASK
(d)))

	)

36 
	#__FD_ISSET
(
d
, 
s
) \

37 ((
	`__FDS_BITS
 (
s
)[
	`__FD_ELT
 (
d
)] & 
	`__FD_MASK
 (d)Ë!0)

	)

	@/usr/include/bits/select2.h

19 #i‚de‡
_SYS_SELECT_H


23 
	~<bôs/£À˘-de˛.h
>

25 #unde‡
__FD_ELT


26 
	#__FD_ELT
(
d
) \

27 
__exãnsi⁄__
 \

28 ({ 
__d
 = (
d
); \

29 (
	`__buûtö_c⁄°™t_p
 (
__d
) \

30 ? (0 <
__d
 && __d < 
__FD_SETSIZE
 \

31 ? (
__d
 / 
__NFDBITS
) \

32 : 
	`__fdñt_w¨n
 (
__d
)) \

33 : 
	`__fdñt_chk
 (
__d
)); })

	)

	@/usr/include/bits/thread-shared-types.h

19 #i‚de‡
_THREAD_SHARED_TYPES_H


20 
	#_THREAD_SHARED_TYPES_H
 1

	)

44 
	~<bôs/±hªadty≥s-¨ch.h
>

46 
	~<bôs/©omic_wide_cou¡î.h
>

51 
	s__±hªad_öã∫Æ_li°


53 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

54 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

55 } 
	t__±hªad_li°_t
;

57 
	s__±hªad_öã∫Æ_¶i°


59 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

60 } 
	t__±hªad_¶i°_t
;

76 
	~<bôs/°ru˘_muãx.h
>

89 
	~<bôs/°ru˘_rwlock.h
>

94 
	s__±hªad_c⁄d_s


96 
__©omic_wide_cou¡î
 
	m__w£q
;

97 
__©omic_wide_cou¡î
 
	m__g1_°¨t
;

98 
	m__g_ªfs
[2] 
	m__LOCK_ALIGNMENT
;

99 
	m__g_size
[2];

100 
	m__g1_‹ig_size
;

101 
	m__wªfs
;

102 
	m__g_sig«ls
[2];

105 
	t__tss_t
;

106 
	t__thrd_t
;

110 
__d©a
 
	m__ONCE_ALIGNMENT
;

111 } 
	t__⁄˚_Êag
;

113 
	#__ONCE_FLAG_INIT
 { 0 }

	)

	@/usr/include/bits/time.h

23 #i‚de‡
_BITS_TIME_H


24 
	#_BITS_TIME_H
 1

	)

26 
	~<bôs/ty≥s.h
>

34 
	#CLOCKS_PER_SEC
 ((
__˛ock_t
Ë1000000)

	)

36 #i‡(!
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_POSIX
) \

37 && !
deföed
 
__USE_XOPEN2K


40 
__sysc⁄f
 ();

41 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

44 #ifde‡
__USE_POSIX199309


46 
	#CLOCK_REALTIME
 0

	)

48 
	#CLOCK_MONOTONIC
 1

	)

50 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

52 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

54 
	#CLOCK_MONOTONIC_RAW
 4

	)

56 
	#CLOCK_REALTIME_COARSE
 5

	)

58 
	#CLOCK_MONOTONIC_COARSE
 6

	)

60 
	#CLOCK_BOOTTIME
 7

	)

62 
	#CLOCK_REALTIME_ALARM
 8

	)

64 
	#CLOCK_BOOTTIME_ALARM
 9

	)

66 
	#CLOCK_TAI
 11

	)

69 
	#TIMER_ABSTIME
 1

	)

72 #ifde‡
__USE_GNU


73 
	~<bôs/timex.h
>

75 
__BEGIN_DECLS


78 
	$˛ock_adjtime
 (
__˛ockid_t
 
__˛ock_id
, 
timex
 *
__utx
Ë
__THROW
 
	`__n⁄nuŒ
((2));

80 #ifde‡
__USE_TIME64_REDIRECTS


81 #i‡
	`deföed
(
__REDIRECT_NTH
)

82 
	`__REDIRECT_NTH
 (
˛ock_adjtime
, (
__˛ockid_t
 
__˛ock_id
,

83 
timex
 *
__utx
),

84 
__˛ock_adjtime64
Ë
	`__n⁄nuŒ
((2));

86 
	#˛ock_adjtime
 
__˛ock_adjtime64


	)

90 
__END_DECLS


	@/usr/include/bits/time64.h

19 #i‚de‡
_BITS_TYPES_H


23 #i‚def 
_BITS_TIME64_H


24 
	#_BITS_TIME64_H
 1

	)

28 #i‡
__TIMESIZE
 == 64

30 
	#__TIME64_T_TYPE
 
__TIME_T_TYPE


	)

33 
	#__TIME64_T_TYPE
 
__SQUAD_TYPE


	)

	@/usr/include/bits/timesize.h

19 
	~<bôs/w‹dsize.h
>

21 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


23 
	#__TIMESIZE
 64

	)

26 
	#__TIMESIZE
 
__WORDSIZE


	)

	@/usr/include/bits/types/__locale_t.h

19 #i‚de‡
_BITS_TYPES___LOCALE_T_H


20 
	#_BITS_TYPES___LOCALE_T_H
 1

	)

27 
	s__loˇÀ_°ru˘


30 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

33 c⁄° *
	m__˘y≥_b
;

34 c⁄° *
	m__˘y≥_tﬁowî
;

35 c⁄° *
	m__˘y≥_touµî
;

38 c⁄° *
	m__«mes
[13];

41 
__loˇÀ_°ru˘
 *
	t__loˇÀ_t
;

	@/usr/include/bits/types/__mbstate_t.h

1 #i‚de‡
____mb°©e_t_deföed


2 
	#____mb°©e_t_deföed
 1

	)

8 #i‚de‡
__WINT_TYPE__


9 
	#__WINT_TYPE__
 

	)

15 
	m__cou¡
;

18 
__WINT_TYPE__
 
	m__wch
;

19 
	m__wchb
[4];

20 } 
	m__vÆue
;

21 } 
	t__mb°©e_t
;

	@/usr/include/bits/types/clock_t.h

1 #i‚de‡
__˛ock_t_deföed


2 
	#__˛ock_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

7 
__˛ock_t
 
	t˛ock_t
;

	@/usr/include/bits/types/clockid_t.h

1 #i‚de‡
__˛ockid_t_deföed


2 
	#__˛ockid_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

7 
__˛ockid_t
 
	t˛ockid_t
;

	@/usr/include/bits/types/sigset_t.h

1 #i‚de‡
__sig£t_t_deföed


2 
	#__sig£t_t_deföed
 1

	)

4 
	~<bôs/ty≥s/__sig£t_t.h
>

7 
__sig£t_t
 
	tsig£t_t
;

	@/usr/include/bits/types/struct_itimerspec.h

1 #i‚de‡
__ôimî•ec_deföed


2 
	#__ôimî•ec_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

5 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

8 
	sôimî•ec


10 
time•ec
 
	mô_öãrvÆ
;

11 
time•ec
 
	mô_vÆue
;

	@/usr/include/bits/types/struct_tm.h

1 #i‚de‡
__°ru˘_tm_deföed


2 
	#__°ru˘_tm_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

7 
	stm


9 
	mtm_£c
;

10 
	mtm_mö
;

11 
	mtm_hour
;

12 
	mtm_mday
;

13 
	mtm_m⁄
;

14 
	mtm_yór
;

15 
	mtm_wday
;

16 
	mtm_yday
;

17 
	mtm_isd°
;

19 #ifdef 
__USE_MISC


20 
	mtm_gmtoff
;

21 c⁄° *
	mtm_z⁄e
;

23 
	m__tm_gmtoff
;

24 c⁄° *
	m__tm_z⁄e
;

	@/usr/include/bits/types/timer_t.h

1 #i‚de‡
__timî_t_deföed


2 
	#__timî_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

7 
__timî_t
 
	ttimî_t
;

	@/usr/include/bits/typesizes.h

19 #i‚de‡
_BITS_TYPES_H


23 #i‚def 
_BITS_TYPESIZES_H


24 
	#_BITS_TYPESIZES_H
 1

	)

30 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


31 
	#__SYSCALL_SLONG_TYPE
 
__SQUAD_TYPE


	)

32 
	#__SYSCALL_ULONG_TYPE
 
__UQUAD_TYPE


	)

34 
	#__SYSCALL_SLONG_TYPE
 
__SLONGWORD_TYPE


	)

35 
	#__SYSCALL_ULONG_TYPE
 
__ULONGWORD_TYPE


	)

38 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

39 
	#__UID_T_TYPE
 
__U32_TYPE


	)

40 
	#__GID_T_TYPE
 
__U32_TYPE


	)

41 
	#__INO_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

42 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

43 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

44 #ifde‡
__x86_64__


45 
	#__NLINK_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

46 
	#__FSWORD_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

48 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

49 
	#__FSWORD_T_TYPE
 
__SWORD_TYPE


	)

51 
	#__OFF_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

52 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

53 
	#__PID_T_TYPE
 
__S32_TYPE


	)

54 
	#__RLIM_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

55 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

56 
	#__BLKCNT_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

57 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

58 
	#__FSBLKCNT_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

59 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

60 
	#__FSFILCNT_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

61 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

62 
	#__ID_T_TYPE
 
__U32_TYPE


	)

63 
	#__CLOCK_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

64 
	#__TIME_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

65 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

66 
	#__SUSECONDS_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

67 
	#__SUSECONDS64_T_TYPE
 
__SQUAD_TYPE


	)

68 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

69 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

70 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

71 
	#__TIMER_T_TYPE
 *

	)

72 
	#__BLKSIZE_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

73 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

74 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

75 
	#__CPU_MASK_TYPE
 
__SYSCALL_ULONG_TYPE


	)

77 #ifde‡
__x86_64__


81 
	#__OFF_T_MATCHES_OFF64_T
 1

	)

84 
	#__INO_T_MATCHES_INO64_T
 1

	)

87 
	#__RLIM_T_MATCHES_RLIM64_T
 1

	)

90 
	#__STATFS_MATCHES_STATFS64
 1

	)

93 
	#__KERNEL_OLD_TIMEVAL_MATCHES_TIMEVAL64
 1

	)

95 
	#__RLIM_T_MATCHES_RLIM64_T
 0

	)

97 
	#__STATFS_MATCHES_STATFS64
 0

	)

99 
	#__KERNEL_OLD_TIMEVAL_MATCHES_TIMEVAL64
 0

	)

103 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/bits/unistd-decl.h

19 #i‚de‡
_BITS_UNISTD_DECL_H


20 
	#_BITS_UNISTD_DECL_H
 1

	)

22 #i‚de‡
_UNISTD_H


26 
ssize_t
 
	$__ªad_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

27 
size_t
 
__buÊí
)

28 
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

29 
ssize_t
 
	`__REDIRECT_FORTIFY
 (
__ªad_Æüs
, (
__fd
, *
__buf
,

30 
size_t
 
__nbyãs
), 
ªad
)

31 
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

32 
ssize_t
 
	`__REDIRECT
 (
__ªad_chk_w¨n
,

33 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

34 
size_t
 
__buÊí
), 
__ªad_chk
)

35 
__wur
 
	`__w¨«âr
 ("read called with biggerÜengthÅhan size of "

38 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


39 
ssize_t
 
	$__¥ód_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

40 
__off_t
 
__off£t
, 
size_t
 
__bufsize
)

41 
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

42 
ssize_t
 
	$__¥ód64_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

43 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
)

44 
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

45 
ssize_t
 
	`__REDIRECT
 (
__¥ód_Æüs
,

46 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

47 
__off_t
 
__off£t
), 
¥ód
)

48 
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

49 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_Æüs
,

50 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

51 
__off64_t
 
__off£t
), 
¥ód64
)

52 
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

53 
ssize_t
 
	`__REDIRECT
 (
__¥ód_chk_w¨n
,

54 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

55 
__off_t
 
__off£t
, 
size_t
 
__bufsize
), 
__¥ód_chk
)

56 
__wur
 
	`__w¨«âr
 ("pread called with biggerÜengthÅhan size of "

58 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_chk_w¨n
,

59 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

60 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
),

61 
__¥ód64_chk
)

62 
__wur
 
	`__w¨«âr
 ("pread64 called with biggerÜengthÅhan size of "

66 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


67 
ssize_t
 
	$__ªadlök_chk
 (c⁄° *
__ª°ri˘
 
__∑th
,

68 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

69 
size_t
 
__buÊí
)

70 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

71 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_Æüs
,

72 (c⁄° *
__ª°ri˘
 
__∑th
,

73 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
), 
ªadlök
)

74 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

75 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_chk_w¨n
,

76 (c⁄° *
__ª°ri˘
 
__∑th
,

77 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

78 
size_t
 
__buÊí
), 
__ªadlök_chk
)

79 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
	`__w¨«âr
 ("readlink called with biggerÜength "

83 #ifde‡
__USE_ATFILE


84 
ssize_t
 
	$__ªadlök©_chk
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

85 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

86 
size_t
 
__buÊí
)

87 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 3, 4));

88 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_Æüs
,

89 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

90 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
),

91 
ªadlök©
)

92 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 3, 4));

93 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_chk_w¨n
,

94 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

95 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

96 
size_t
 
__buÊí
), 
__ªadlök©_chk
)

97 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
	`__w¨«âr
 ("readlinkat called with bigger "

102 *
	$__gëcwd_chk
 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
)

103 
__THROW
 
__wur
;

104 *
	`__REDIRECT_NTH
 (
__gëcwd_Æüs
,

105 (*
__buf
, 
size_t
 
__size
), 
gëcwd
Ë
__wur
;

106 *
	`__REDIRECT_NTH
 (
__gëcwd_chk_w¨n
,

107 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
),

108 
__gëcwd_chk
)

109 
__wur
 
	`__w¨«âr
 ("getcwd caller with biggerÜengthÅhan size of "

112 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


113 *
	$__gëwd_chk
 (*
__buf
, 
size_t
 
buÊí
)

114 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 2));

115 *
	`__REDIRECT_NTH
 (
__gëwd_w¨n
, (*
__buf
), 
gëwd
)

116 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("please use getcwd instead,ás getwd "

120 
size_t
 
	$__c⁄f°r_chk
 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

121 
size_t
 
__buÊí
Ë
__THROW


122 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

123 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_Æüs
, (
__«me
, *
__buf
,

124 
size_t
 
__Àn
), 
c⁄f°r
)

125 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

126 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_chk_w¨n
,

127 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

128 
size_t
 
__buÊí
), 
__c⁄f°r_chk
)

129 
	`__w¨«âr
 ("confstr called with biggerÜengthÅhan size of destination "

133 
	$__gëgroups_chk
 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
)

134 
__THROW
 
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 1));

135 
	`__REDIRECT_NTH
 (
__gëgroups_Æüs
, (
__size
, 
__gid_t
 
__li°
[]),

136 
gëgroups
Ë
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 1));

137 
	`__REDIRECT_NTH
 (
__gëgroups_chk_w¨n
,

138 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
),

139 
__gëgroups_chk
)

140 
__wur
 
	`__w¨«âr
 ("getgroups called with bigger group countÅhan what "

144 
	$__ây«me_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

145 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2))

146 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

147 
	`__REDIRECT_NTH
 (
__ây«me_r_Æüs
, (
__fd
, *
__buf
,

148 
size_t
 
__buÊí
), 
ây«me_r
)

149 
	`__n⁄nuŒ
 ((2));

150 
	`__REDIRECT_NTH
 (
__ây«me_r_chk_w¨n
,

151 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

152 
size_t
 
__ƒól
), 
__ây«me_r_chk
)

153 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ttyname_r called with bigger buflenÅhan "

157 #ifde‡
__USE_POSIX199506


158 
	$__gëlogö_r_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

159 
	`__n⁄nuŒ
 ((1)Ë
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 2));

160 
	`__REDIRECT_FORTIFY
 (
__gëlogö_r_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

161 
gëlogö_r
Ë
	`__n⁄nuŒ
 ((1));

162 
	`__REDIRECT
 (
__gëlogö_r_chk_w¨n
,

163 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

164 
__gëlogö_r_chk
)

165 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("getlogin_r called with bigger buflenÅhan "

170 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_UNIX98


171 
	$__gëho°«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

172 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 2));

173 
	`__REDIRECT_NTH
 (
__gëho°«me_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

174 
gëho°«me
)

175 
	`__n⁄nuŒ
 ((1)Ë
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 2));

176 
	`__REDIRECT_NTH
 (
__gëho°«me_chk_w¨n
,

177 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

178 
__gëho°«me_chk
)

179 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("gethostname called with bigger buflenÅhan "

184 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

185 
	$__gëdomaö«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

186 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 2));

187 
	`__REDIRECT_FORTIFY_NTH
 (
__gëdomaö«me_Æüs
, (*
__buf
,

188 
size_t
 
__buÊí
),

189 
gëdomaö«me
Ë
	`__n⁄nuŒ
 ((1))

190 
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 2));

191 
	`__REDIRECT_NTH
 (
__gëdomaö«me_chk_w¨n
,

192 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

193 
__gëdomaö«me_chk
)

194 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("getdomainname called with bigger "

	@/usr/include/endian.h

18 #i‚def 
_ENDIAN_H


19 
	#_ENDIAN_H
 1

	)

21 
	~<„©uªs.h
>

24 
	~<bôs/ídün.h
>

26 #ifde‡
__USE_MISC


27 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

28 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

29 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

30 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

33 #i‡
deföed
 
__USE_MISC
 && !deföed 
__ASSEMBLER__


35 
	~<bôs/byãsw≠.h
>

36 
	~<bôs/uöä-idítôy.h
>

38 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


39 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

40 
	#htﬁe16
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

41 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

42 
	#À16toh
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

44 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

45 
	#htﬁe32
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

46 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

47 
	#À32toh
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

49 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

50 
	#htﬁe64
(
x
Ë
	`__uöt64_idítôy
 (x)

	)

51 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

52 
	#À64toh
(
x
Ë
	`__uöt64_idítôy
 (x)

	)

55 
	#htobe16
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

56 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

57 
	#be16toh
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

58 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

60 
	#htobe32
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

61 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

62 
	#be32toh
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

63 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

65 
	#htobe64
(
x
Ë
	`__uöt64_idítôy
 (x)

	)

66 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

67 
	#be64toh
(
x
Ë
	`__uöt64_idítôy
 (x)

	)

68 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features-time64.h

20 
	~<bôs/w‹dsize.h
>

21 
	~<bôs/timesize.h
>

23 #i‡
deföed
 
_TIME_BITS


24 #i‡
_TIME_BITS
 == 64

25 #i‡! 
deföed
 (
_FILE_OFFSET_BITS
) || _FILE_OFFSET_BITS != 64

28 
	#__USE_TIME_BITS64
 1

	)

29 #ñi‡
_TIME_BITS
 == 32

30 #i‡
__TIMESIZE
 > 32

34 #îr‹ 
InvÆid
 
_TIME_BITS
 
vÆue
 (
ˇn
 
⁄ly
 
be
 32 
‹
 64-
bô
)

36 #ñi‡
__TIMESIZE
 == 64

37 
	#__USE_TIME_BITS64
 1

	)

40 #i‡
deföed
 
__USE_TIME_BITS64
 && 
__TIMESIZE
 == 32

41 
	#__USE_TIME64_REDIRECTS
 1

	)

	@/usr/include/gnu/stubs.h

6 #i‡!
deföed
 
__x86_64__


7 
	~<gnu/°ubs-32.h
>

9 #i‡
deföed
 
__x86_64__
 && deföed 
__LP64__


10 
	~<gnu/°ubs-64.h
>

12 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


13 
	~<gnu/°ubs-x32.h
>

	@/usr/include/linux/close_range.h

2 #i‚de‡
_LINUX_CLOSE_RANGE_H


3 
	#_LINUX_CLOSE_RANGE_H


	)

6 
	#CLOSE_RANGE_UNSHARE
 (1U << 1)

	)

9 
	#CLOSE_RANGE_CLOEXEC
 (1U << 2)

	)

	@/usr/include/linux/errno.h

1 
	~<asm/î∫o.h
>

	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

36 #ifde‡
__GCC_IEC_559


37 #i‡
__GCC_IEC_559
 > 0

38 
	#__STDC_IEC_559__
 1

	)

39 
	#__STDC_IEC_60559_BFP__
 201404L

	)

42 
	#__STDC_IEC_559__
 1

	)

43 
	#__STDC_IEC_60559_BFP__
 201404L

	)

46 #ifde‡
__GCC_IEC_559_COMPLEX


47 #i‡
__GCC_IEC_559_COMPLEX
 > 0

48 
	#__STDC_IEC_559_COMPLEX__
 1

	)

49 
	#__STDC_IEC_60559_COMPLEX__
 201404L

	)

52 
	#__STDC_IEC_559_COMPLEX__
 1

	)

53 
	#__STDC_IEC_60559_COMPLEX__
 201404L

	)

62 
	#__STDC_ISO_10646__
 201706L

	)

	@/usr/include/sys/cdefs.h

19 #i‚def 
_SYS_CDEFS_H


20 
	#_SYS_CDEFS_H
 1

	)

23 #i‚de‡
_FEATURES_H


24 
	~<„©uªs.h
>

30 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__
 && !deföed 
__˝lu•lus


35 #unde‡
__P


36 #unde‡
__PMT


42 #i‡(
deföed
 
__has_©åibuã
 \

43 && (!
deföed
 
	g__˛™g_mö‹__
 \

44 || 3 < 
	g__˛™g_maj‹__
 + (5 <
__˛™g_mö‹__
)))

45 
	#__glibc_has_©åibuã
(
©å
Ë
	`__has_©åibuã
 (©å)

	)

47 
	#__glibc_has_©åibuã
(
©å
Ë0

	)

49 #ifde‡
__has_buûtö


50 
	#__glibc_has_buûtö
(
«me
Ë
	`__has_buûtö
 («me)

	)

52 
	#__glibc_has_buûtö
(
«me
Ë0

	)

54 #ifde‡
__has_exãnsi⁄


55 
	#__glibc_has_exãnsi⁄
(
ext
Ë
	`__has_exãnsi⁄
 (ext)

	)

57 
	#__glibc_has_exãnsi⁄
(
ext
Ë0

	)

60 #i‡
deföed
 
__GNUC__
 || deföed 
__˛™g__


64 #i‡
__GNUC_PREREQ
 (4, 6Ë&& !
deföed
 
_LIBC


65 
	#__LEAF
 , 
__Àaf__


	)

66 
	#__LEAF_ATTR
 
	`__©åibuã__
 ((
__Àaf__
))

	)

68 
	#__LEAF


	)

69 
	#__LEAF_ATTR


	)

77 #i‡!
deföed
 
__˝lu•lus
 \

78 && (
__GNUC_PREREQ
 (3, 4Ë|| 
	$__glibc_has_©åibuã
 (
__nŸhrow__
))

79 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
))

	)

80 
	#__THROWNL
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

81 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
)Ë
	)
fct

82 
	#__NTHNL
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
)Ë
	)
fct

84 #i‡
deföed
 
__˝lu•lus
 && (
	`__GNUC_PREREQ
 (2,8Ë|| 
__˛™g_maj‹__
 >= 4)

85 #i‡
__˝lu•lus
 >= 201103L

86 
	#__THROW
 
	`n€x˚±
 (
åue
)

	)

88 
	#__THROW
 
	`throw
 ()

	)

90 
	#__THROWNL
 
__THROW


	)

91 
	#__NTH
(
f˘
Ë
__LEAF_ATTR
 f˘ 
__THROW


	)

92 
	#__NTHNL
(
f˘
Ëf˘ 
__THROW


	)

94 
	#__THROW


	)

95 
	#__THROWNL


	)

96 
	#__NTH
(
f˘
Ë
	)
fct

97 
	#__NTHNL
(
f˘
Ë
	)
fct

101 #i‡
	`__GNUC_PREREQ
 (4, 3Ë|| 
	`__glibc_has_©åibuã
 (
__cﬁd__
)

102 
	#__COLD
 
	`__©åibuã__
 ((
__cﬁd__
))

	)

104 
	#__COLD


	)

109 #i‡(
deföed
 
__˝lu•lus
 \

110 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

111 
	#__ölöe
 
ölöe


	)

113 
	#__ölöe


	)

116 
	#__THROW


	)

117 
	#__THROWNL


	)

118 
	#__NTH
(
f˘
Ë
	)
fct

119 
	#__COLD


	)

125 
	#__P
(
¨gs
Ë
	)
args

126 
	#__PMT
(
¨gs
Ë
	)
args

131 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

132 
	#__STRING
(
x
Ë#x

	)

135 
	#__±r_t
 *

	)

139 #ifdef 
__˝lu•lus


140 
	#__BEGIN_DECLS
 "C" {

	)

141 
	#__END_DECLS
 
	}

	)
}

143 
	#__BEGIN_DECLS


	)

144 
	#__END_DECLS


	)

149 #i‡
deföed
 
__˛™g_maj‹__
 \

150 && (
__˛™g_maj‹__
 + (
__˛™g_mö‹__
 >= 6) > 2)

151 
	#__©åibuã_ovîlﬂdabÀ__
 
	`__©åibuã__
((
__ovîlﬂdabÀ__
))

	)

153 
	#__©åibuã_ovîlﬂdabÀ__


	)

157 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

158 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

161 #i‡
__USE_FORTIFY_LEVEL
 =3 && (
__glibc_˛™g_¥îeq
 (9, 0) \

162 || 
	$__GNUC_PREREQ
 (12, 0))

163 
	#__glibc_objsize0
(
__o
Ë
	`__buûtö_dy«mic_obje˘_size
 (__o, 0)

	)

164 
	#__glibc_objsize
(
__o
Ë
	`__buûtö_dy«mic_obje˘_size
 (__o, 1)

	)

166 
	#__glibc_objsize0
(
__o
Ë
	`__bos0
 (__o)

	)

167 
	#__glibc_objsize
(
__o
Ë
	`__bos
 (__o)

	)

170 #i‡
__USE_FORTIFY_LEVEL
 > 0

175 
	#__glibc_ß„_Àn_c⁄d
(
__l
, 
__s
, 
__osz
Ë((__lË<(__oszË/ (__s))

	)

176 
	#__glibc_unsig√d_‹_posôive
(
__l
) \

177 ((
	`__ty≥of
 (
__l
)) 0 < (__typeof (__l)) -1 \

178 || (
	`__buûtö_c⁄°™t_p
 (
__l
Ë&& (__lË> 0))

	)

182 
	#__glibc_ß„_‹_unknown_Àn
(
__l
, 
__s
, 
__osz
) \

183 ((
	`__buûtö_c⁄°™t_p
 (
__osz
Ë&& (__oszË=(
__SIZE_TYPE__
) -1) \

184 || (
	`__glibc_unsig√d_‹_posôive
 (
__l
) \

185 && 
	`__buûtö_c⁄°™t_p
 (
	`__glibc_ß„_Àn_c⁄d
 ((
__SIZE_TYPE__
Ë(
__l
), \

186 (
__s
), (
__osz
))) \

187 && 
	`__glibc_ß„_Àn_c⁄d
 ((
__SIZE_TYPE__
Ë(
__l
), (
__s
), (
__osz
))))

	)

192 
	#__glibc_unß„_Àn
(
__l
, 
__s
, 
__osz
) \

193 (
	`__glibc_unsig√d_‹_posôive
 (
__l
) \

194 && 
	`__buûtö_c⁄°™t_p
 (
	`__glibc_ß„_Àn_c⁄d
 ((
__SIZE_TYPE__
Ë(
__l
), \

195 
__s
, 
__osz
)) \

196 && !
	`__glibc_ß„_Àn_c⁄d
 ((
__SIZE_TYPE__
Ë(
__l
), 
__s
, 
__osz
))

	)

218 #i‡
deföed
 
__˛™g_maj‹__
 && __clang_major__ >= 5

219 
	#__f‹tify_u£_˛™g
 1

	)

221 
	#__f‹tify_fun˘i⁄_îr‹_fun˘i⁄
 
	`__©åibuã__
((
__unu£d__
))

	)

223 
	#__f‹tify_˛™g_∑ss_obje˘_size_n
(
n
) \

224 
	`__©åibuã__
 ((
	`__∑ss_obje˘_size__
 (
n
)))

	)

225 
	#__f‹tify_˛™g_∑ss_obje˘_size0
 \

226 
	`__f‹tify_˛™g_∑ss_obje˘_size_n
 (0)

	)

227 
	#__f‹tify_˛™g_∑ss_obje˘_size
 \

228 
	`__f‹tify_˛™g_∑ss_obje˘_size_n
 (
__USE_FORTIFY_LEVEL
 > 1)

	)

230 #i‡
__˛™g_maj‹__
 >= 9

231 
	#__f‹tify_˛™g_∑ss_dy«mic_obje˘_size_n
(
n
) \

232 
	`__©åibuã__
 ((
	`__∑ss_dy«mic_obje˘_size__
 (
n
)))

	)

233 
	#__f‹tify_˛™g_∑ss_dy«mic_obje˘_size0
 \

234 
	`__f‹tify_˛™g_∑ss_dy«mic_obje˘_size_n
 (0)

	)

235 
	#__f‹tify_˛™g_∑ss_dy«mic_obje˘_size
 \

236 
	`__f‹tify_˛™g_∑ss_dy«mic_obje˘_size_n
 (1)

	)

238 
	#__f‹tify_˛™g_∑ss_dy«mic_obje˘_size_n
(
n
)

	)

239 
	#__f‹tify_˛™g_∑ss_dy«mic_obje˘_size0


	)

240 
	#__f‹tify_˛™g_∑ss_dy«mic_obje˘_size


	)

243 
	#__f‹tify_˛™g_bos_°©ic_…_im∂
(
bos_vÆ
, 
n
, 
s
) \

244 ((
bos_vÆ
Ë!-1ULL && (
n
Ë> (bos_vÆË/ (
s
))

	)

245 
	#__f‹tify_˛™g_bos_°©ic_…2
(
__n
, 
__e
, 
__s
) \

246 
	`__f‹tify_˛™g_bos_°©ic_…_im∂
 (
	`__bos
 (
__e
), 
__n
, 
__s
)

	)

247 
	#__f‹tify_˛™g_bos_°©ic_…
(
__n
, 
__e
) \

248 
	`__f‹tify_˛™g_bos_°©ic_…2
 (
__n
, 
__e
, 1)

	)

249 
	#__f‹tify_˛™g_bos0_°©ic_…2
(
__n
, 
__e
, 
__s
) \

250 
	`__f‹tify_˛™g_bos_°©ic_…_im∂
 (
	`__bos0
 (
__e
), 
__n
, 
__s
)

	)

251 
	#__f‹tify_˛™g_bos0_°©ic_…
(
__n
, 
__e
) \

252 
	`__f‹tify_˛™g_bos0_°©ic_…2
 (
__n
, 
__e
, 1)

	)

254 
	#__f‹tify_˛™g_bo¢_¨gs
(
bos_‚
, 
n
, 
buf
, 
div
, 
com∂aöt
) \

255 (
	`__f‹tify_˛™g_bos_°©ic_…_im∂
 (
	`bos_‚
 (
buf
), 
n
, 
div
)), (
com∂aöt
), \

256 "w¨nög"

	)

258 
	#__f‹tify_˛™g_w¨nög
(
__c
, 
__msg
) \

259 
	`__©åibuã__
 ((
	`__dügno£_if__
 ((
__c
), (
__msg
), "w¨nög")))

	)

260 
	#__f‹tify_˛™g_îr‹
(
__c
, 
__msg
) \

261 
	`__©åibuã__
 ((
	`__dügno£_if__
 ((
__c
), (
__msg
), "îr‹")))

	)

262 
	#__f‹tify_˛™g_w¨nög_⁄ly_if_bos0_…
(
n
, 
buf
, 
com∂aöt
) \

263 
	`__©åibuã__
 ((
__dügno£_if__
 \

264 (
	`__f‹tify_˛™g_bo¢_¨gs
 (
__bos0
, 
n
, 
buf
, 1, 
com∂aöt
))))

	)

265 
	#__f‹tify_˛™g_w¨nög_⁄ly_if_bos0_…2
(
n
, 
buf
, 
div
, 
com∂aöt
) \

266 
	`__©åibuã__
 ((
__dügno£_if__
 \

267 (
	`__f‹tify_˛™g_bo¢_¨gs
 (
__bos0
, 
n
, 
buf
, 
div
, 
com∂aöt
))))

	)

268 
	#__f‹tify_˛™g_w¨nög_⁄ly_if_bos_…
(
n
, 
buf
, 
com∂aöt
) \

269 
	`__©åibuã__
 ((
__dügno£_if__
 \

270 (
	`__f‹tify_˛™g_bo¢_¨gs
 (
__bos
, 
n
, 
buf
, 1, 
com∂aöt
))))

	)

271 
	#__f‹tify_˛™g_w¨nög_⁄ly_if_bos_…2
(
n
, 
buf
, 
div
, 
com∂aöt
) \

272 
	`__©åibuã__
 ((
__dügno£_if__
 \

273 (
	`__f‹tify_˛™g_bo¢_¨gs
 (
__bos
, 
n
, 
buf
, 
div
, 
com∂aöt
))))

	)

275 
	#__f‹tify_˛™g_¥e„r_this_ovîlﬂd
 \

276 
	`__©åibuã__
 ((
	`íabÀ_if
 (1, "")))

	)

277 
	#__f‹tify_˛™g_u«vaûabÀ
(
__msg
) \

278 
	`__©åibuã__
 ((
	`u«vaûabÀ
(
__msg
)))

	)

280 #i‡
__USE_FORTIFY_LEVEL
 == 3

281 
	#__f‹tify_˛™g_ovîlﬂd_¨g
(
__ty≥
, 
__©å
, 
__«me
) \

282 
__ty≥
 
__©å
 c⁄° 
__f‹tify_˛™g_∑ss_dy«mic_obje˘_size
 
__«me


	)

283 
	#__f‹tify_˛™g_ovîlﬂd_¨g0
(
__ty≥
, 
__©å
, 
__«me
) \

284 
__ty≥
 
__©å
 c⁄° 
__f‹tify_˛™g_∑ss_dy«mic_obje˘_size0
 
__«me


	)

286 
	#__f‹tify_˛™g_ovîlﬂd_¨g
(
__ty≥
, 
__©å
, 
__«me
) \

287 
__ty≥
 
__©å
 c⁄° 
__f‹tify_˛™g_∑ss_obje˘_size
 
__«me


	)

288 
	#__f‹tify_˛™g_ovîlﬂd_¨g0
(
__ty≥
, 
__©å
, 
__«me
) \

289 
__ty≥
 
__©å
 c⁄° 
__f‹tify_˛™g_∑ss_obje˘_size0
 
__«me


	)

292 
	#__f‹tify_˛™g_mul_may_ovîÊow
(
size
, 
n
) \

293 ((
size
 | 
n
Ë>(((
size_t
)1Ë<< (8 *  (size_tË/ 2)))

	)

295 
	#__f‹tify_˛™g_size_too_smÆl
(
__bos
, 
__de°
, 
__Àn
) \

296 (
	`__bos
 (
__de°
Ë!(
size_t
Ë-1 && __bo†(__de°Ë< 
__Àn
)

	)

297 
	#__f‹tify_˛™g_w¨n_if_§c_too_œrge
(
__de°
, 
__§c
) \

298 
	`__f‹tify_˛™g_w¨nög
 (
	`__f‹tify_˛™g_size_too_smÆl
 (
__glibc_objsize
, \

299 
__de°
, \

300 
	`__buûtö_°æí
 (
__§c
) + 1), \

301 "de°ö©i⁄ buf„∏wû»Æway†bêovîÊow¿by sour˚")

	)

302 
	#__f‹tify_˛™g_w¨n_if_de°_too_smÆl
(
__de°
, 
__Àn
) \

303 
	`__f‹tify_˛™g_w¨nög
 (
	`__f‹tify_˛™g_size_too_smÆl
 (
__glibc_objsize
, \

304 
__de°
, \

305 
__Àn
), \

306 "fun˘i⁄ cÆÀd wôh biggîÜígthÅh™Åhêde°ö©i⁄ buf„r")

	)

307 
	#__f‹tify_˛™g_w¨n_if_de°_too_smÆl0
(
__de°
, 
__Àn
) \

308 
	`__f‹tify_˛™g_w¨nög
 (
	`__f‹tify_˛™g_size_too_smÆl
 (
__glibc_objsize0
, \

309 
__de°
, \

310 
__Àn
), \

311 "fun˘i⁄ cÆÀd wôh biggîÜígthÅh™Åhêde°ö©i⁄ buf„r")

	)

313 
	#__f‹tify_u£_˛™g
 0

	)

314 
	#__f‹tify_˛™g_w¨nög
(
__c
, 
__msg
)

	)

315 
	#__f‹tify_˛™g_w¨nög_⁄ly_if_bos0_…
(
__n
, 
__buf
, 
__com∂aöt
)

	)

316 
	#__f‹tify_˛™g_w¨nög_⁄ly_if_bos0_…2
(
__n
, 
__buf
, 
__div
, 
com∂aöt
)

	)

317 
	#__f‹tify_˛™g_w¨nög_⁄ly_if_bos_…
(
__n
, 
__buf
, 
__com∂aöt
)

	)

318 
	#__f‹tify_˛™g_w¨nög_⁄ly_if_bos_…2
(
__n
, 
__buf
, 
div
, 
__com∂aöt
)

	)

319 
	#__f‹tify_˛™g_ovîlﬂd_¨g
(
__ty≥
, 
__©å
, 
__«me
) \

320 
__ty≥
 
__©å
 
__«me


	)

321 
	#__f‹tify_˛™g_ovîlﬂd_¨g0
(
__ty≥
, 
__©å
, 
__«me
) \

322 
	`__f‹tify_˛™g_ovîlﬂd_¨g
 (
__ty≥
, 
__©å
, 
__«me
)

	)

323 
	#__f‹tify_˛™g_w¨n_if_§c_too_œrge
(
__de°
, 
__§c
)

	)

324 
	#__f‹tify_˛™g_w¨n_if_de°_too_smÆl
(
__de°
, 
__Àn
)

	)

325 
	#__f‹tify_˛™g_w¨n_if_de°_too_smÆl0
(
__de°
, 
__Àn
)

	)

332 #i‡!
__f‹tify_u£_˛™g


333 
	#__glibc_f‹tify
(
f
, 
__l
, 
__s
, 
__osz
, ...) \

334 (
	`__glibc_ß„_‹_unknown_Àn
 (
__l
, 
__s
, 
__osz
) \

335 ? 
__
 ## 
f
 ## 
	`_Æüs
 (
__VA_ARGS__
) \

336 : (
	`__glibc_unß„_Àn
 (
__l
, 
__s
, 
__osz
) \

337 ? 
__
 ## 
f
 ## 
	`_chk_w¨n
 (
__VA_ARGS__
, 
__osz
) \

338 : 
__
 ## 
f
 ## 
	`_chk
 (
__VA_ARGS__
, 
__osz
)))

	)

340 
	#__glibc_f‹tify
(
f
, 
__l
, 
__s
, 
__osz
, ...) \

341 (
__osz
 =(
__SIZE_TYPE__
) -1) \

342 ? 
__
 ## 
f
 ## 
	`_Æüs
 (
__VA_ARGS__
) \

343 : 
__
 ## 
f
 ## 
	`_chk
 (
__VA_ARGS__
, 
__osz
)

	)

349 #i‡!
__f‹tify_u£_˛™g


350 
	#__glibc_f‹tify_n
(
f
, 
__l
, 
__s
, 
__osz
, ...) \

351 (
	`__glibc_ß„_‹_unknown_Àn
 (
__l
, 
__s
, 
__osz
) \

352 ? 
__
 ## 
f
 ## 
	`_Æüs
 (
__VA_ARGS__
) \

353 : (
	`__glibc_unß„_Àn
 (
__l
, 
__s
, 
__osz
) \

354 ? 
__
 ## 
f
 ## 
	`_chk_w¨n
 (
__VA_ARGS__
, (
__osz
Ë/ (
__s
)) \

355 : 
__
 ## 
f
 ## 
	`_chk
 (
__VA_ARGS__
, (
__osz
Ë/ (
__s
))))

	)

357 
	#__glibc_f‹tify_n
(
f
, 
__l
, 
__s
, 
__osz
, ...) \

358 (
__osz
 =(
__SIZE_TYPE__
) -1) \

359 ? 
__
 ## 
f
 ## 
	`_Æüs
 (
__VA_ARGS__
) \

360 : 
__
 ## 
f
 ## 
	`_chk
 (
__VA_ARGS__
, (
__osz
Ë/ (
__s
))

	)

365 #i‡
	`__GNUC_PREREQ
 (4,3)

366 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

367 
	#__îr‹de˛
(
«me
, 
msg
) \

368 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

370 
	#__w¨«âr
(
msg
)

	)

371 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

378 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >199901L && !deföed 
__HP_cc


379 
	#__Êex¨r
 []

	)

380 
	#__glibc_c99_Êex¨r_avaûabÀ
 1

	)

381 #ñi‡
	`__GNUC_PREREQ
 (2,97Ë|| 
deföed
 
__˛™g__


384 
	#__Êex¨r
 []

	)

385 
	#__glibc_c99_Êex¨r_avaûabÀ
 1

	)

386 #ñi‡
deföed
 
__GNUC__


389 
	#__Êex¨r
 [0]

	)

390 
	#__glibc_c99_Êex¨r_avaûabÀ
 1

	)

393 
	#__Êex¨r
 [1]

	)

394 
	#__glibc_c99_Êex¨r_avaûabÀ
 0

	)

408 #i‡(
deföed
 
__GNUC__
 && __GNUC__ >2Ë|| (
__˛™g_maj‹__
 >= 4)

410 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

411 #ifde‡
__˝lu•lus


412 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

413 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

414 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

415 
«me
 
¥Ÿo
 
__THROWNL
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

417 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

418 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

419 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

420 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROWNL


	)

422 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

423 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

425 #i‚de‡
__REDIRECT_FORTIFY


426 
	#__REDIRECT_FORTIFY
 
__REDIRECT


	)

429 #i‚de‡
__REDIRECT_FORTIFY_NTH


430 
	#__REDIRECT_FORTIFY_NTH
 
__REDIRECT_NTH


	)

444 #i‡!(
deföed
 
__GNUC__
 || deföed 
__˛™g__
)

445 
	#__©åibuã__
(
xyz
Ë

	)

451 #i‡
	`__GNUC_PREREQ
 (2,96Ë|| 
	`__glibc_has_©åibuã
 (
__mÆloc__
)

452 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

454 
	#__©åibuã_mÆloc__


	)

459 #i‡
	`__GNUC_PREREQ
 (4, 3)

460 
	#__©åibuã_Æloc_size__
(
∑øms
) \

461 
	`__©åibuã__
 ((
__Æloc_size__
 
∑øms
))

	)

463 
	#__©åibuã_Æloc_size__
(
∑øms
Ë

	)

468 #i‡
	`__GNUC_PREREQ
 (4, 9Ë|| 
	`__glibc_has_©åibuã
 (
__Æloc_Æign__
)

469 
	#__©åibuã_Æloc_Æign__
(
∑øm
) \

470 
	`__©åibuã__
 ((
__Æloc_Æign__
 
∑øm
))

	)

472 
	#__©åibuã_Æloc_Æign__
(
∑øm
Ë

	)

478 #i‡
	`__GNUC_PREREQ
 (2,96Ë|| 
	`__glibc_has_©åibuã
 (
__puª__
)

479 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

481 
	#__©åibuã_puª__


	)

485 #i‡
	`__GNUC_PREREQ
 (2,5Ë|| 
	`__glibc_has_©åibuã
 (
__c⁄°__
)

486 
	#__©åibuã_c⁄°__
 
	`__©åibuã__
 ((
__c⁄°__
))

	)

488 
	#__©åibuã_c⁄°__


	)

491 #i‡
	`__GNUC_PREREQ
 (2,7Ë|| 
	`__glibc_has_©åibuã
 (
__unu£d__
)

492 
	#__©åibuã_maybe_unu£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

494 
	#__©åibuã_maybe_unu£d__


	)

500 #i‡
	`__GNUC_PREREQ
 (3,1Ë|| 
	`__glibc_has_©åibuã
 (
__u£d__
)

501 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

502 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

504 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

505 
	#__©åibuã_noölöe__


	)

509 #i‡
	`__GNUC_PREREQ
 (3,2Ë|| 
	`__glibc_has_©åibuã
 (
__dïªˇãd__
)

510 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

512 
	#__©åibuã_dïªˇãd__


	)

518 #i‡
	`__GNUC_PREREQ
 (4,5) \

519 || 
	$__glibc_has_exãnsi⁄
 (
__©åibuã_dïªˇãd_wôh_mesßge__
)

520 
	#__©åibuã_dïªˇãd_msg__
(
msg
) \

521 
	`__©åibuã__
 ((
	`__dïªˇãd__
 (
msg
)))

	)

523 
	#__©åibuã_dïªˇãd_msg__
(
msg
Ë
__©åibuã_dïªˇãd__


	)

532 #i‡
	`__GNUC_PREREQ
 (2,8Ë|| 
	`__glibc_has_©åibuã
 (
__f‹m©_¨g__
)

533 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

535 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

542 #i‡
	`__GNUC_PREREQ
 (2,97Ë|| 
	`__glibc_has_©åibuã
 (
__f‹m©__
)

543 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

544 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

546 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

553 #i‚de‡
__©åibuã_n⁄nuŒ__


554 #i‡
	`__GNUC_PREREQ
 (3,3Ë|| 
	`__glibc_has_©åibuã
 (
__n⁄nuŒ__
)

555 
	#__©åibuã_n⁄nuŒ__
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

557 
	#__©åibuã_n⁄nuŒ__
(
∑øms
)

	)

560 #i‚de‡
__n⁄nuŒ


561 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã_n⁄nuŒ__
 (∑øms)

	)

566 #i‚de‡
__ªtu∫s_n⁄nuŒ


567 #i‡
	`__GNUC_PREREQ
 (4, 9Ë|| 
	`__glibc_has_©åibuã
 (
__ªtu∫s_n⁄nuŒ__
)

568 
	#__ªtu∫s_n⁄nuŒ
 
	`__©åibuã__
 ((
__ªtu∫s_n⁄nuŒ__
))

	)

570 
	#__ªtu∫s_n⁄nuŒ


	)

576 #i‡
	`__GNUC_PREREQ
 (3,4Ë|| 
	`__glibc_has_©åibuã
 (
__w¨n_unu£d_ªsu…__
)

577 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

578 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

579 #i‡
deföed
 
__USE_FORTIFY_LEVEL
 && __USE_FORTIFY_LEVEL > 0

580 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

583 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

585 #i‚de‡
__wur


586 
	#__wur


	)

590 #i‡
	`__GNUC_PREREQ
 (3,2Ë|| 
	`__glibc_has_©åibuã
 (
__Æways_ölöe__
)

594 #unde‡
__Æways_ölöe


595 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

597 #unde‡
__Æways_ölöe


598 
	#__Æways_ölöe
 
__ölöe


	)

603 #i‡
	`__GNUC_PREREQ
 (4,3Ë|| 
	`__glibc_has_©åibuã
 (
__¨tificül__
)

604 
	#__©åibuã_¨tificül__
 
	`__©åibuã__
 ((
__¨tificül__
))

	)

606 
	#__©åibuã_¨tificül__


	)

618 #i‡(!
deföed
 
__˝lu•lus
 || 
	`__GNUC_PREREQ
 (4,3) \

619 || (
deföed
 
__˛™g__
 && (deföed 
__GNUC_STDC_INLINE__
 \

620 || 
deföed
 
__GNUC_GNU_INLINE__
)))

621 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__˝lu•lus


622 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

623 
	#__exã∫_Æways_ölöe
 \

624 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

626 
	#__exã∫_ölöe
 
__ölöe


	)

627 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

631 #ifde‡
__exã∫_Æways_ölöe


632 
	#__f‹tify_fun˘i⁄
 
__exã∫_Æways_ölöe
 
__©åibuã_¨tificül__


	)

637 #i‡
	`__GNUC_PREREQ
 (4,3)

638 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

639 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

646 #i‡!(
	`__GNUC_PREREQ
 (2,8Ë|| 
deföed
 
__˛™g__
)

647 
	#__exãnsi⁄__


	)

653 #i‡!(
	`__GNUC_PREREQ
 (2,92Ë|| 
__˛™g_maj‹__
 >= 3)

654 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

655 
	#__ª°ri˘
 
ª°ri˘


	)

657 
	#__ª°ri˘


	)

665 #i‡(
	`__GNUC_PREREQ
 (3,1Ë|| 
__˛™g_maj‹__
 >3Ë&& !
deföed
 
__˝lu•lus


666 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

668 #ifde‡
__GNUC__


669 
	#__ª°ri˘_¨r


	)

671 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

672 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

675 
	#__ª°ri˘_¨r


	)

680 #i‡(
__GNUC__
 >3Ë|| 
	`__glibc_has_buûtö
 (
__buûtö_ex≥˘
)

681 
	#__glibc_u∆ikñy
(
c⁄d
Ë
	`__buûtö_ex≥˘
 ((c⁄d), 0)

	)

682 
	#__glibc_likñy
(
c⁄d
Ë
	`__buûtö_ex≥˘
 ((c⁄d), 1)

	)

684 
	#__glibc_u∆ikñy
(
c⁄d
Ë(c⁄d)

	)

685 
	#__glibc_likñy
(
c⁄d
Ë(c⁄d)

	)

688 #i‡(!
deföed
 
_N‹ëu∫
 \

689 && (
deföed
 
__STDC_VERSION__
 ? __STDC_VERSION__ : 0) < 201112 \

690 && !(
	`__GNUC_PREREQ
 (4,7) \

691 || (3 < 
__˛™g_maj‹__
 + (5 <
__˛™g_mö‹__
))))

692 #i‡
	`__GNUC_PREREQ
 (2,8)

693 
	#_N‹ëu∫
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

	)

695 
	#_N‹ëu∫


	)

699 #i‡
	`__GNUC_PREREQ
 (8, 0)

703 
	#__©åibuã_n⁄°rög__
 
	`__©åibuã__
 ((
__n⁄°rög__
))

	)

705 
	#__©åibuã_n⁄°rög__


	)

709 #unde‡
__©åibuã_c›y__


710 #i‡
	`__GNUC_PREREQ
 (9, 0)

713 
	#__©åibuã_c›y__
(
¨g
Ë
	`__©åibuã__
 ((
	`__c›y__
 (¨g)))

	)

715 
	#__©åibuã_c›y__
(
¨g
)

	)

718 #i‡(!
deföed
 
_Sètic_as£π
 && !deföed 
__˝lu•lus
 \

719 && (
deföed
 
__STDC_VERSION__
 ? __STDC_VERSION__ : 0) < 201112 \

720 && (!(
	`__GNUC_PREREQ
 (4, 6Ë|| 
__˛™g_maj‹__
 >= 4) \

721 || 
deföed
 
__STRICT_ANSI__
))

722 
	#_Sètic_as£π
(
ex¥
, 
dügno°ic
) \

723 (*
	`__Sètic_as£π_fun˘i⁄
 ()) \

724 [!! (°ru˘ { 
__îr‹_if_√g©ive
: (
ex¥
Ë? 2 : -1; })]

	)

729 #i‚de‡
__GNULIB_CDEFS


730 
	~<bôs/w‹dsize.h
>

731 
	~<bôs/l⁄g-doubÀ.h
>

734 #i‡
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 1

735 #ifde‡
__REDIRECT


738 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë... 
unu£d__ldbl_ªdú


	)

739 
	#__LDBL_REDIR_DECL
(
«me
) \

740 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__" #«mê"õì128"));

	)

741 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

742 
«me
 
¥Ÿo
 
	`__asm
 (
	`__ASMNAME
 ("__" #Æü†"õì128"))

	)

745 
	#__LDBL_REDIR2_DECL
(
«me
) \

746 
	`__ty≥of
 (
__
##
«me
) __##name \

747 
	`__asm
 (
	`__ASMNAME
 ("__" #«mê"õì128"));

	)

750 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë... 
unu£d__ldbl_ªdú1


	)

751 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

752 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

754 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

755 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

756 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

757 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__
##
Æüs
##
õì128
)

	)

760 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë... 
unu£d__ldbl_ªdú_¡h


	)

763 
	`_Sètic_as£π
 (0, "IEEE 128-bitsÜong doubleÑequiresÑedirection onÅhisÖlatform");

765 #ñi‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


766 
	#__LDBL_COMPAT
 1

	)

767 #ifde‡
__REDIRECT


768 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

769 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

770 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

771 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

772 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

773 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

774 
	#__LDBL_REDIR2_DECL
(
«me
) \

775 
	`__ty≥of
 (
__
##
«me
Ë__##«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl___" #«me));

	)

776 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

777 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

778 
	#__LDBL_REDIR_DECL
(
«me
) \

779 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

780 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

781 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

782 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

783 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

786 #i‡(!
deföed
 
__LDBL_COMPAT
 && 
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 0) \

787 || !
deföed
 
__REDIRECT


788 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

789 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

790 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

791 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

792 
	#__LDBL_REDIR2_DECL
(
«me
)

	)

793 
	#__LDBL_REDIR_DECL
(
«me
)

	)

794 #ifde‡
__REDIRECT


795 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

796 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

797 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

806 #i‡
	`__GNUC_PREREQ
 (4,8Ë|| 
	`__glibc_˛™g_¥îeq
 (3,5)

807 
	#__glibc_ma¸o_w¨nög1
(
mesßge
Ë
	`_Pøgma
 (#mesßge)

	)

808 
	#__glibc_ma¸o_w¨nög
(
mesßge
) \

809 
	`__glibc_ma¸o_w¨nög1
 (
GCC
 
w¨nög
 
mesßge
)

	)

811 
	#__glibc_ma¸o_w¨nög
(
msg
)

	)

821 #i‡!
deföed
 
__˝lu•lus
 \

822 && (
	`__GNUC_PREREQ
 (4, 9) \

823 || 
	`__glibc_has_exãnsi⁄
 (
c_gíîic_£À˘i⁄s
) \

824 || (!
deföed
 
__GNUC__
 && deföed 
__STDC_VERSION__
 \

825 && 
__STDC_VERSION__
 >= 201112L))

826 
	#__HAVE_GENERIC_SELECTION
 1

	)

828 
	#__HAVE_GENERIC_SELECTION
 0

	)

831 #i‡
	`__GNUC_PREREQ
 (10, 0)

837 
	#__©å_ac˚ss
(
x
Ë
	`__©åibuã__
 ((
__ac˚ss__
 x))

	)

842 #i‡
__USE_FORTIFY_LEVEL
 == 3

843 
	#__f‹tifõd_©å_ac˚ss
(
a
, 
o
, 
s
)

	)

845 
	#__f‹tifõd_©å_ac˚ss
(
a
, 
o
, 
s
Ë
	`__©å_ac˚ss
 (◊, o, s))

	)

847 #i‡
	`__GNUC_PREREQ
 (11, 0)

848 
	#__©å_ac˚ss_n⁄e
(
¨gno
Ë
	`__©åibuã__
 ((
	`__ac˚ss__
 (
__n⁄e__
,árgno)))

	)

850 
	#__©å_ac˚ss_n⁄e
(
¨gno
)

	)

853 
	#__f‹tifõd_©å_ac˚ss
(
a
, 
o
, 
s
)

	)

854 
	#__©å_ac˚ss
(
x
)

	)

855 
	#__©å_ac˚ss_n⁄e
(
¨gno
)

	)

858 #i‡
	`__GNUC_PREREQ
 (11, 0)

861 
	#__©å_dóŒoc
(
dóŒoc
, 
¨gno
) \

862 
	`__©åibuã__
 ((
	`__mÆloc__
 (
dóŒoc
, 
¨gno
)))

	)

863 
	#__©å_dóŒoc_‰ì
 
	`__©å_dóŒoc
 (
__buûtö_‰ì
, 1)

	)

865 
	#__©å_dóŒoc
(
dóŒoc
, 
¨gno
)

	)

866 
	#__©å_dóŒoc_‰ì


	)

871 #i‡
	`__GNUC_PREREQ
 (4, 1)

872 
	#__©åibuã_ªtu∫s_twi˚__
 
	`__©åibuã__
 ((
__ªtu∫s_twi˚__
))

	)

874 
	#__©åibuã_ªtu∫s_twi˚__


	)

880 #i‡
	`__GNUC_PREREQ
 (7, 1Ë|| 
deföed
 
__˛™g__


881 
	#__©åibuã_°ru˘_may_Æüs__
 
	`__©åibuã__
 ((
__may_Æüs__
))

	)

883 
	#__©åibuã_°ru˘_may_Æüs__


	)

	@/usr/include/asm/errno.h

1 
	~<asm-gíîic/î∫o.h
>

	@/usr/include/bits/atomic_wide_counter.h

19 #i‚de‡
_BITS_ATOMIC_WIDE_COUNTER_H


20 
	#_BITS_ATOMIC_WIDE_COUNTER_H


	)

27 
__exãnsi⁄__
 
	m__vÆue64
;

30 
	m__low
;

31 
	m__high
;

32 } 
	m__vÆue32
;

33 } 
	t__©omic_wide_cou¡î
;

	@/usr/include/bits/byteswap.h

19 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


23 #i‚de‡
_BITS_BYTESWAP_H


24 
	#_BITS_BYTESWAP_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

30 
	#__bsw≠_c⁄°™t_16
(
x
) \

31 ((
__uöt16_t
Ë((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8)))

	)

33 
__ölöe
 
__uöt16_t


34 
	$__bsw≠_16
 (
__uöt16_t
 
__bsx
)

36 #i‡
	`__GNUC_PREREQ
 (4, 8)

37  
	`__buûtö_bsw≠16
 (
__bsx
);

39  
	`__bsw≠_c⁄°™t_16
 (
__bsx
);

41 
	}
}

44 
	#__bsw≠_c⁄°™t_32
(
x
) \

45 ((((
x
) & 0xff000000u) >> 24) | (((x) & 0x00ff0000u) >> 8) \

46 | (((
x
Ë& 0x0000ff00uË<< 8Ë| (((xË& 0x000000ffuË<< 24))

	)

48 
__ölöe
 
__uöt32_t


49 
	$__bsw≠_32
 (
__uöt32_t
 
__bsx
)

51 #i‡
	`__GNUC_PREREQ
 (4, 3)

52  
	`__buûtö_bsw≠32
 (
__bsx
);

54  
	`__bsw≠_c⁄°™t_32
 (
__bsx
);

56 
	}
}

59 
	#__bsw≠_c⁄°™t_64
(
x
) \

60 ((((
x
) & 0xff00000000000000ull) >> 56) \

61 | (((
x
) & 0x00ff000000000000ull) >> 40) \

62 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

63 | (((
x
) & 0x000000ff00000000ull) >> 8) \

64 | (((
x
) & 0x00000000ff000000ull) << 8) \

65 | (((
x
) & 0x0000000000ff0000ull) << 24) \

66 | (((
x
) & 0x000000000000ff00ull) << 40) \

67 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

69 
__exãnsi⁄__
 
__ölöe
 
__uöt64_t


70 
	$__bsw≠_64
 (
__uöt64_t
 
__bsx
)

72 #i‡
	`__GNUC_PREREQ
 (4, 3)

73  
	`__buûtö_bsw≠64
 (
__bsx
);

75  
	`__bsw≠_c⁄°™t_64
 (
__bsx
);

77 
	}
}

	@/usr/include/bits/long-double.h

21 
	#__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 0

	)

	@/usr/include/bits/pthreadtypes-arch.h

18 #i‚de‡
_BITS_PTHREADTYPES_ARCH_H


19 
	#_BITS_PTHREADTYPES_ARCH_H
 1

	)

21 
	~<bôs/w‹dsize.h
>

23 #ifde‡
__x86_64__


24 #i‡
__WORDSIZE
 == 64

25 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

26 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

27 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

28 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

30 
	#__SIZEOF_PTHREAD_MUTEX_T
 32

	)

31 
	#__SIZEOF_PTHREAD_ATTR_T
 32

	)

32 
	#__SIZEOF_PTHREAD_RWLOCK_T
 44

	)

33 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

36 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

37 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

38 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

39 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

41 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

42 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

43 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

44 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

45 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

47 
	#__LOCK_ALIGNMENT


	)

48 
	#__ONCE_ALIGNMENT


	)

50 #i‚de‡
__x86_64__


52 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/select-decl.h

19 #i‚de‡
_BITS_SELECT_DECL_H


20 
	#_BITS_SELECT_DECL_H
 1

	)

22 #i‚de‡
_SYS_SELECT_H


27 
__fdñt_chk
 (
__d
);

28 
	$__fdñt_w¨n
 (
__d
)

29 
	`__w¨«âr
 ("bit outside of fd_set selected");

	@/usr/include/bits/struct_mutex.h

19 #i‚de‡
_THREAD_MUTEX_INTERNAL_H


20 
	#_THREAD_MUTEX_INTERNAL_H
 1

	)

22 
	s__±hªad_muãx_s


24 
	m__lock
;

25 
	m__cou¡
;

26 
	m__ow√r
;

27 #ifde‡
__x86_64__


28 
	m__nu£rs
;

32 
	m__köd
;

33 #ifde‡
__x86_64__


34 
	m__•ös
;

35 
	m__ñisi⁄
;

36 
__±hªad_li°_t
 
	m__li°
;

37 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

39 
	m__nu£rs
;

40 
__exãnsi⁄__
 union

44 
	m__e•ös
;

45 
	m__ìlisi⁄
;

46 
	#__•ös
 
__ñisi⁄_d©a
.
__e•ös


	)

47 
	#__ñisi⁄
 
__ñisi⁄_d©a
.
__ìlisi⁄


	)

48 } 
	m__ñisi⁄_d©a
;

49 
__±hªad_¶i°_t
 
	m__li°
;

51 
	#__PTHREAD_MUTEX_HAVE_PREV
 0

	)

55 #ifde‡
__x86_64__


56 
	#__PTHREAD_MUTEX_INITIALIZER
(
__köd
) \

57 0, 0, 0, 0, 
__köd
, 0, 0, { 0, 0 }

	)

59 
	#__PTHREAD_MUTEX_INITIALIZER
(
__köd
) \

60 0, 0, 0, 
__köd
, 0, { { 0, 0 } }

	)

	@/usr/include/bits/struct_rwlock.h

20 #i‚de‡
_RWLOCK_INTERNAL_H


21 
	#_RWLOCK_INTERNAL_H


	)

23 
	s__±hªad_rwlock_¨ch_t


25 
	m__ªadîs
;

26 
	m__wrôîs
;

27 
	m__wΩha£_fuãx
;

28 
	m__wrôîs_fuãx
;

29 
	m__∑d3
;

30 
	m__∑d4
;

31 #ifde‡
__x86_64__


32 
	m__cur_wrôî
;

33 
	m__sh¨ed
;

34 sig√d 
	m__rwñisi⁄
;

35 #ifde‡ 
__ILP32__


36 
	m__∑d1
[3];

37 
	#__PTHREAD_RWLOCK_ELISION_EXTRA
 0, { 0, 0, 0 }

	)

39 
	m__∑d1
[7];

40 
	#__PTHREAD_RWLOCK_ELISION_EXTRA
 0, { 0, 0, 0, 0, 0, 0, 0 }

	)

42 
	m__∑d2
;

45 
	m__Êags
;

49 
	m__Êags
;

50 
	m__sh¨ed
;

51 sig√d 
	m__rwñisi⁄
;

52 
	m__∑d2
;

53 
	m__cur_wrôî
;

57 #ifde‡
__x86_64__


58 
	#__PTHREAD_RWLOCK_INITIALIZER
(
__Êags
) \

59 0, 0, 0, 0, 0, 0, 0, 0, 
__PTHREAD_RWLOCK_ELISION_EXTRA
, 0, 
__Êags


	)

61 
	#__PTHREAD_RWLOCK_INITIALIZER
(
__Êags
) \

62 0, 0, 0, 0, 0, 0, 
__Êags
, 0, 0, 0, 0

	)

	@/usr/include/bits/timex.h

18 #i‚def 
_BITS_TIMEX_H


19 
	#_BITS_TIMEX_H
 1

	)

21 
	~<bôs/ty≥s.h
>

22 
	~<bôs/ty≥s/°ru˘_timevÆ.h
>

26 
	stimex


28 #i‡
deföed
 
__USE_TIME64_REDIRECTS
 || (
__TIMESIZE
 =64 && 
__WORDSIZE
 == 32)

29 
	mmodes
;

31 
	moff£t
;

32 
	m‰eq
;

33 
	mmaxîr‹
;

34 
	me°îr‹
;

35 
	m°©us
;

37 
	mc⁄°™t
;

38 
	m¥ecisi⁄
;

39 
	mtﬁî™˚
;

40 
timevÆ
 
	mtime
;

41 
	mtick
;

42 
	mµs‰eq
;

43 
	mjôãr
;

44 
	mshi·
;

46 
	m°abû
;

47 
	mjô˙t
;

48 
	mˇl˙t
;

49 
	mîr˙t
;

50 
	m°b˙t
;

52 
	mèi
;

58 
	mmodes
;

59 
__sysˇŒ_¶⁄g_t
 
	moff£t
;

60 
__sysˇŒ_¶⁄g_t
 
	m‰eq
;

61 
__sysˇŒ_¶⁄g_t
 
	mmaxîr‹
;

62 
__sysˇŒ_¶⁄g_t
 
	me°îr‹
;

63 
	m°©us
;

64 
__sysˇŒ_¶⁄g_t
 
	mc⁄°™t
;

65 
__sysˇŒ_¶⁄g_t
 
	m¥ecisi⁄
;

66 
__sysˇŒ_¶⁄g_t
 
	mtﬁî™˚
;

67 
timevÆ
 
	mtime
;

68 
__sysˇŒ_¶⁄g_t
 
	mtick
;

69 
__sysˇŒ_¶⁄g_t
 
	mµs‰eq
;

70 
__sysˇŒ_¶⁄g_t
 
	mjôãr
;

71 
	mshi·
;

72 
__sysˇŒ_¶⁄g_t
 
	m°abû
;

73 
__sysˇŒ_¶⁄g_t
 
	mjô˙t
;

74 
__sysˇŒ_¶⁄g_t
 
	mˇl˙t
;

75 
__sysˇŒ_¶⁄g_t
 
	mîr˙t
;

76 
__sysˇŒ_¶⁄g_t
 
	m°b˙t
;

78 
	mèi
;

88 
	#ADJ_OFFSET
 0x0001

	)

89 
	#ADJ_FREQUENCY
 0x0002

	)

90 
	#ADJ_MAXERROR
 0x0004

	)

91 
	#ADJ_ESTERROR
 0x0008

	)

92 
	#ADJ_STATUS
 0x0010

	)

93 
	#ADJ_TIMECONST
 0x0020

	)

94 
	#ADJ_TAI
 0x0080

	)

95 
	#ADJ_SETOFFSET
 0x0100

	)

96 
	#ADJ_MICRO
 0x1000

	)

97 
	#ADJ_NANO
 0x2000

	)

98 
	#ADJ_TICK
 0x4000

	)

99 
	#ADJ_OFFSET_SINGLESHOT
 0x8001

	)

100 
	#ADJ_OFFSET_SS_READ
 0xa001

	)

103 
	#MOD_OFFSET
 
ADJ_OFFSET


	)

104 
	#MOD_FREQUENCY
 
ADJ_FREQUENCY


	)

105 
	#MOD_MAXERROR
 
ADJ_MAXERROR


	)

106 
	#MOD_ESTERROR
 
ADJ_ESTERROR


	)

107 
	#MOD_STATUS
 
ADJ_STATUS


	)

108 
	#MOD_TIMECONST
 
ADJ_TIMECONST


	)

109 
	#MOD_CLKB
 
ADJ_TICK


	)

110 
	#MOD_CLKA
 
ADJ_OFFSET_SINGLESHOT


	)

111 
	#MOD_TAI
 
ADJ_TAI


	)

112 
	#MOD_MICRO
 
ADJ_MICRO


	)

113 
	#MOD_NANO
 
ADJ_NANO


	)

117 
	#STA_PLL
 0x0001

	)

118 
	#STA_PPSFREQ
 0x0002

	)

119 
	#STA_PPSTIME
 0x0004

	)

120 
	#STA_FLL
 0x0008

	)

122 
	#STA_INS
 0x0010

	)

123 
	#STA_DEL
 0x0020

	)

124 
	#STA_UNSYNC
 0x0040

	)

125 
	#STA_FREQHOLD
 0x0080

	)

127 
	#STA_PPSSIGNAL
 0x0100

	)

128 
	#STA_PPSJITTER
 0x0200

	)

129 
	#STA_PPSWANDER
 0x0400

	)

130 
	#STA_PPSERROR
 0x0800

	)

132 
	#STA_CLOCKERR
 0x1000

	)

133 
	#STA_NANO
 0x2000

	)

134 
	#STA_MODE
 0x4000

	)

135 
	#STA_CLK
 0x8000

	)

138 
	#STA_RONLY
 (
STA_PPSSIGNAL
 | 
STA_PPSJITTER
 | 
STA_PPSWANDER
 \

139 | 
STA_PPSERROR
 | 
STA_CLOCKERR
 | 
STA_NANO
 | 
STA_MODE
 | 
STA_CLK
)

	)

	@/usr/include/bits/types/struct_sched_param.h

19 #i‚de‡
_BITS_TYPES_STRUCT_SCHED_PARAM


20 
	#_BITS_TYPES_STRUCT_SCHED_PARAM
 1

	)

23 
	ssched_∑øm


25 
	msched_¥i‹ôy
;

	@/usr/include/bits/uintn-identity.h

19 #i‡!
deföed
 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


23 #i‚de‡
_BITS_UINTN_IDENTITY_H


24 
	#_BITS_UINTN_IDENTITY_H
 1

	)

26 
	~<bôs/ty≥s.h
>

32 
__ölöe
 
__uöt16_t


33 
	$__uöt16_idítôy
 (
__uöt16_t
 
__x
)

35  
__x
;

36 
	}
}

38 
__ölöe
 
__uöt32_t


39 
	$__uöt32_idítôy
 (
__uöt32_t
 
__x
)

41  
__x
;

42 
	}
}

44 
__ölöe
 
__uöt64_t


45 
	$__uöt64_idítôy
 (
__uöt64_t
 
__x
)

47  
__x
;

48 
	}
}

	@/usr/include/gnu/stubs-32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub_chÊags


	)

11 
	#__°ub_fchÊags


	)

12 
	#__°ub_gây


	)

13 
	#__°ub_ªvoke


	)

14 
	#__°ub_£éogö


	)

15 
	#__°ub_sigªtu∫


	)

16 
	#__°ub_°ty


	)

	@/usr/include/gnu/stubs-64.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___com∑t_bdÊush


	)

11 
	#__°ub_chÊags


	)

12 
	#__°ub_fchÊags


	)

13 
	#__°ub_gây


	)

14 
	#__°ub_ªvoke


	)

15 
	#__°ub_£éogö


	)

16 
	#__°ub_sigªtu∫


	)

17 
	#__°ub_°ty


	)

	@/usr/include/asm-generic/errno.h

2 #i‚de‡
_ASM_GENERIC_ERRNO_H


3 
	#_ASM_GENERIC_ERRNO_H


	)

5 
	~<asm-gíîic/î∫o-ba£.h
>

7 
	#EDEADLK
 35

	)

8 
	#ENAMETOOLONG
 36

	)

9 
	#ENOLCK
 37

	)

18 
	#ENOSYS
 38

	)

20 
	#ENOTEMPTY
 39

	)

21 
	#ELOOP
 40

	)

22 
	#EWOULDBLOCK
 
EAGAIN


	)

23 
	#ENOMSG
 42

	)

24 
	#EIDRM
 43

	)

25 
	#ECHRNG
 44

	)

26 
	#EL2NSYNC
 45

	)

27 
	#EL3HLT
 46

	)

28 
	#EL3RST
 47

	)

29 
	#ELNRNG
 48

	)

30 
	#EUNATCH
 49

	)

31 
	#ENOCSI
 50

	)

32 
	#EL2HLT
 51

	)

33 
	#EBADE
 52

	)

34 
	#EBADR
 53

	)

35 
	#EXFULL
 54

	)

36 
	#ENOANO
 55

	)

37 
	#EBADRQC
 56

	)

38 
	#EBADSLT
 57

	)

40 
	#EDEADLOCK
 
EDEADLK


	)

42 
	#EBFONT
 59

	)

43 
	#ENOSTR
 60

	)

44 
	#ENODATA
 61

	)

45 
	#ETIME
 62

	)

46 
	#ENOSR
 63

	)

47 
	#ENONET
 64

	)

48 
	#ENOPKG
 65

	)

49 
	#EREMOTE
 66

	)

50 
	#ENOLINK
 67

	)

51 
	#EADV
 68

	)

52 
	#ESRMNT
 69

	)

53 
	#ECOMM
 70

	)

54 
	#EPROTO
 71

	)

55 
	#EMULTIHOP
 72

	)

56 
	#EDOTDOT
 73

	)

57 
	#EBADMSG
 74

	)

58 
	#EOVERFLOW
 75

	)

59 
	#ENOTUNIQ
 76

	)

60 
	#EBADFD
 77

	)

61 
	#EREMCHG
 78

	)

62 
	#ELIBACC
 79

	)

63 
	#ELIBBAD
 80

	)

64 
	#ELIBSCN
 81

	)

65 
	#ELIBMAX
 82

	)

66 
	#ELIBEXEC
 83

	)

67 
	#EILSEQ
 84

	)

68 
	#ERESTART
 85

	)

69 
	#ESTRPIPE
 86

	)

70 
	#EUSERS
 87

	)

71 
	#ENOTSOCK
 88

	)

72 
	#EDESTADDRREQ
 89

	)

73 
	#EMSGSIZE
 90

	)

74 
	#EPROTOTYPE
 91

	)

75 
	#ENOPROTOOPT
 92

	)

76 
	#EPROTONOSUPPORT
 93

	)

77 
	#ESOCKTNOSUPPORT
 94

	)

78 
	#EOPNOTSUPP
 95

	)

79 
	#EPFNOSUPPORT
 96

	)

80 
	#EAFNOSUPPORT
 97

	)

81 
	#EADDRINUSE
 98

	)

82 
	#EADDRNOTAVAIL
 99

	)

83 
	#ENETDOWN
 100

	)

84 
	#ENETUNREACH
 101

	)

85 
	#ENETRESET
 102

	)

86 
	#ECONNABORTED
 103

	)

87 
	#ECONNRESET
 104

	)

88 
	#ENOBUFS
 105

	)

89 
	#EISCONN
 106

	)

90 
	#ENOTCONN
 107

	)

91 
	#ESHUTDOWN
 108

	)

92 
	#ETOOMANYREFS
 109

	)

93 
	#ETIMEDOUT
 110

	)

94 
	#ECONNREFUSED
 111

	)

95 
	#EHOSTDOWN
 112

	)

96 
	#EHOSTUNREACH
 113

	)

97 
	#EALREADY
 114

	)

98 
	#EINPROGRESS
 115

	)

99 
	#ESTALE
 116

	)

100 
	#EUCLEAN
 117

	)

101 
	#ENOTNAM
 118

	)

102 
	#ENAVAIL
 119

	)

103 
	#EISNAM
 120

	)

104 
	#EREMOTEIO
 121

	)

105 
	#EDQUOT
 122

	)

107 
	#ENOMEDIUM
 123

	)

108 
	#EMEDIUMTYPE
 124

	)

109 
	#ECANCELED
 125

	)

110 
	#ENOKEY
 126

	)

111 
	#EKEYEXPIRED
 127

	)

112 
	#EKEYREVOKED
 128

	)

113 
	#EKEYREJECTED
 129

	)

116 
	#EOWNERDEAD
 130

	)

117 
	#ENOTRECOVERABLE
 131

	)

119 
	#ERFKILL
 132

	)

121 
	#EHWPOISON
 133

	)

	@/usr/include/asm-generic/errno-base.h

2 #i‚de‡
_ASM_GENERIC_ERRNO_BASE_H


3 
	#_ASM_GENERIC_ERRNO_BASE_H


	)

5 
	#EPERM
 1

	)

6 
	#ENOENT
 2

	)

7 
	#ESRCH
 3

	)

8 
	#EINTR
 4

	)

9 
	#EIO
 5

	)

10 
	#ENXIO
 6

	)

11 
	#E2BIG
 7

	)

12 
	#ENOEXEC
 8

	)

13 
	#EBADF
 9

	)

14 
	#ECHILD
 10

	)

15 
	#EAGAIN
 11

	)

16 
	#ENOMEM
 12

	)

17 
	#EACCES
 13

	)

18 
	#EFAULT
 14

	)

19 
	#ENOTBLK
 15

	)

20 
	#EBUSY
 16

	)

21 
	#EEXIST
 17

	)

22 
	#EXDEV
 18

	)

23 
	#ENODEV
 19

	)

24 
	#ENOTDIR
 20

	)

25 
	#EISDIR
 21

	)

26 
	#EINVAL
 22

	)

27 
	#ENFILE
 23

	)

28 
	#EMFILE
 24

	)

29 
	#ENOTTY
 25

	)

30 
	#ETXTBSY
 26

	)

31 
	#EFBIG
 27

	)

32 
	#ENOSPC
 28

	)

33 
	#ESPIPE
 29

	)

34 
	#EROFS
 30

	)

35 
	#EMLINK
 31

	)

36 
	#EPIPE
 32

	)

37 
	#EDOM
 33

	)

38 
	#ERANGE
 34

	)

	@
1
.
1
/usr/include
118
3290
config.h
driver_i2c.c
driver_i2c.h
log.h
main.c
queue_lib.c
queue_lib.h
queues_lib.c
task_a.c
task_a.h
task_b.c
task_b.h
task_c.c
task_c.h
task_i2c.c
task_i2c.h
timing.c
timing.h
/usr/include/errno.h
/usr/include/pthread.h
/usr/include/stdint.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/sys/time.h
/usr/include/unistd.h
/usr/include/alloca.h
/usr/include/bits/confname.h
/usr/include/bits/endian.h
/usr/include/bits/environments.h
/usr/include/bits/errno.h
/usr/include/bits/floatn.h
/usr/include/bits/getopt_posix.h
/usr/include/bits/libc-header-start.h
/usr/include/bits/posix_opt.h
/usr/include/bits/pthread_stack_min-dynamic.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/setjmp.h
/usr/include/bits/stdint-intn.h
/usr/include/bits/stdint-least.h
/usr/include/bits/stdint-uintn.h
/usr/include/bits/stdio-ldbl.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2-decl.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/stdlib-bsearch.h
/usr/include/bits/stdlib-float.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/types.h
/usr/include/bits/types/FILE.h
/usr/include/bits/types/__FILE.h
/usr/include/bits/types/__fpos64_t.h
/usr/include/bits/types/__fpos_t.h
/usr/include/bits/types/__sigset_t.h
/usr/include/bits/types/cookie_io_functions_t.h
/usr/include/bits/types/error_t.h
/usr/include/bits/types/locale_t.h
/usr/include/bits/types/struct_FILE.h
/usr/include/bits/types/struct___jmp_buf_tag.h
/usr/include/bits/types/struct_timespec.h
/usr/include/bits/types/struct_timeval.h
/usr/include/bits/types/time_t.h
/usr/include/bits/unistd.h
/usr/include/bits/unistd_ext.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/bits/wchar.h
/usr/include/bits/wordsize.h
/usr/include/features.h
/usr/include/sched.h
/usr/include/sys/select.h
/usr/include/sys/types.h
/usr/include/time.h
/usr/include/bits/cpu-set.h
/usr/include/bits/endianness.h
/usr/include/bits/floatn-common.h
/usr/include/bits/getopt_core.h
/usr/include/bits/pthread_stack_min.h
/usr/include/bits/sched.h
/usr/include/bits/select.h
/usr/include/bits/select2.h
/usr/include/bits/thread-shared-types.h
/usr/include/bits/time.h
/usr/include/bits/time64.h
/usr/include/bits/timesize.h
/usr/include/bits/types/__locale_t.h
/usr/include/bits/types/__mbstate_t.h
/usr/include/bits/types/clock_t.h
/usr/include/bits/types/clockid_t.h
/usr/include/bits/types/sigset_t.h
/usr/include/bits/types/struct_itimerspec.h
/usr/include/bits/types/struct_tm.h
/usr/include/bits/types/timer_t.h
/usr/include/bits/typesizes.h
/usr/include/bits/unistd-decl.h
/usr/include/endian.h
/usr/include/features-time64.h
/usr/include/gnu/stubs.h
/usr/include/linux/close_range.h
/usr/include/linux/errno.h
/usr/include/stdc-predef.h
/usr/include/sys/cdefs.h
/usr/include/asm/errno.h
/usr/include/bits/atomic_wide_counter.h
/usr/include/bits/byteswap.h
/usr/include/bits/long-double.h
/usr/include/bits/pthreadtypes-arch.h
/usr/include/bits/select-decl.h
/usr/include/bits/struct_mutex.h
/usr/include/bits/struct_rwlock.h
/usr/include/bits/timex.h
/usr/include/bits/types/struct_sched_param.h
/usr/include/bits/uintn-identity.h
/usr/include/gnu/stubs-32.h
/usr/include/gnu/stubs-64.h
/usr/include/asm-generic/errno.h
/usr/include/asm-generic/errno-base.h
